import { __esmMin as e, __export as t } from "./chunk-GxRd6SvM.min.js";
var n = {};
t(n, { default: () => x, process: () => x });
function r(e2) {
  return e2 && e2.__esModule && Object.prototype.hasOwnProperty.call(e2, `default`) ? e2.default : e2;
}
function i() {
  throw Error(`setTimeout has not been defined`);
}
function a() {
  throw Error(`clearTimeout has not been defined`);
}
function o(e2) {
  if (m === setTimeout) return setTimeout(e2, 0);
  if ((m === i || !m) && setTimeout) return m = setTimeout, setTimeout(e2, 0);
  try {
    return m(e2, 0);
  } catch {
    try {
      return m.call(null, e2, 0);
    } catch {
      return m.call(this, e2, 0);
    }
  }
}
function s(e2) {
  if (h === clearTimeout) return clearTimeout(e2);
  if ((h === a || !h) && clearTimeout) return h = clearTimeout, clearTimeout(e2);
  try {
    return h(e2);
  } catch {
    try {
      return h.call(null, e2);
    } catch {
      return h.call(this, e2);
    }
  }
}
function c() {
  !_ || !v || (_ = false, v.length ? g = v.concat(g) : y = -1, g.length && l());
}
function l() {
  if (!_) {
    var e2 = o(c);
    _ = true;
    for (var t2 = g.length; t2; ) {
      for (v = g, g = []; ++y < t2; ) v && v[y].run();
      y = -1, t2 = g.length;
    }
    v = null, _ = false, s(e2);
  }
}
function u(e2, t2) {
  this.fun = e2, this.array = t2;
}
function d() {
}
var f, p, m, h, g, _, v, y, b, x, S = e(() => {
  f = { exports: {} }, p = f.exports = {}, function() {
    try {
      m = typeof setTimeout == `function` ? setTimeout : i;
    } catch {
      m = i;
    }
    try {
      h = typeof clearTimeout == `function` ? clearTimeout : a;
    } catch {
      h = a;
    }
  }(), g = [], _ = false, y = -1, p.nextTick = function(e2) {
    var t2 = Array(arguments.length - 1);
    if (arguments.length > 1) for (var n2 = 1; n2 < arguments.length; n2++) t2[n2 - 1] = arguments[n2];
    g.push(new u(e2, t2)), g.length === 1 && !_ && o(l);
  }, u.prototype.run = function() {
    this.fun.apply(null, this.array);
  }, p.title = `browser`, p.browser = true, p.env = {}, p.argv = [], p.version = ``, p.versions = {}, p.on = d, p.addListener = d, p.once = d, p.off = d, p.removeListener = d, p.removeAllListeners = d, p.emit = d, p.prependListener = d, p.prependOnceListener = d, p.listeners = function(e2) {
    return [];
  }, p.binding = function(e2) {
    throw Error(`process.binding is not supported`);
  }, p.cwd = function() {
    return `/`;
  }, p.chdir = function(e2) {
    throw Error(`process.chdir is not supported`);
  }, p.umask = function() {
    return 0;
  }, b = f.exports, x = r(b);
});
export {
  n as dist_exports$1,
  S as init_dist$2,
  x as process$1
};
