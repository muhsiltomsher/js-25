import { __commonJSMin as e } from "./chunk-GxRd6SvM.min.js";
import { init_dist$2 as t, process$1 as n } from "./dist-Doa7WVF-.min.js";
var r = e((exports, r2) => {
  t();
  function i(e2) {
    if (typeof e2 != `string`) throw TypeError(`Path must be a string. Received ` + JSON.stringify(e2));
  }
  function a(e2, t2) {
    for (var n2 = ``, r3 = 0, i2 = -1, a2 = 0, o2, s2 = 0; s2 <= e2.length; ++s2) {
      if (s2 < e2.length) o2 = e2.charCodeAt(s2);
      else if (o2 === 47) break;
      else o2 = 47;
      if (o2 === 47) {
        if (!(i2 === s2 - 1 || a2 === 1)) if (i2 !== s2 - 1 && a2 === 2) {
          if (n2.length < 2 || r3 !== 2 || n2.charCodeAt(n2.length - 1) !== 46 || n2.charCodeAt(n2.length - 2) !== 46) {
            if (n2.length > 2) {
              var c = n2.lastIndexOf(`/`);
              if (c !== n2.length - 1) {
                c === -1 ? (n2 = ``, r3 = 0) : (n2 = n2.slice(0, c), r3 = n2.length - 1 - n2.lastIndexOf(`/`)), i2 = s2, a2 = 0;
                continue;
              }
            } else if (n2.length === 2 || n2.length === 1) {
              n2 = ``, r3 = 0, i2 = s2, a2 = 0;
              continue;
            }
          }
          t2 && (n2.length > 0 ? n2 += `/..` : n2 = `..`, r3 = 2);
        } else n2.length > 0 ? n2 += `/` + e2.slice(i2 + 1, s2) : n2 = e2.slice(i2 + 1, s2), r3 = s2 - i2 - 1;
        i2 = s2, a2 = 0;
      } else o2 === 46 && a2 !== -1 ? ++a2 : a2 = -1;
    }
    return n2;
  }
  function o(e2, t2) {
    var n2 = t2.dir || t2.root, r3 = t2.base || (t2.name || ``) + (t2.ext || ``);
    return n2 ? n2 === t2.root ? n2 + r3 : n2 + e2 + r3 : r3;
  }
  var s = { resolve: function() {
    for (var e2 = ``, t2 = false, r3, o2 = arguments.length - 1; o2 >= -1 && !t2; o2--) {
      var s2;
      o2 >= 0 ? s2 = arguments[o2] : (r3 === void 0 && (r3 = n.cwd()), s2 = r3), i(s2), s2.length !== 0 && (e2 = s2 + `/` + e2, t2 = s2.charCodeAt(0) === 47);
    }
    return e2 = a(e2, !t2), t2 ? e2.length > 0 ? `/` + e2 : `/` : e2.length > 0 ? e2 : `.`;
  }, normalize: function(e2) {
    if (i(e2), e2.length === 0) return `.`;
    var t2 = e2.charCodeAt(0) === 47, n2 = e2.charCodeAt(e2.length - 1) === 47;
    return e2 = a(e2, !t2), e2.length === 0 && !t2 && (e2 = `.`), e2.length > 0 && n2 && (e2 += `/`), t2 ? `/` + e2 : e2;
  }, isAbsolute: function(e2) {
    return i(e2), e2.length > 0 && e2.charCodeAt(0) === 47;
  }, join: function() {
    if (arguments.length === 0) return `.`;
    for (var e2, t2 = 0; t2 < arguments.length; ++t2) {
      var n2 = arguments[t2];
      i(n2), n2.length > 0 && (e2 === void 0 ? e2 = n2 : e2 += `/` + n2);
    }
    return e2 === void 0 ? `.` : s.normalize(e2);
  }, relative: function(e2, t2) {
    if (i(e2), i(t2), e2 === t2 || (e2 = s.resolve(e2), t2 = s.resolve(t2), e2 === t2)) return ``;
    for (var n2 = 1; n2 < e2.length && e2.charCodeAt(n2) === 47; ++n2) ;
    for (var r3 = e2.length, a2 = r3 - n2, o2 = 1; o2 < t2.length && t2.charCodeAt(o2) === 47; ++o2) ;
    for (var c = t2.length, l = c - o2, u = a2 < l ? a2 : l, d = -1, f = 0; f <= u; ++f) {
      if (f === u) {
        if (l > u) {
          if (t2.charCodeAt(o2 + f) === 47) return t2.slice(o2 + f + 1);
          if (f === 0) return t2.slice(o2 + f);
        } else a2 > u && (e2.charCodeAt(n2 + f) === 47 ? d = f : f === 0 && (d = 0));
        break;
      }
      var p = e2.charCodeAt(n2 + f), m = t2.charCodeAt(o2 + f);
      if (p !== m) break;
      p === 47 && (d = f);
    }
    var h = ``;
    for (f = n2 + d + 1; f <= r3; ++f) (f === r3 || e2.charCodeAt(f) === 47) && (h.length === 0 ? h += `..` : h += `/..`);
    return h.length > 0 ? h + t2.slice(o2 + d) : (o2 += d, t2.charCodeAt(o2) === 47 && ++o2, t2.slice(o2));
  }, _makeLong: function(e2) {
    return e2;
  }, dirname: function(e2) {
    if (i(e2), e2.length === 0) return `.`;
    for (var t2 = e2.charCodeAt(0), n2 = t2 === 47, r3 = -1, a2 = true, o2 = e2.length - 1; o2 >= 1; --o2) if (t2 = e2.charCodeAt(o2), t2 === 47) {
      if (!a2) {
        r3 = o2;
        break;
      }
    } else a2 = false;
    return r3 === -1 ? n2 ? `/` : `.` : n2 && r3 === 1 ? `//` : e2.slice(0, r3);
  }, basename: function(e2, t2) {
    if (t2 !== void 0 && typeof t2 != `string`) throw TypeError(`"ext" argument must be a string`);
    i(e2);
    var n2 = 0, r3 = -1, a2 = true, o2;
    if (t2 !== void 0 && t2.length > 0 && t2.length <= e2.length) {
      if (t2.length === e2.length && t2 === e2) return ``;
      var s2 = t2.length - 1, c = -1;
      for (o2 = e2.length - 1; o2 >= 0; --o2) {
        var l = e2.charCodeAt(o2);
        if (l === 47) {
          if (!a2) {
            n2 = o2 + 1;
            break;
          }
        } else c === -1 && (a2 = false, c = o2 + 1), s2 >= 0 && (l === t2.charCodeAt(s2) ? --s2 === -1 && (r3 = o2) : (s2 = -1, r3 = c));
      }
      return n2 === r3 ? r3 = c : r3 === -1 && (r3 = e2.length), e2.slice(n2, r3);
    } else {
      for (o2 = e2.length - 1; o2 >= 0; --o2) if (e2.charCodeAt(o2) === 47) {
        if (!a2) {
          n2 = o2 + 1;
          break;
        }
      } else r3 === -1 && (a2 = false, r3 = o2 + 1);
      return r3 === -1 ? `` : e2.slice(n2, r3);
    }
  }, extname: function(e2) {
    i(e2);
    for (var t2 = -1, n2 = 0, r3 = -1, a2 = true, o2 = 0, s2 = e2.length - 1; s2 >= 0; --s2) {
      var c = e2.charCodeAt(s2);
      if (c === 47) {
        if (!a2) {
          n2 = s2 + 1;
          break;
        }
        continue;
      }
      r3 === -1 && (a2 = false, r3 = s2 + 1), c === 46 ? t2 === -1 ? t2 = s2 : o2 !== 1 && (o2 = 1) : t2 !== -1 && (o2 = -1);
    }
    return t2 === -1 || r3 === -1 || o2 === 0 || o2 === 1 && t2 === r3 - 1 && t2 === n2 + 1 ? `` : e2.slice(t2, r3);
  }, format: function(e2) {
    if (typeof e2 != `object` || !e2) throw TypeError(`The "pathObject" argument must be of type Object. Received type ` + typeof e2);
    return o(`/`, e2);
  }, parse: function(e2) {
    i(e2);
    var t2 = { root: ``, dir: ``, base: ``, ext: ``, name: `` };
    if (e2.length === 0) return t2;
    var n2 = e2.charCodeAt(0), r3 = n2 === 47, a2;
    r3 ? (t2.root = `/`, a2 = 1) : a2 = 0;
    for (var o2 = -1, s2 = 0, c = -1, l = true, u = e2.length - 1, d = 0; u >= a2; --u) {
      if (n2 = e2.charCodeAt(u), n2 === 47) {
        if (!l) {
          s2 = u + 1;
          break;
        }
        continue;
      }
      c === -1 && (l = false, c = u + 1), n2 === 46 ? o2 === -1 ? o2 = u : d !== 1 && (d = 1) : o2 !== -1 && (d = -1);
    }
    return o2 === -1 || c === -1 || d === 0 || d === 1 && o2 === c - 1 && o2 === s2 + 1 ? c !== -1 && (s2 === 0 && r3 ? t2.base = t2.name = e2.slice(1, c) : t2.base = t2.name = e2.slice(s2, c)) : (s2 === 0 && r3 ? (t2.name = e2.slice(1, o2), t2.base = e2.slice(1, c)) : (t2.name = e2.slice(s2, o2), t2.base = e2.slice(s2, c)), t2.ext = e2.slice(o2, c)), s2 > 0 ? t2.dir = e2.slice(0, s2 - 1) : r3 && (t2.dir = `/`), t2;
  }, sep: `/`, delimiter: `:`, win32: null, posix: null };
  s.posix = s, r2.exports = s;
});
export {
  r as require_path_browserify
};
