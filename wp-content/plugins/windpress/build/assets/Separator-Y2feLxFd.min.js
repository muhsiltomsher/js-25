import { Fragment as e, computed as t, createBaseVNode as n, createBlock as r, createCommentVNode as i, createElementBlock as a, defineComponent as o, guardReactiveProps as s, mergeProps as c, normalizeClass as l, normalizeProps as u, openBlock as d, renderSlot as f, toDisplayString as p, unref as m, useSlots as h, withCtx as g } from "./runtime-core.esm-bundler-CFIgNHFT.min.js";
import { Icon_default as _, Primitive as v, tv as y, useAppConfig as b, useForwardProps as x } from "./Link-83qDN5tY.min.js";
import { reactivePick as S } from "./core-DXhlFaDq.min.js";
import { Avatar_default as C } from "./Button-DeZRGJ9-.min.js";
const w = o({ __name: `BaseSeparator`, props: { orientation: { default: `horizontal` }, decorative: { type: Boolean }, asChild: { type: Boolean }, as: {} }, setup(e2) {
  let n2 = e2, i2 = [`horizontal`, `vertical`];
  function a2(e3) {
    return i2.includes(e3);
  }
  let o2 = t(() => a2(n2.orientation) ? n2.orientation : `horizontal`), s2 = t(() => o2.value === `vertical` ? n2.orientation : void 0), l2 = t(() => n2.decorative ? { role: `none` } : { "aria-orientation": s2.value, role: `separator` });
  return (e3, t2) => (d(), r(m(v), c({ as: e3.as, "as-child": e3.asChild, "data-orientation": o2.value }, l2.value), { default: g(() => [f(e3.$slots, `default`)]), _: 3 }, 16, [`as`, `as-child`, `data-orientation`]));
} }), T = o({ __name: `Separator`, props: { orientation: { default: `horizontal` }, decorative: { type: Boolean }, asChild: { type: Boolean }, as: {} }, setup(e2) {
  let t2 = e2;
  return (e3, n2) => (d(), r(w, u(s(t2)), { default: g(() => [f(e3.$slots, `default`)]), _: 3 }, 16));
} });
var E = { slots: { root: `flex items-center align-center text-center`, border: ``, container: `font-medium text-default flex`, icon: `shrink-0 size-5`, avatar: `shrink-0`, avatarSize: `2xs`, label: `text-sm` }, variants: { color: { primary: { border: `border-primary` }, secondary: { border: `border-secondary` }, success: { border: `border-success` }, info: { border: `border-info` }, warning: { border: `border-warning` }, error: { border: `border-error` }, neutral: { border: `border-default` } }, orientation: { horizontal: { root: `w-full flex-row`, border: `w-full`, container: `mx-3 whitespace-nowrap` }, vertical: { root: `h-full flex-col`, border: `h-full`, container: `my-2` } }, size: { xs: ``, sm: ``, md: ``, lg: ``, xl: `` }, type: { solid: { border: `border-solid` }, dashed: { border: `border-dashed` }, dotted: { border: `border-dotted` } } }, compoundVariants: [{ orientation: `horizontal`, size: `xs`, class: { border: `border-t` } }, { orientation: `horizontal`, size: `sm`, class: { border: `border-t-[2px]` } }, { orientation: `horizontal`, size: `md`, class: { border: `border-t-[3px]` } }, { orientation: `horizontal`, size: `lg`, class: { border: `border-t-[4px]` } }, { orientation: `horizontal`, size: `xl`, class: { border: `border-t-[5px]` } }, { orientation: `vertical`, size: `xs`, class: { border: `border-s` } }, { orientation: `vertical`, size: `sm`, class: { border: `border-s-[2px]` } }, { orientation: `vertical`, size: `md`, class: { border: `border-s-[3px]` } }, { orientation: `vertical`, size: `lg`, class: { border: `border-s-[4px]` } }, { orientation: `vertical`, size: `xl`, class: { border: `border-s-[5px]` } }], defaultVariants: { color: `neutral`, size: `xs`, type: `solid` } };
const D = { __name: `Separator`, props: { as: { type: null, required: false }, label: { type: String, required: false }, icon: { type: String, required: false }, avatar: { type: Object, required: false }, color: { type: null, required: false }, size: { type: null, required: false }, type: { type: null, required: false }, orientation: { type: null, required: false, default: `horizontal` }, class: { type: null, required: false }, ui: { type: null, required: false }, decorative: { type: Boolean, required: false } }, setup(o2) {
  let s2 = o2, u2 = h(), v2 = b(), w2 = x(S(s2, `as`, `decorative`, `orientation`)), D2 = t(() => {
    var _a;
    return y({ extend: y(E), ...((_a = v2.ui) == null ? void 0 : _a.separator) || {} })({ color: s2.color, orientation: s2.orientation, size: s2.size, type: s2.type });
  });
  return (t2, h2) => {
    var _a;
    return d(), r(m(T), c(m(w2), { class: D2.value.root({ class: [(_a = s2.ui) == null ? void 0 : _a.root, s2.class] }) }), { default: g(() => {
      var _a2, _b, _c;
      return [n(`div`, { class: l(D2.value.border({ class: (_a2 = s2.ui) == null ? void 0 : _a2.border })) }, null, 2), o2.label || o2.icon || o2.avatar || u2.default ? (d(), a(e, { key: 0 }, [n(`div`, { class: l(D2.value.container({ class: (_b = s2.ui) == null ? void 0 : _b.container })) }, [f(t2.$slots, `default`, {}, () => {
        var _a3, _b2, _c2, _d;
        return [o2.label ? (d(), a(`span`, { key: 0, class: l(D2.value.label({ class: (_a3 = s2.ui) == null ? void 0 : _a3.label })) }, p(o2.label), 3)) : o2.icon ? (d(), r(_, { key: 1, name: o2.icon, class: l(D2.value.icon({ class: (_b2 = s2.ui) == null ? void 0 : _b2.icon })) }, null, 8, [`name`, `class`])) : o2.avatar ? (d(), r(C, c({ key: 2, size: ((_c2 = s2.ui) == null ? void 0 : _c2.avatarSize) || D2.value.avatarSize() }, o2.avatar, { class: D2.value.avatar({ class: (_d = s2.ui) == null ? void 0 : _d.avatar }) }), null, 16, [`size`, `class`])) : i(``, true)];
      })], 2), n(`div`, { class: l(D2.value.border({ class: (_c = s2.ui) == null ? void 0 : _c.border })) }, null, 2)], 64)) : i(``, true)];
    }), _: 3 }, 16, [`class`]);
  };
} };
var O = D;
export {
  O as Separator_default
};
