import { __export as e, __toESM as t } from "./chunk-GxRd6SvM.min.js";
import { require_source_map_generator as n } from "./source-map-generator-CbHQi4uj.min.js";
const r = 0, i = 1, a = 2, o = 3, s = 4, c = 5, l = 6, u = 7, d = 8, f = 9, p = 10, m = 11, h = 12, g = 13, _ = 14, v = 15, y = 16, b = 17, x = 18, S = 19, C = 20, w = 21, T = 22, E = 23, D = 24, O = 25, ee = 0;
function k(e3) {
  return e3 >= 48 && e3 <= 57;
}
function A(e3) {
  return k(e3) || e3 >= 65 && e3 <= 70 || e3 >= 97 && e3 <= 102;
}
function te(e3) {
  return e3 >= 65 && e3 <= 90;
}
function ne(e3) {
  return e3 >= 97 && e3 <= 122;
}
function j(e3) {
  return te(e3) || ne(e3);
}
function M(e3) {
  return e3 >= 128;
}
function re(e3) {
  return j(e3) || M(e3) || e3 === 95;
}
function ie(e3) {
  return re(e3) || k(e3) || e3 === 45;
}
function ae(e3) {
  return e3 >= 0 && e3 <= 8 || e3 === 11 || e3 >= 14 && e3 <= 31 || e3 === 127;
}
function oe(e3) {
  return e3 === 10 || e3 === 13 || e3 === 12;
}
function se(e3) {
  return oe(e3) || e3 === 32 || e3 === 9;
}
function N(e3, t2) {
  return !(e3 !== 92 || oe(t2) || t2 === ee);
}
function ce(e3, t2, n2) {
  return e3 === 45 ? re(t2) || t2 === 45 || N(t2, n2) : re(e3) ? true : e3 === 92 ? N(e3, t2) : false;
}
function le(e3, t2, n2) {
  return e3 === 43 || e3 === 45 ? k(t2) ? 2 : t2 === 46 && k(n2) ? 3 : 0 : e3 === 46 ? k(t2) ? 2 : 0 : k(e3) ? 1 : 0;
}
function ue(e3) {
  return e3 === 65279 || e3 === 65534 ? 1 : 0;
}
const de = Array(128), fe = 128, pe = 130, me = 131, he = 132, ge = 133;
for (let e3 = 0; e3 < de.length; e3++) de[e3] = se(e3) && pe || k(e3) && me || re(e3) && he || ae(e3) && ge || e3 || fe;
function _e(e3) {
  return e3 < 128 ? de[e3] : he;
}
function ve(e3, t2) {
  return t2 < e3.length ? e3.charCodeAt(t2) : 0;
}
function ye(e3, t2, n2) {
  return n2 === 13 && ve(e3, t2 + 1) === 10 ? 2 : 1;
}
function be(e3, t2, n2) {
  let r2 = e3.charCodeAt(t2);
  return te(r2) && (r2 |= 32), r2 === n2;
}
function xe(e3, t2, n2, r2) {
  if (n2 - t2 !== r2.length || t2 < 0 || n2 > e3.length) return false;
  for (let i2 = t2; i2 < n2; i2++) {
    let n3 = r2.charCodeAt(i2 - t2), a2 = e3.charCodeAt(i2);
    if (te(a2) && (a2 |= 32), a2 !== n3) return false;
  }
  return true;
}
function Se(e3, t2) {
  for (; t2 >= 0 && se(e3.charCodeAt(t2)); t2--) ;
  return t2 + 1;
}
function Ce(e3, t2) {
  for (; t2 < e3.length && se(e3.charCodeAt(t2)); t2++) ;
  return t2;
}
function we(e3, t2) {
  for (; t2 < e3.length && k(e3.charCodeAt(t2)); t2++) ;
  return t2;
}
function Te(e3, t2) {
  if (t2 += 2, A(ve(e3, t2 - 1))) {
    for (let n3 = Math.min(e3.length, t2 + 5); t2 < n3 && A(ve(e3, t2)); t2++) ;
    let n2 = ve(e3, t2);
    se(n2) && (t2 += ye(e3, t2, n2));
  }
  return t2;
}
function Ee(e3, t2) {
  for (; t2 < e3.length; t2++) {
    let n2 = e3.charCodeAt(t2);
    if (!ie(n2)) {
      if (N(n2, ve(e3, t2 + 1))) {
        t2 = Te(e3, t2) - 1;
        continue;
      }
      break;
    }
  }
  return t2;
}
function De(e3, t2) {
  let n2 = e3.charCodeAt(t2);
  if ((n2 === 43 || n2 === 45) && (n2 = e3.charCodeAt(t2 += 1)), k(n2) && (t2 = we(e3, t2 + 1), n2 = e3.charCodeAt(t2)), n2 === 46 && k(e3.charCodeAt(t2 + 1)) && (t2 += 2, t2 = we(e3, t2)), be(e3, t2, 101)) {
    let r2 = 0;
    n2 = e3.charCodeAt(t2 + 1), (n2 === 45 || n2 === 43) && (r2 = 1, n2 = e3.charCodeAt(t2 + 2)), k(n2) && (t2 = we(e3, t2 + 1 + r2 + 1));
  }
  return t2;
}
function Oe(e3, t2) {
  for (; t2 < e3.length; t2++) {
    let n2 = e3.charCodeAt(t2);
    if (n2 === 41) {
      t2++;
      break;
    }
    N(n2, ve(e3, t2 + 1)) && (t2 = Te(e3, t2));
  }
  return t2;
}
function ke(e3) {
  if (e3.length === 1 && !A(e3.charCodeAt(0))) return e3[0];
  let t2 = parseInt(e3, 16);
  return (t2 === 0 || t2 >= 55296 && t2 <= 57343 || t2 > 1114111) && (t2 = 65533), String.fromCodePoint(t2);
}
var Ae = `EOF-token.ident-token.function-token.at-keyword-token.hash-token.string-token.bad-string-token.url-token.bad-url-token.delim-token.number-token.percentage-token.dimension-token.whitespace-token.CDO-token.CDC-token.colon-token.semicolon-token.comma-token.[-token.]-token.(-token.)-token.{-token.}-token.comment-token`.split(`.`);
const je = 16 * 1024;
function Me(e3 = null, t2) {
  return e3 === null || e3.length < t2 ? new Uint32Array(Math.max(t2 + 1024, je)) : e3;
}
const Ne = 10, Pe = 12, Fe = 13;
function Ie(e3) {
  let t2 = e3.source, n2 = t2.length, r2 = t2.length > 0 ? ue(t2.charCodeAt(0)) : 0, i2 = Me(e3.lines, n2), a2 = Me(e3.columns, n2), o2 = e3.startLine, s2 = e3.startColumn;
  for (let e4 = r2; e4 < n2; e4++) {
    let r3 = t2.charCodeAt(e4);
    i2[e4] = o2, a2[e4] = s2++, (r3 === Ne || r3 === Fe || r3 === Pe) && (r3 === Fe && e4 + 1 < n2 && t2.charCodeAt(e4 + 1) === Ne && (e4++, i2[e4] = o2, a2[e4] = s2), o2++, s2 = 1);
  }
  i2[n2] = o2, a2[n2] = s2, e3.lines = i2, e3.columns = a2, e3.computed = true;
}
var Le = class {
  constructor(e3, t2, n2, r2) {
    this.setSource(e3, t2, n2, r2), this.lines = null, this.columns = null;
  }
  setSource(e3 = ``, t2 = 0, n2 = 1, r2 = 1) {
    this.source = e3, this.startOffset = t2, this.startLine = n2, this.startColumn = r2, this.computed = false;
  }
  getLocation(e3, t2) {
    return this.computed || Ie(this), { source: t2, offset: this.startOffset + e3, line: this.lines[e3], column: this.columns[e3] };
  }
  getLocationRange(e3, t2, n2) {
    return this.computed || Ie(this), { source: n2, start: { offset: this.startOffset + e3, line: this.lines[e3], column: this.columns[e3] }, end: { offset: this.startOffset + t2, line: this.lines[t2], column: this.columns[t2] } };
  }
};
const P = 16777215, F = 24, I = new Uint8Array(32);
I[a] = T, I[w] = T, I[S] = C, I[E] = D;
function Re(e3) {
  return I[e3] !== 0;
}
var ze = class {
  constructor(e3, t2) {
    this.setSource(e3, t2);
  }
  reset() {
    this.eof = false, this.tokenIndex = -1, this.tokenType = 0, this.tokenStart = this.firstCharOffset, this.tokenEnd = this.firstCharOffset;
  }
  setSource(e3 = ``, t2 = () => {
  }) {
    e3 = String(e3 || ``);
    let n2 = e3.length, i2 = Me(this.offsetAndType, e3.length + 1), a2 = Me(this.balance, e3.length + 1), o2 = 0, s2 = -1, c2 = 0, l2 = e3.length;
    this.offsetAndType = null, this.balance = null, a2.fill(0), t2(e3, (e4, t3, n3) => {
      let r2 = o2++;
      if (i2[r2] = e4 << F | n3, s2 === -1 && (s2 = t3), a2[r2] = l2, e4 === c2) {
        let e5 = a2[l2];
        a2[l2] = r2, l2 = e5, c2 = I[i2[e5] >> F];
      } else Re(e4) && (l2 = r2, c2 = I[e4]);
    }), i2[o2] = r << F | n2, a2[o2] = o2;
    for (let e4 = 0; e4 < o2; e4++) {
      let t3 = a2[e4];
      if (t3 <= e4) {
        let n3 = a2[t3];
        n3 !== e4 && (a2[e4] = n3);
      } else t3 > o2 && (a2[e4] = o2);
    }
    this.source = e3, this.firstCharOffset = s2 === -1 ? 0 : s2, this.tokenCount = o2, this.offsetAndType = i2, this.balance = a2, this.reset(), this.next();
  }
  lookupType(e3) {
    return e3 += this.tokenIndex, e3 < this.tokenCount ? this.offsetAndType[e3] >> F : r;
  }
  lookupTypeNonSC(e3) {
    for (let t2 = this.tokenIndex; t2 < this.tokenCount; t2++) {
      let n2 = this.offsetAndType[t2] >> F;
      if (n2 !== g && n2 !== O && e3-- === 0) return n2;
    }
    return r;
  }
  lookupOffset(e3) {
    return e3 += this.tokenIndex, e3 < this.tokenCount ? this.offsetAndType[e3 - 1] & P : this.source.length;
  }
  lookupOffsetNonSC(e3) {
    for (let t2 = this.tokenIndex; t2 < this.tokenCount; t2++) {
      let n2 = this.offsetAndType[t2] >> F;
      if (n2 !== g && n2 !== O && e3-- === 0) return t2 - this.tokenIndex;
    }
    return r;
  }
  lookupValue(e3, t2) {
    return e3 += this.tokenIndex, e3 < this.tokenCount ? xe(this.source, this.offsetAndType[e3 - 1] & P, this.offsetAndType[e3] & P, t2) : false;
  }
  getTokenStart(e3) {
    return e3 === this.tokenIndex ? this.tokenStart : e3 > 0 ? e3 < this.tokenCount ? this.offsetAndType[e3 - 1] & P : this.offsetAndType[this.tokenCount] & P : this.firstCharOffset;
  }
  substrToCursor(e3) {
    return this.source.substring(e3, this.tokenStart);
  }
  isBalanceEdge(e3) {
    return this.balance[this.tokenIndex] < e3;
  }
  isDelim(e3, t2) {
    return t2 ? this.lookupType(t2) === f && this.source.charCodeAt(this.lookupOffset(t2)) === e3 : this.tokenType === f && this.source.charCodeAt(this.tokenStart) === e3;
  }
  skip(e3) {
    let t2 = this.tokenIndex + e3;
    t2 < this.tokenCount ? (this.tokenIndex = t2, this.tokenStart = this.offsetAndType[t2 - 1] & P, t2 = this.offsetAndType[t2], this.tokenType = t2 >> F, this.tokenEnd = t2 & P) : (this.tokenIndex = this.tokenCount, this.next());
  }
  next() {
    let e3 = this.tokenIndex + 1;
    e3 < this.tokenCount ? (this.tokenIndex = e3, this.tokenStart = this.tokenEnd, e3 = this.offsetAndType[e3], this.tokenType = e3 >> F, this.tokenEnd = e3 & P) : (this.eof = true, this.tokenIndex = this.tokenCount, this.tokenType = r, this.tokenStart = this.tokenEnd = this.source.length);
  }
  skipSC() {
    for (; this.tokenType === g || this.tokenType === O; ) this.next();
  }
  skipUntilBalanced(e3, t2) {
    let n2 = e3, r2 = 0, i2 = 0;
    loop: for (; n2 < this.tokenCount; n2++) {
      if (r2 = this.balance[n2], r2 < e3) break loop;
      switch (i2 = n2 > 0 ? this.offsetAndType[n2 - 1] & P : this.firstCharOffset, t2(this.source.charCodeAt(i2))) {
        case 1:
          break loop;
        case 2:
          n2++;
          break loop;
        default:
          Re(this.offsetAndType[n2] >> F) && (n2 = r2);
      }
    }
    this.skip(n2 - this.tokenIndex);
  }
  forEachToken(e3) {
    for (let t2 = 0, n2 = this.firstCharOffset; t2 < this.tokenCount; t2++) {
      let r2 = n2, i2 = this.offsetAndType[t2], a2 = i2 & P, o2 = i2 >> F;
      n2 = a2, e3(o2, r2, a2, t2);
    }
  }
  dump() {
    let e3 = Array(this.tokenCount);
    return this.forEachToken((t2, n2, r2, i2) => {
      e3[i2] = { idx: i2, type: Ae[t2], chunk: this.source.substring(n2, r2), balance: this.balance[i2] };
    }), e3;
  }
};
function Be(e3, t2) {
  function n2(t3) {
    return t3 < te2 ? e3.charCodeAt(t3) : 0;
  }
  function r2() {
    if (j2 = De(e3, j2), ce(n2(j2), n2(j2 + 1), n2(j2 + 2))) {
      M2 = h, j2 = Ee(e3, j2);
      return;
    }
    if (n2(j2) === 37) {
      M2 = m, j2++;
      return;
    }
    M2 = p;
  }
  function ee2() {
    let t3 = j2;
    if (j2 = Ee(e3, j2), xe(e3, t3, j2, `url`) && n2(j2) === 40) {
      if (j2 = Ce(e3, j2 + 1), n2(j2) === 34 || n2(j2) === 39) {
        M2 = a, j2 = t3 + 4;
        return;
      }
      A2();
      return;
    }
    if (n2(j2) === 40) {
      M2 = a, j2++;
      return;
    }
    M2 = i;
  }
  function k2(t3) {
    for (t3 || (t3 = n2(j2++)), M2 = c; j2 < e3.length; j2++) {
      let r3 = e3.charCodeAt(j2);
      switch (_e(r3)) {
        case t3:
          j2++;
          return;
        case pe:
          if (oe(r3)) {
            j2 += ye(e3, j2, r3), M2 = l;
            return;
          }
          break;
        case 92:
          if (j2 === e3.length - 1) break;
          let i2 = n2(j2 + 1);
          oe(i2) ? j2 += ye(e3, j2 + 1, i2) : N(r3, i2) && (j2 = Te(e3, j2) - 1);
          break;
      }
    }
  }
  function A2() {
    for (M2 = u, j2 = Ce(e3, j2); j2 < e3.length; j2++) {
      let t3 = e3.charCodeAt(j2);
      switch (_e(t3)) {
        case 41:
          j2++;
          return;
        case pe:
          if (j2 = Ce(e3, j2), n2(j2) === 41 || j2 >= e3.length) {
            j2 < e3.length && j2++;
            return;
          }
          j2 = Oe(e3, j2), M2 = d;
          return;
        case 34:
        case 39:
        case 40:
        case ge:
          j2 = Oe(e3, j2), M2 = d;
          return;
        case 92:
          if (N(t3, n2(j2 + 1))) {
            j2 = Te(e3, j2) - 1;
            break;
          }
          j2 = Oe(e3, j2), M2 = d;
          return;
      }
    }
  }
  e3 = String(e3 || ``);
  let te2 = e3.length, ne2 = ue(n2(0)), j2 = ne2, M2;
  for (; j2 < te2; ) {
    let i2 = e3.charCodeAt(j2);
    switch (_e(i2)) {
      case pe:
        M2 = g, j2 = Ce(e3, j2 + 1);
        break;
      case 34:
        k2();
        break;
      case 35:
        ie(n2(j2 + 1)) || N(n2(j2 + 1), n2(j2 + 2)) ? (M2 = s, j2 = Ee(e3, j2 + 1)) : (M2 = f, j2++);
        break;
      case 39:
        k2();
        break;
      case 40:
        M2 = w, j2++;
        break;
      case 41:
        M2 = T, j2++;
        break;
      case 43:
        le(i2, n2(j2 + 1), n2(j2 + 2)) ? r2() : (M2 = f, j2++);
        break;
      case 44:
        M2 = x, j2++;
        break;
      case 45:
        le(i2, n2(j2 + 1), n2(j2 + 2)) ? r2() : n2(j2 + 1) === 45 && n2(j2 + 2) === 62 ? (M2 = v, j2 += 3) : ce(i2, n2(j2 + 1), n2(j2 + 2)) ? ee2() : (M2 = f, j2++);
        break;
      case 46:
        le(i2, n2(j2 + 1), n2(j2 + 2)) ? r2() : (M2 = f, j2++);
        break;
      case 47:
        n2(j2 + 1) === 42 ? (M2 = O, j2 = e3.indexOf(`*/`, j2 + 2), j2 = j2 === -1 ? e3.length : j2 + 2) : (M2 = f, j2++);
        break;
      case 58:
        M2 = y, j2++;
        break;
      case 59:
        M2 = b, j2++;
        break;
      case 60:
        n2(j2 + 1) === 33 && n2(j2 + 2) === 45 && n2(j2 + 3) === 45 ? (M2 = _, j2 += 4) : (M2 = f, j2++);
        break;
      case 64:
        ce(n2(j2 + 1), n2(j2 + 2), n2(j2 + 3)) ? (M2 = o, j2 = Ee(e3, j2 + 1)) : (M2 = f, j2++);
        break;
      case 91:
        M2 = S, j2++;
        break;
      case 92:
        N(i2, n2(j2 + 1)) ? ee2() : (M2 = f, j2++);
        break;
      case 93:
        M2 = C, j2++;
        break;
      case 123:
        M2 = E, j2++;
        break;
      case 125:
        M2 = D, j2++;
        break;
      case me:
        r2();
        break;
      case he:
        ee2();
        break;
      default:
        M2 = f, j2++;
    }
    t2(M2, ne2, ne2 = j2);
  }
}
let Ve = null;
var L = class e2 {
  static createItem(e3) {
    return { prev: null, next: null, data: e3 };
  }
  constructor() {
    this.head = null, this.tail = null, this.cursor = null;
  }
  createItem(t2) {
    return e2.createItem(t2);
  }
  allocateCursor(e3, t2) {
    let n2;
    return Ve === null ? n2 = { prev: e3, next: t2, cursor: this.cursor } : (n2 = Ve, Ve = Ve.cursor, n2.prev = e3, n2.next = t2, n2.cursor = this.cursor), this.cursor = n2, n2;
  }
  releaseCursor() {
    let { cursor: e3 } = this;
    this.cursor = e3.cursor, e3.prev = null, e3.next = null, e3.cursor = Ve, Ve = e3;
  }
  updateCursors(e3, t2, n2, r2) {
    let { cursor: i2 } = this;
    for (; i2 !== null; ) i2.prev === e3 && (i2.prev = t2), i2.next === n2 && (i2.next = r2), i2 = i2.cursor;
  }
  *[Symbol.iterator]() {
    for (let e3 = this.head; e3 !== null; e3 = e3.next) yield e3.data;
  }
  get size() {
    let e3 = 0;
    for (let t2 = this.head; t2 !== null; t2 = t2.next) e3++;
    return e3;
  }
  get isEmpty() {
    return this.head === null;
  }
  get first() {
    return this.head && this.head.data;
  }
  get last() {
    return this.tail && this.tail.data;
  }
  fromArray(t2) {
    let n2 = null;
    this.head = null;
    for (let r2 of t2) {
      let t3 = e2.createItem(r2);
      n2 === null ? this.head = t3 : n2.next = t3, t3.prev = n2, n2 = t3;
    }
    return this.tail = n2, this;
  }
  toArray() {
    return [...this];
  }
  toJSON() {
    return [...this];
  }
  forEach(e3, t2 = this) {
    let n2 = this.allocateCursor(null, this.head);
    for (; n2.next !== null; ) {
      let r2 = n2.next;
      n2.next = r2.next, e3.call(t2, r2.data, r2, this);
    }
    this.releaseCursor();
  }
  forEachRight(e3, t2 = this) {
    let n2 = this.allocateCursor(this.tail, null);
    for (; n2.prev !== null; ) {
      let r2 = n2.prev;
      n2.prev = r2.prev, e3.call(t2, r2.data, r2, this);
    }
    this.releaseCursor();
  }
  reduce(e3, t2, n2 = this) {
    let r2 = this.allocateCursor(null, this.head), i2 = t2, a2;
    for (; r2.next !== null; ) a2 = r2.next, r2.next = a2.next, i2 = e3.call(n2, i2, a2.data, a2, this);
    return this.releaseCursor(), i2;
  }
  reduceRight(e3, t2, n2 = this) {
    let r2 = this.allocateCursor(this.tail, null), i2 = t2, a2;
    for (; r2.prev !== null; ) a2 = r2.prev, r2.prev = a2.prev, i2 = e3.call(n2, i2, a2.data, a2, this);
    return this.releaseCursor(), i2;
  }
  some(e3, t2 = this) {
    for (let n2 = this.head; n2 !== null; n2 = n2.next) if (e3.call(t2, n2.data, n2, this)) return true;
    return false;
  }
  map(t2, n2 = this) {
    let r2 = new e2();
    for (let e3 = this.head; e3 !== null; e3 = e3.next) r2.appendData(t2.call(n2, e3.data, e3, this));
    return r2;
  }
  filter(t2, n2 = this) {
    let r2 = new e2();
    for (let e3 = this.head; e3 !== null; e3 = e3.next) t2.call(n2, e3.data, e3, this) && r2.appendData(e3.data);
    return r2;
  }
  nextUntil(e3, t2, n2 = this) {
    if (e3 === null) return;
    let r2 = this.allocateCursor(null, e3);
    for (; r2.next !== null; ) {
      let e4 = r2.next;
      if (r2.next = e4.next, t2.call(n2, e4.data, e4, this)) break;
    }
    this.releaseCursor();
  }
  prevUntil(e3, t2, n2 = this) {
    if (e3 === null) return;
    let r2 = this.allocateCursor(e3, null);
    for (; r2.prev !== null; ) {
      let e4 = r2.prev;
      if (r2.prev = e4.prev, t2.call(n2, e4.data, e4, this)) break;
    }
    this.releaseCursor();
  }
  clear() {
    this.head = null, this.tail = null;
  }
  copy() {
    let t2 = new e2();
    for (let e3 of this) t2.appendData(e3);
    return t2;
  }
  prepend(e3) {
    return this.updateCursors(null, e3, this.head, e3), this.head === null ? this.tail = e3 : (this.head.prev = e3, e3.next = this.head), this.head = e3, this;
  }
  prependData(t2) {
    return this.prepend(e2.createItem(t2));
  }
  append(e3) {
    return this.insert(e3);
  }
  appendData(t2) {
    return this.insert(e2.createItem(t2));
  }
  insert(e3, t2 = null) {
    if (t2 !== null) if (this.updateCursors(t2.prev, e3, t2, e3), t2.prev === null) {
      if (this.head !== t2) throw Error(`before doesn't belong to list`);
      this.head = e3, t2.prev = e3, e3.next = t2, this.updateCursors(null, e3);
    } else t2.prev.next = e3, e3.prev = t2.prev, t2.prev = e3, e3.next = t2;
    else this.updateCursors(this.tail, e3, null, e3), this.tail === null ? this.head = e3 : (this.tail.next = e3, e3.prev = this.tail), this.tail = e3;
    return this;
  }
  insertData(t2, n2) {
    return this.insert(e2.createItem(t2), n2);
  }
  remove(e3) {
    if (this.updateCursors(e3, e3.prev, e3, e3.next), e3.prev !== null) e3.prev.next = e3.next;
    else {
      if (this.head !== e3) throw Error(`item doesn't belong to list`);
      this.head = e3.next;
    }
    if (e3.next !== null) e3.next.prev = e3.prev;
    else {
      if (this.tail !== e3) throw Error(`item doesn't belong to list`);
      this.tail = e3.prev;
    }
    return e3.prev = null, e3.next = null, e3;
  }
  push(t2) {
    this.insert(e2.createItem(t2));
  }
  pop() {
    return this.tail === null ? null : this.remove(this.tail);
  }
  unshift(t2) {
    this.prepend(e2.createItem(t2));
  }
  shift() {
    return this.head === null ? null : this.remove(this.head);
  }
  prependList(e3) {
    return this.insertList(e3, this.head);
  }
  appendList(e3) {
    return this.insertList(e3);
  }
  insertList(e3, t2) {
    return e3.head === null ? this : (t2 == null ? (this.updateCursors(this.tail, e3.tail, null, e3.head), this.tail === null ? this.head = e3.head : (this.tail.next = e3.head, e3.head.prev = this.tail), this.tail = e3.tail) : (this.updateCursors(t2.prev, e3.tail, t2, e3.head), t2.prev === null ? this.head = e3.head : (t2.prev.next = e3.head, e3.head.prev = t2.prev), t2.prev = e3.tail, e3.tail.next = t2), e3.head = null, e3.tail = null, this);
  }
  replace(e3, t2) {
    `head` in t2 ? this.insertList(t2, e3) : this.insert(t2, e3), this.remove(e3);
  }
};
function He(e3, t2) {
  let n2 = Object.create(SyntaxError.prototype), r2 = Error();
  return Object.assign(n2, { name: e3, message: t2, get stack() {
    return (r2.stack || ``).replace(/^(.+\n){1,3}/, `${e3}: ${t2}
`);
  } });
}
const Ue = 100, We = 60, Ge = `    `;
function Ke({ source: e3, line: t2, column: n2, baseLine: r2, baseColumn: i2 }, a2) {
  function o2(e4, t3) {
    return l2.slice(e4, t3).map((t4, n3) => String(e4 + n3 + 1).padStart(f2) + ` |` + t4).join(`
`);
  }
  let s2 = `
`.repeat(Math.max(r2 - 1, 0)), c2 = ` `.repeat(Math.max(i2 - 1, 0)), l2 = (s2 + c2 + e3).split(/\r\n?|\n|\f/), u2 = Math.max(1, t2 - a2) - 1, d2 = Math.min(t2 + a2, l2.length + 1), f2 = Math.max(4, String(d2).length) + 1, p2 = 0;
  n2 += (Ge.length - 1) * (l2[t2 - 1].substr(0, n2 - 1).match(/\t/g) || []).length, n2 > Ue && (p2 = n2 - We + 3, n2 = We - 2);
  for (let e4 = u2; e4 <= d2; e4++) e4 >= 0 && e4 < l2.length && (l2[e4] = l2[e4].replace(/\t/g, Ge), l2[e4] = (p2 > 0 && l2[e4].length > p2 ? `\u2026` : ``) + l2[e4].substr(p2, Ue - 2) + (l2[e4].length > p2 + Ue - 1 ? `\u2026` : ``));
  return [o2(u2, t2), Array(n2 + f2 + 2).join(`-`) + `^`, o2(t2, d2)].filter(Boolean).join(`
`).replace(/^(\s+\d+\s+\|\n)+/, ``).replace(/\n(\s+\d+\s+\|)+$/, ``);
}
function qe(e3, t2, n2, r2, i2, a2 = 1, o2 = 1) {
  let s2 = Object.assign(He(`SyntaxError`, e3), { source: t2, offset: n2, line: r2, column: i2, sourceFragment(e4) {
    return Ke({ source: t2, line: r2, column: i2, baseLine: a2, baseColumn: o2 }, isNaN(e4) ? 0 : e4);
  }, get formattedMessage() {
    return `Parse error: ${e3}
` + Ke({ source: t2, line: r2, column: i2, baseLine: a2, baseColumn: o2 }, 2);
  } });
  return s2;
}
function Je(e3) {
  let t2 = this.createList(), n2 = false, r2 = { recognizer: e3 };
  for (; !this.eof; ) {
    switch (this.tokenType) {
      case O:
        this.next();
        continue;
      case g:
        n2 = true, this.next();
        continue;
    }
    let i2 = e3.getNode.call(this, r2);
    if (i2 === void 0) break;
    n2 && (e3.onWhiteSpace && e3.onWhiteSpace.call(this, i2, t2, r2), n2 = false), t2.push(i2);
  }
  return n2 && e3.onWhiteSpace && e3.onWhiteSpace.call(this, null, t2, r2), t2;
}
const Ye = () => {
}, Xe = 33, Ze = 35, Qe = 59, $e = 123, et = 0;
function tt(e3) {
  return function() {
    return this[e3]();
  };
}
function nt(e3) {
  let t2 = /* @__PURE__ */ Object.create(null);
  for (let n2 of Object.keys(e3)) {
    let r2 = e3[n2], i2 = r2.parse || r2;
    i2 && (t2[n2] = i2);
  }
  return t2;
}
function rt(e3) {
  let t2 = { context: /* @__PURE__ */ Object.create(null), features: Object.assign(/* @__PURE__ */ Object.create(null), e3.features), scope: Object.assign(/* @__PURE__ */ Object.create(null), e3.scope), atrule: nt(e3.atrule), pseudo: nt(e3.pseudo), node: nt(e3.node) };
  for (let [n2, r2] of Object.entries(e3.parseContext)) switch (typeof r2) {
    case `function`:
      t2.context[n2] = r2;
      break;
    case `string`:
      t2.context[n2] = tt(r2);
      break;
  }
  return { config: t2, ...t2, ...t2.node };
}
function it(e3) {
  let t2 = ``, n2 = `<unknown>`, r2 = false, o2 = Ye, c2 = false, l2 = new Le(), d2 = Object.assign(new ze(), rt(e3 || {}), { parseAtrulePrelude: true, parseRulePrelude: true, parseValue: true, parseCustomProperty: false, readSequence: Je, consumeUntilBalanceEnd: () => 0, consumeUntilLeftCurlyBracket(e4) {
    return e4 === $e ? 1 : 0;
  }, consumeUntilLeftCurlyBracketOrSemicolon(e4) {
    return e4 === $e || e4 === Qe ? 1 : 0;
  }, consumeUntilExclamationMarkOrSemicolon(e4) {
    return e4 === Xe || e4 === Qe ? 1 : 0;
  }, consumeUntilSemicolonIncluded(e4) {
    return e4 === Qe ? 2 : 0;
  }, createList() {
    return new L();
  }, createSingleNodeList(e4) {
    return new L().appendData(e4);
  }, getFirstListNode(e4) {
    return e4 && e4.first;
  }, getLastListNode(e4) {
    return e4 && e4.last;
  }, parseWithFallback(e4, t3) {
    let n3 = this.tokenIndex;
    try {
      return e4.call(this);
    } catch (e5) {
      if (c2) throw e5;
      this.skip(n3 - this.tokenIndex);
      let r3 = t3.call(this);
      return c2 = true, o2(e5, r3), c2 = false, r3;
    }
  }, lookupNonWSType(e4) {
    let t3;
    do
      if (t3 = this.lookupType(e4++), t3 !== g && t3 !== O) return t3;
    while (t3 !== et);
    return et;
  }, charCodeAt(e4) {
    return e4 >= 0 && e4 < t2.length ? t2.charCodeAt(e4) : 0;
  }, substring(e4, n3) {
    return t2.substring(e4, n3);
  }, substrToCursor(e4) {
    return this.source.substring(e4, this.tokenStart);
  }, cmpChar(e4, n3) {
    return be(t2, e4, n3);
  }, cmpStr(e4, n3, r3) {
    return xe(t2, e4, n3, r3);
  }, consume(e4) {
    let t3 = this.tokenStart;
    return this.eat(e4), this.substrToCursor(t3);
  }, consumeFunctionName() {
    let e4 = t2.substring(this.tokenStart, this.tokenEnd - 1);
    return this.eat(a), e4;
  }, consumeNumber(e4) {
    let n3 = t2.substring(this.tokenStart, De(t2, this.tokenStart));
    return this.eat(e4), n3;
  }, eat(e4) {
    if (this.tokenType !== e4) {
      let t3 = Ae[e4].slice(0, -6).replace(/-/g, ` `).replace(/^./, (e5) => e5.toUpperCase()), n3 = `${/[[\](){}]/.test(t3) ? `"${t3}"` : t3} is expected`, r3 = this.tokenStart;
      switch (e4) {
        case i:
          this.tokenType === a || this.tokenType === u ? (r3 = this.tokenEnd - 1, n3 = `Identifier is expected but function found`) : n3 = `Identifier is expected`;
          break;
        case s:
          this.isDelim(Ze) && (this.next(), r3++, n3 = `Name is expected`);
          break;
        case m:
          this.tokenType === p && (r3 = this.tokenEnd, n3 = `Percent sign is expected`);
          break;
      }
      this.error(n3, r3);
    }
    this.next();
  }, eatIdent(e4) {
    (this.tokenType !== i || this.lookupValue(0, e4) === false) && this.error(`Identifier "${e4}" is expected`), this.next();
  }, eatDelim(e4) {
    this.isDelim(e4) || this.error(`Delim "${String.fromCharCode(e4)}" is expected`), this.next();
  }, getLocation(e4, t3) {
    return r2 ? l2.getLocationRange(e4, t3, n2) : null;
  }, getLocationFromList(e4) {
    if (r2) {
      let t3 = this.getFirstListNode(e4), r3 = this.getLastListNode(e4);
      return l2.getLocationRange(t3 === null ? this.tokenStart : t3.loc.start.offset - l2.startOffset, r3 === null ? this.tokenStart : r3.loc.end.offset - l2.startOffset, n2);
    }
    return null;
  }, error(e4, n3) {
    let r3 = n3 !== void 0 && n3 < t2.length ? l2.getLocation(n3) : this.eof ? l2.getLocation(Se(t2, t2.length - 1)) : l2.getLocation(this.tokenStart);
    throw new qe(e4 || `Unexpected input`, t2, r3.offset, r3.line, r3.column, l2.startLine, l2.startColumn);
  } }), f2 = function(e4, i2) {
    t2 = e4, i2 || (i2 = {}), d2.setSource(t2, Be), l2.setSource(t2, i2.offset, i2.line, i2.column), n2 = i2.filename || `<unknown>`, r2 = !!i2.positions, o2 = typeof i2.onParseError == `function` ? i2.onParseError : Ye, c2 = false, d2.parseAtrulePrelude = `parseAtrulePrelude` in i2 ? !!i2.parseAtrulePrelude : true, d2.parseRulePrelude = `parseRulePrelude` in i2 ? !!i2.parseRulePrelude : true, d2.parseValue = `parseValue` in i2 ? !!i2.parseValue : true, d2.parseCustomProperty = `parseCustomProperty` in i2 ? !!i2.parseCustomProperty : false;
    let { context: a2 = `default`, onComment: s2 } = i2;
    if (!(a2 in d2.context)) throw Error("Unknown context `" + a2 + "`");
    typeof s2 == `function` && d2.forEachToken((e5, n3, r3) => {
      if (e5 === O) {
        let e6 = d2.getLocation(n3, r3), i3 = xe(t2, r3 - 2, r3, `*/`) ? t2.slice(n3 + 2, r3 - 2) : t2.slice(n3 + 2, r3);
        s2(i3, e6);
      }
    });
    let u2 = d2.context[a2].call(d2, i2);
    return d2.eof || d2.error(), u2;
  };
  return Object.assign(f2, { SyntaxError: qe, config: d2.config });
}
var at = t(n());
const ot = /* @__PURE__ */ new Set([`Atrule`, `Selector`, `Declaration`]);
function st(e3) {
  let t2 = new at.SourceMapGenerator(), n2 = { line: 1, column: 0 }, r2 = { line: 0, column: 0 }, i2 = { line: 1, column: 0 }, a2 = { generated: i2 }, o2 = 1, s2 = 0, c2 = false, l2 = e3.node;
  e3.node = function(e4) {
    if (e4.loc && e4.loc.start && ot.has(e4.type)) {
      let l3 = e4.loc.start.line, u3 = e4.loc.start.column - 1;
      (r2.line !== l3 || r2.column !== u3) && (r2.line = l3, r2.column = u3, n2.line = o2, n2.column = s2, c2 && (c2 = false, (n2.line !== i2.line || n2.column !== i2.column) && t2.addMapping(a2)), c2 = true, t2.addMapping({ source: e4.loc.source, original: r2, generated: n2 }));
    }
    l2.call(this, e4), c2 && ot.has(e4.type) && (i2.line = o2, i2.column = s2);
  };
  let u2 = e3.emit;
  e3.emit = function(e4, t3, n3) {
    for (let t4 = 0; t4 < e4.length; t4++) e4.charCodeAt(t4) === 10 ? (o2++, s2 = 0) : s2++;
    u2(e4, t3, n3);
  };
  let d2 = e3.result;
  return e3.result = function() {
    return c2 && t2.addMapping(a2), { css: d2(), map: t2 };
  }, e3;
}
var ct = {};
e(ct, { safe: () => gt, spec: () => ht });
const lt = 43, ut = 45, dt = (e3, t2) => {
  if (e3 === f && (e3 = t2), typeof e3 == `string`) {
    let t3 = e3.charCodeAt(0);
    return t3 > 127 ? 32768 : t3 << 8;
  }
  return e3;
}, ft = [[i, i], [i, a], [i, u], [i, d], [i, `-`], [i, p], [i, m], [i, h], [i, v], [i, w], [o, i], [o, a], [o, u], [o, d], [o, `-`], [o, p], [o, m], [o, h], [o, v], [s, i], [s, a], [s, u], [s, d], [s, `-`], [s, p], [s, m], [s, h], [s, v], [h, i], [h, a], [h, u], [h, d], [h, `-`], [h, p], [h, m], [h, h], [h, v], [`#`, i], [`#`, a], [`#`, u], [`#`, d], [`#`, `-`], [`#`, p], [`#`, m], [`#`, h], [`#`, v], [`-`, i], [`-`, a], [`-`, u], [`-`, d], [`-`, `-`], [`-`, p], [`-`, m], [`-`, h], [`-`, v], [p, i], [p, a], [p, u], [p, d], [p, p], [p, m], [p, h], [p, `%`], [p, v], [`@`, i], [`@`, a], [`@`, u], [`@`, d], [`@`, `-`], [`@`, v], [`.`, p], [`.`, m], [`.`, h], [`+`, p], [`+`, m], [`+`, h], [`/`, `*`]], pt = ft.concat([[i, s], [h, s], [s, s], [o, w], [o, c], [o, y], [m, m], [m, h], [m, a], [m, `-`], [T, i], [T, a], [T, m], [T, h], [T, s], [T, `-`]]);
function mt(e3) {
  let t2 = new Set(e3.map(([e4, t3]) => dt(e4) << 16 | dt(t3)));
  return function(e4, n2, r2) {
    let o2 = dt(n2, r2), s2 = r2.charCodeAt(0), c2 = s2 === ut && n2 !== i && n2 !== a && n2 !== v || s2 === lt ? t2.has(e4 << 16 | s2 << 8) : t2.has(e4 << 16 | o2);
    return c2 && this.emit(` `, g, true), o2;
  };
}
const ht = mt(ft), gt = mt(pt), _t = 92;
function vt(e3, t2) {
  if (typeof t2 == `function`) {
    let n2 = null;
    e3.children.forEach((e4) => {
      n2 !== null && t2.call(this, n2), this.node(e4), n2 = e4;
    });
    return;
  }
  e3.children.forEach(this.node, this);
}
function yt(e3) {
  Be(e3, (t2, n2, r2) => {
    this.token(t2, e3.slice(n2, r2));
  });
}
function bt(e3) {
  let t2 = /* @__PURE__ */ new Map();
  for (let [n2, r2] of Object.entries(e3.node)) {
    let e4 = r2.generate || r2;
    typeof e4 == `function` && t2.set(n2, r2.generate || r2);
  }
  return function(e4, n2) {
    let r2 = ``, i2 = 0, a2 = { node(e5) {
      if (t2.has(e5.type)) t2.get(e5.type).call(o2, e5);
      else throw Error(`Unknown node type: ` + e5.type);
    }, tokenBefore: gt, token(e5, t3) {
      i2 = this.tokenBefore(i2, e5, t3), this.emit(t3, e5, false), e5 === f && t3.charCodeAt(0) === _t && this.emit(`
`, g, true);
    }, emit(e5) {
      r2 += e5;
    }, result() {
      return r2;
    } };
    n2 && (typeof n2.decorator == `function` && (a2 = n2.decorator(a2)), n2.sourceMap && (a2 = st(a2)), n2.mode in ct && (a2.tokenBefore = ct[n2.mode]));
    let o2 = { node: (e5) => a2.node(e5), children: vt, token: (e5, t3) => a2.token(e5, t3), tokenize: yt };
    return a2.node(e4), a2.result();
  };
}
function xt(e3) {
  return { fromPlainObject(t2) {
    return e3(t2, { enter(e4) {
      e4.children && !(e4.children instanceof L) && (e4.children = new L().fromArray(e4.children));
    } }), t2;
  }, toPlainObject(t2) {
    return e3(t2, { leave(e4) {
      e4.children && e4.children instanceof L && (e4.children = e4.children.toArray());
    } }), t2;
  } };
}
const { hasOwnProperty: St } = Object.prototype, Ct = function() {
};
function wt(e3) {
  return typeof e3 == `function` ? e3 : Ct;
}
function Tt(e3, t2) {
  return function(n2, r2, i2) {
    n2.type === t2 && e3.call(this, n2, r2, i2);
  };
}
function Et(e3, t2) {
  let n2 = t2.structure, r2 = [];
  for (let e4 in n2) {
    if (St.call(n2, e4) === false) continue;
    let t3 = n2[e4], i2 = { name: e4, type: false, nullable: false };
    Array.isArray(t3) || (t3 = [t3]);
    for (let e5 of t3) e5 === null ? i2.nullable = true : typeof e5 == `string` ? i2.type = `node` : Array.isArray(e5) && (i2.type = `list`);
    i2.type && r2.push(i2);
  }
  return r2.length ? { context: t2.walkContext, fields: r2 } : null;
}
function Dt(e3) {
  let t2 = {};
  for (let n2 in e3.node) if (St.call(e3.node, n2)) {
    let r2 = e3.node[n2];
    if (!r2.structure) throw Error("Missed `structure` field in `" + n2 + "` node type definition");
    t2[n2] = Et(n2, r2);
  }
  return t2;
}
function Ot(e3, t2) {
  let n2 = e3.fields.slice(), r2 = e3.context, i2 = typeof r2 == `string`;
  return t2 && n2.reverse(), function(e4, a2, o2, s2) {
    let c2;
    i2 && (c2 = a2[r2], a2[r2] = e4);
    for (let r3 of n2) {
      let n3 = e4[r3.name];
      if (!r3.nullable || n3) {
        if (r3.type === `list`) {
          let e5 = t2 ? n3.reduceRight(s2, false) : n3.reduce(s2, false);
          if (e5) return true;
        } else if (o2(n3)) return true;
      }
    }
    i2 && (a2[r2] = c2);
  };
}
function kt({ StyleSheet: e3, Atrule: t2, Rule: n2, Block: r2, DeclarationList: i2 }) {
  return { Atrule: { StyleSheet: e3, Atrule: t2, Rule: n2, Block: r2 }, Rule: { StyleSheet: e3, Atrule: t2, Rule: n2, Block: r2 }, Declaration: { StyleSheet: e3, Atrule: t2, Rule: n2, Block: r2, DeclarationList: i2 } };
}
function At(e3) {
  let t2 = Dt(e3), n2 = {}, r2 = {}, i2 = Symbol(`break-walk`), a2 = Symbol(`skip-node`);
  for (let e4 in t2) St.call(t2, e4) && t2[e4] !== null && (n2[e4] = Ot(t2[e4], false), r2[e4] = Ot(t2[e4], true));
  let o2 = kt(n2), s2 = kt(r2), c2 = function(e4, c3) {
    function l2(e5, t3, n3) {
      let r3 = u2.call(m2, e5, t3, n3);
      return r3 === i2 ? true : r3 === a2 ? false : !!(f2.hasOwnProperty(e5.type) && f2[e5.type](e5, m2, l2, p2) || d2.call(m2, e5, t3, n3) === i2);
    }
    let u2 = Ct, d2 = Ct, f2 = n2, p2 = (e5, t3, n3, r3) => e5 || l2(t3, n3, r3), m2 = { break: i2, skip: a2, root: e4, stylesheet: null, atrule: null, atrulePrelude: null, rule: null, selector: null, block: null, declaration: null, function: null };
    if (typeof c3 == `function`) u2 = c3;
    else if (c3 && (u2 = wt(c3.enter), d2 = wt(c3.leave), c3.reverse && (f2 = r2), c3.visit)) {
      if (o2.hasOwnProperty(c3.visit)) f2 = c3.reverse ? s2[c3.visit] : o2[c3.visit];
      else if (!t2.hasOwnProperty(c3.visit)) throw Error("Bad value `" + c3.visit + "` for `visit` option (should be: " + Object.keys(t2).sort().join(`, `) + `)`);
      u2 = Tt(u2, c3.visit), d2 = Tt(d2, c3.visit);
    }
    if (u2 === Ct && d2 === Ct) throw Error("Neither `enter` nor `leave` walker handler is set or both aren't a function");
    l2(e4);
  };
  return c2.break = i2, c2.skip = a2, c2.find = function(e4, t3) {
    let n3 = null;
    return c2(e4, function(e5, r3, a3) {
      if (t3.call(this, e5, r3, a3)) return n3 = e5, i2;
    }), n3;
  }, c2.findLast = function(e4, t3) {
    let n3 = null;
    return c2(e4, { reverse: true, enter(e5, r3, a3) {
      if (t3.call(this, e5, r3, a3)) return n3 = e5, i2;
    } }), n3;
  }, c2.findAll = function(e4, t3) {
    let n3 = [];
    return c2(e4, function(e5, r3, i3) {
      t3.call(this, e5, r3, i3) && n3.push(e5);
    }), n3;
  }, c2;
}
function jt(e3) {
  return e3;
}
function Mt(e3) {
  let { min: t2, max: n2, comma: r2 } = e3;
  return t2 === 0 && n2 === 0 ? r2 ? `#?` : `*` : t2 === 0 && n2 === 1 ? `?` : t2 === 1 && n2 === 0 ? r2 ? `#` : `+` : t2 === 1 && n2 === 1 ? `` : (r2 ? `#` : ``) + (t2 === n2 ? `{` + t2 + `}` : `{` + t2 + `,` + (n2 === 0 ? `` : n2) + `}`);
}
function Nt(e3) {
  switch (e3.type) {
    case `Range`:
      return ` [` + (e3.min === null ? `-\u221E` : e3.min) + `,` + (e3.max === null ? `\u221E` : e3.max) + `]`;
    default:
      throw Error("Unknown node type `" + e3.type + "`");
  }
}
function Pt(e3, t2, n2, r2) {
  let i2 = e3.combinator === ` ` || r2 ? e3.combinator : ` ` + e3.combinator + ` `, a2 = e3.terms.map((e4) => Ft(e4, t2, n2, r2)).join(i2);
  return e3.explicit || n2 ? (r2 || a2[0] === `,` ? `[` : `[ `) + a2 + (r2 ? `]` : ` ]`) : a2;
}
function Ft(e3, t2, n2, r2) {
  let i2;
  switch (e3.type) {
    case `Group`:
      i2 = Pt(e3, t2, n2, r2) + (e3.disallowEmpty ? `!` : ``);
      break;
    case `Multiplier`:
      return Ft(e3.term, t2, n2, r2) + t2(Mt(e3), e3);
    case `Boolean`:
      i2 = `<boolean-expr[` + Ft(e3.term, t2, n2, r2) + `]>`;
      break;
    case `Type`:
      i2 = `<` + e3.name + (e3.opts ? t2(Nt(e3.opts), e3.opts) : ``) + `>`;
      break;
    case `Property`:
      i2 = `<'` + e3.name + `'>`;
      break;
    case `Keyword`:
      i2 = e3.name;
      break;
    case `AtKeyword`:
      i2 = `@` + e3.name;
      break;
    case `Function`:
      i2 = e3.name + `(`;
      break;
    case `String`:
    case `Token`:
      i2 = e3.value;
      break;
    case `Comma`:
      i2 = `,`;
      break;
    default:
      throw Error("Unknown node type `" + e3.type + "`");
  }
  return t2(i2, e3);
}
function It(e3, t2) {
  let n2 = jt, r2 = false, i2 = false;
  return typeof t2 == `function` ? n2 = t2 : t2 && (r2 = !!t2.forceBraces, i2 = !!t2.compact, typeof t2.decorate == `function` && (n2 = t2.decorate)), Ft(e3, n2, r2, i2);
}
const Lt = { offset: 0, line: 1, column: 1 };
function Rt(e3, t2) {
  let n2 = e3.tokens, r2 = e3.longestMatch, i2 = r2 < n2.length && n2[r2].node || null, a2 = i2 === t2 ? null : i2, o2 = 0, s2 = 0, c2 = 0, l2 = ``, u2, d2;
  for (let e4 = 0; e4 < n2.length; e4++) {
    let t3 = n2[e4].value;
    e4 === r2 && (s2 = t3.length, o2 = l2.length), a2 !== null && n2[e4].node === a2 && (e4 <= r2 ? c2++ : c2 = 0), l2 += t3;
  }
  return r2 === n2.length || c2 > 1 ? (u2 = zt(a2 || t2, `end`) || Bt(Lt, l2), d2 = Bt(u2)) : (u2 = zt(a2, `start`) || Bt(zt(t2, `start`) || Lt, l2.slice(0, o2)), d2 = zt(a2, `end`) || Bt(u2, l2.substr(o2, s2))), { css: l2, mismatchOffset: o2, mismatchLength: s2, start: u2, end: d2 };
}
function zt(e3, t2) {
  let n2 = e3 && e3.loc && e3.loc[t2];
  return n2 ? `line` in n2 ? Bt(n2) : n2 : null;
}
function Bt({ offset: e3, line: t2, column: n2 }, r2) {
  let i2 = { offset: e3, line: t2, column: n2 };
  if (r2) {
    let e4 = r2.split(/\n|\r\n?|\f/);
    i2.offset += r2.length, i2.line += e4.length - 1, i2.column = e4.length === 1 ? i2.column + r2.length : e4.pop().length + 1;
  }
  return i2;
}
const Vt = function(e3, t2) {
  let n2 = He(`SyntaxReferenceError`, e3 + (t2 ? " `" + t2 + "`" : ``));
  return n2.reference = t2, n2;
}, Ht = function(e3, t2, n2, r2) {
  let i2 = He(`SyntaxMatchError`, e3), { css: a2, mismatchOffset: o2, mismatchLength: s2, start: c2, end: l2 } = Rt(r2, n2);
  return i2.rawMessage = e3, i2.syntax = t2 ? It(t2) : `<generic>`, i2.css = a2, i2.mismatchOffset = o2, i2.mismatchLength = s2, i2.message = e3 + `
  syntax: ` + i2.syntax + `
   value: ` + (a2 || `<empty string>`) + `
  --------` + Array(i2.mismatchOffset + 1).join(`-`) + `^`, Object.assign(i2, c2), i2.loc = { source: n2 && n2.loc && n2.loc.source || `<unknown>`, start: c2, end: l2 }, i2;
}, Ut = /* @__PURE__ */ new Map(), Wt = /* @__PURE__ */ new Map(), Gt = 45, Kt = Xt, qt = Zt;
function Jt(e3, t2) {
  return t2 || (t2 = 0), e3.length - t2 >= 2 && e3.charCodeAt(t2) === Gt && e3.charCodeAt(t2 + 1) === Gt;
}
function Yt(e3, t2) {
  if (t2 || (t2 = 0), e3.length - t2 >= 3 && e3.charCodeAt(t2) === Gt && e3.charCodeAt(t2 + 1) !== Gt) {
    let n2 = e3.indexOf(`-`, t2 + 2);
    if (n2 !== -1) return e3.substring(t2, n2 + 1);
  }
  return ``;
}
function Xt(e3) {
  if (Ut.has(e3)) return Ut.get(e3);
  let t2 = e3.toLowerCase(), n2 = Ut.get(t2);
  if (n2 === void 0) {
    let e4 = Jt(t2, 0), r2 = e4 ? `` : Yt(t2, 0);
    n2 = Object.freeze({ basename: t2.substr(r2.length), name: t2, prefix: r2, vendor: r2, custom: e4 });
  }
  return Ut.set(e3, n2), n2;
}
function Zt(e3) {
  if (Wt.has(e3)) return Wt.get(e3);
  let t2 = e3, n2 = e3[0];
  n2 === `/` ? n2 = e3[1] === `/` ? `//` : `/` : n2 !== `_` && n2 !== `*` && n2 !== `$` && n2 !== `#` && n2 !== `+` && n2 !== `&` && (n2 = ``);
  let r2 = Jt(t2, n2.length);
  if (!r2 && (t2 = t2.toLowerCase(), Wt.has(t2))) {
    let n3 = Wt.get(t2);
    return Wt.set(e3, n3), n3;
  }
  let i2 = r2 ? `` : Yt(t2, n2.length), a2 = t2.substr(0, n2.length + i2.length), o2 = Object.freeze({ basename: t2.substr(a2.length), name: t2.substr(n2.length), hack: n2, vendor: i2, prefix: a2, custom: r2 });
  return Wt.set(e3, o2), o2;
}
const Qt = [`initial`, `inherit`, `unset`, `revert`, `revert-layer`], $t = 43, R = 45, en = 110, tn = true, nn = false;
function rn(e3, t2) {
  return e3 !== null && e3.type === f && e3.value.charCodeAt(0) === t2;
}
function an(e3, t2, n2) {
  for (; e3 !== null && (e3.type === g || e3.type === O); ) e3 = n2(++t2);
  return t2;
}
function z(e3, t2, n2, r2) {
  if (!e3) return 0;
  let i2 = e3.value.charCodeAt(t2);
  if (i2 === $t || i2 === R) {
    if (n2) return 0;
    t2++;
  }
  for (; t2 < e3.value.length; t2++) if (!k(e3.value.charCodeAt(t2))) return 0;
  return r2 + 1;
}
function on(e3, t2, n2) {
  let r2 = false, i2 = an(e3, t2, n2);
  if (e3 = n2(i2), e3 === null) return t2;
  if (e3.type !== p) if (rn(e3, $t) || rn(e3, R)) {
    if (r2 = true, i2 = an(n2(++i2), i2, n2), e3 = n2(i2), e3 === null || e3.type !== p) return 0;
  } else return t2;
  if (!r2) {
    let t3 = e3.value.charCodeAt(0);
    if (t3 !== $t && t3 !== R) return 0;
  }
  return z(e3, r2 ? 0 : 1, r2, i2);
}
function sn(e3, t2) {
  let n2 = 0;
  if (!e3) return 0;
  if (e3.type === p) return z(e3, 0, nn, n2);
  if (e3.type === i && e3.value.charCodeAt(0) === R) {
    if (!be(e3.value, 1, en)) return 0;
    switch (e3.value.length) {
      case 2:
        return on(t2(++n2), n2, t2);
      case 3:
        return e3.value.charCodeAt(2) === R ? (n2 = an(t2(++n2), n2, t2), e3 = t2(n2), z(e3, 0, tn, n2)) : 0;
      default:
        return e3.value.charCodeAt(2) === R ? z(e3, 3, tn, n2) : 0;
    }
  } else if (e3.type === i || rn(e3, $t) && t2(n2 + 1).type === i) {
    if (e3.type !== i && (e3 = t2(++n2)), e3 === null || !be(e3.value, 0, en)) return 0;
    switch (e3.value.length) {
      case 1:
        return on(t2(++n2), n2, t2);
      case 2:
        return e3.value.charCodeAt(1) === R ? (n2 = an(t2(++n2), n2, t2), e3 = t2(n2), z(e3, 0, tn, n2)) : 0;
      default:
        return e3.value.charCodeAt(1) === R ? z(e3, 2, tn, n2) : 0;
    }
  } else if (e3.type === h) {
    let r2 = e3.value.charCodeAt(0), i2 = r2 === $t || r2 === R ? 1 : 0, a2 = i2;
    for (; a2 < e3.value.length && k(e3.value.charCodeAt(a2)); a2++) ;
    return a2 === i2 || !be(e3.value, a2, en) ? 0 : a2 + 1 === e3.value.length ? on(t2(++n2), n2, t2) : e3.value.charCodeAt(a2 + 1) === R ? a2 + 2 === e3.value.length ? (n2 = an(t2(++n2), n2, t2), e3 = t2(n2), z(e3, 0, tn, n2)) : z(e3, a2 + 2, tn, n2) : 0;
  }
  return 0;
}
const cn = 43, ln = 45, un = 63, dn = 117;
function fn(e3, t2) {
  return e3 !== null && e3.type === f && e3.value.charCodeAt(0) === t2;
}
function pn(e3, t2) {
  return e3.value.charCodeAt(0) === t2;
}
function mn(e3, t2, n2) {
  let r2 = 0;
  for (let i2 = t2; i2 < e3.value.length; i2++) {
    let a2 = e3.value.charCodeAt(i2);
    if (a2 === ln && n2 && r2 !== 0) return mn(e3, t2 + r2 + 1, false), 6;
    if (!A(a2) || ++r2 > 6) return 0;
  }
  return r2;
}
function hn(e3, t2, n2) {
  if (!e3) return 0;
  for (; fn(n2(t2), un); ) {
    if (++e3 > 6) return 0;
    t2++;
  }
  return t2;
}
function gn(e3, t2) {
  let n2 = 0;
  if (e3 === null || e3.type !== i || !be(e3.value, 0, dn) || (e3 = t2(++n2), e3 === null)) return 0;
  if (fn(e3, cn)) return e3 = t2(++n2), e3 === null ? 0 : e3.type === i ? hn(mn(e3, 0, true), ++n2, t2) : fn(e3, un) ? hn(1, ++n2, t2) : 0;
  if (e3.type === p) {
    let r2 = mn(e3, 1, true);
    return r2 === 0 ? 0 : (e3 = t2(++n2), e3 === null ? n2 : e3.type === h || e3.type === p ? !pn(e3, ln) || !mn(e3, 1, false) ? 0 : n2 + 1 : hn(r2, n2, t2));
  }
  return e3.type === h ? hn(mn(e3, 1, true), ++n2, t2) : 0;
}
const _n = [`calc(`, `-moz-calc(`, `-webkit-calc(`], vn = /* @__PURE__ */ new Map([[a, T], [w, T], [S, C], [E, D]]);
function B(e3, t2) {
  return t2 < e3.length ? e3.charCodeAt(t2) : 0;
}
function yn(e3, t2) {
  return xe(e3, 0, e3.length, t2);
}
function bn(e3, t2) {
  for (let n2 = 0; n2 < t2.length; n2++) if (yn(e3, t2[n2])) return true;
  return false;
}
function xn(e3, t2) {
  return t2 === e3.length - 2 ? B(e3, t2) === 92 && k(B(e3, t2 + 1)) : false;
}
function Sn(e3, t2, n2) {
  if (e3 && e3.type === `Range`) {
    let r2 = Number(n2 !== void 0 && n2 !== t2.length ? t2.substr(0, n2) : t2);
    if (isNaN(r2) || e3.min !== null && r2 < e3.min && typeof e3.min != `string` || e3.max !== null && r2 > e3.max && typeof e3.max != `string`) return true;
  }
  return false;
}
function Cn(e3, t2) {
  let n2 = 0, r2 = [], i2 = 0;
  scan: do {
    switch (e3.type) {
      case D:
      case T:
      case C:
        if (e3.type !== n2) break scan;
        if (n2 = r2.pop(), r2.length === 0) {
          i2++;
          break scan;
        }
        break;
      case a:
      case w:
      case S:
      case E:
        r2.push(n2), n2 = vn.get(e3.type);
        break;
    }
    i2++;
  } while (e3 = t2(i2));
  return i2;
}
function V(e3) {
  return function(t2, n2, r2) {
    return t2 === null ? 0 : t2.type === a && bn(t2.value, _n) ? Cn(t2, n2) : e3(t2, n2, r2);
  };
}
function H(e3) {
  return function(t2) {
    return t2 === null || t2.type !== e3 ? 0 : 1;
  };
}
function wn(e3) {
  if (e3 === null || e3.type !== i) return 0;
  let t2 = e3.value.toLowerCase();
  return bn(t2, Qt) || yn(t2, `default`) ? 0 : 1;
}
function Tn(e3) {
  return e3 === null || e3.type !== i || B(e3.value, 0) !== 45 || B(e3.value, 1) !== 45 ? 0 : 1;
}
function En(e3) {
  return !Tn(e3) || e3.value === `--` ? 0 : 1;
}
function Dn(e3) {
  if (e3 === null || e3.type !== s) return 0;
  let t2 = e3.value.length;
  if (t2 !== 4 && t2 !== 5 && t2 !== 7 && t2 !== 9) return 0;
  for (let n2 = 1; n2 < t2; n2++) if (!A(B(e3.value, n2))) return 0;
  return 1;
}
function On(e3) {
  return e3 === null || e3.type !== s || !ce(B(e3.value, 1), B(e3.value, 2), B(e3.value, 3)) ? 0 : 1;
}
function kn(e3, t2) {
  if (!e3) return 0;
  let n2 = 0, r2 = [], i2 = 0;
  scan: do {
    switch (e3.type) {
      case l:
      case d:
        break scan;
      case D:
      case T:
      case C:
        if (e3.type !== n2) break scan;
        n2 = r2.pop();
        break;
      case b:
        if (n2 === 0) break scan;
        break;
      case f:
        if (n2 === 0 && e3.value === `!`) break scan;
        break;
      case a:
      case w:
      case S:
      case E:
        r2.push(n2), n2 = vn.get(e3.type);
        break;
    }
    i2++;
  } while (e3 = t2(i2));
  return i2;
}
function An(e3, t2) {
  if (!e3) return 0;
  let n2 = 0, r2 = [], i2 = 0;
  scan: do {
    switch (e3.type) {
      case l:
      case d:
        break scan;
      case D:
      case T:
      case C:
        if (e3.type !== n2) break scan;
        n2 = r2.pop();
        break;
      case a:
      case w:
      case S:
      case E:
        r2.push(n2), n2 = vn.get(e3.type);
        break;
    }
    i2++;
  } while (e3 = t2(i2));
  return i2;
}
function U(e3) {
  return e3 && (e3 = new Set(e3)), function(t2, n2, r2) {
    if (t2 === null || t2.type !== h) return 0;
    let i2 = De(t2.value, 0);
    if (e3 !== null) {
      let n3 = t2.value.indexOf(`\\`, i2), r3 = n3 === -1 || !xn(t2.value, n3) ? t2.value.substr(i2) : t2.value.substring(i2, n3);
      if (e3.has(r3.toLowerCase()) === false) return 0;
    }
    return Sn(r2, t2.value, i2) ? 0 : 1;
  };
}
function jn(e3, t2, n2) {
  return e3 === null || e3.type !== m || Sn(n2, e3.value, e3.value.length - 1) ? 0 : 1;
}
function Mn(e3) {
  return typeof e3 != `function` && (e3 = function() {
    return 0;
  }), function(t2, n2, r2) {
    return t2 !== null && t2.type === p && Number(t2.value) === 0 ? 1 : e3(t2, n2, r2);
  };
}
function Nn(e3, t2, n2) {
  if (e3 === null) return 0;
  let r2 = De(e3.value, 0), i2 = r2 === e3.value.length;
  return !i2 && !xn(e3.value, r2) || Sn(n2, e3.value, r2) ? 0 : 1;
}
function Pn(e3, t2, n2) {
  if (e3 === null || e3.type !== p) return 0;
  let r2 = B(e3.value, 0) === 43 || B(e3.value, 0) === 45 ? 1 : 0;
  for (; r2 < e3.value.length; r2++) if (!k(B(e3.value, r2))) return 0;
  return Sn(n2, e3.value, r2) ? 0 : 1;
}
const Fn = { "ident-token": H(i), "function-token": H(a), "at-keyword-token": H(o), "hash-token": H(s), "string-token": H(c), "bad-string-token": H(l), "url-token": H(u), "bad-url-token": H(d), "delim-token": H(f), "number-token": H(p), "percentage-token": H(m), "dimension-token": H(h), "whitespace-token": H(g), "CDO-token": H(_), "CDC-token": H(v), "colon-token": H(y), "semicolon-token": H(b), "comma-token": H(x), "[-token": H(S), "]-token": H(C), "(-token": H(w), ")-token": H(T), "{-token": H(E), "}-token": H(D) }, In = { string: H(c), ident: H(i), percentage: V(jn), zero: Mn(), number: V(Nn), integer: V(Pn), "custom-ident": wn, "dashed-ident": Tn, "custom-property-name": En, "hex-color": Dn, "id-selector": On, "an-plus-b": sn, urange: gn, "declaration-value": kn, "any-value": An };
function Ln(e3) {
  let { angle: t2, decibel: n2, frequency: r2, flex: i2, length: a2, resolution: o2, semitones: s2, time: c2 } = e3 || {};
  return { dimension: V(U(null)), angle: V(U(t2)), decibel: V(U(n2)), frequency: V(U(r2)), flex: V(U(i2)), length: V(Mn(U(a2))), resolution: V(U(o2)), semitones: V(U(s2)), time: V(U(c2)) };
}
function Rn(e3) {
  return { ...Fn, ...In, ...Ln(e3) };
}
var zn = {};
e(zn, { angle: () => Vn, decibel: () => Kn, flex: () => Gn, frequency: () => Un, length: () => Bn, resolution: () => Wn, semitones: () => qn, time: () => Hn });
const Bn = `cm.mm.q.in.pt.pc.px.em.rem.ex.rex.cap.rcap.ch.rch.ic.ric.lh.rlh.vw.svw.lvw.dvw.vh.svh.lvh.dvh.vi.svi.lvi.dvi.vb.svb.lvb.dvb.vmin.svmin.lvmin.dvmin.vmax.svmax.lvmax.dvmax.cqw.cqh.cqi.cqb.cqmin.cqmax`.split(`.`), Vn = [`deg`, `grad`, `rad`, `turn`], Hn = [`s`, `ms`], Un = [`hz`, `khz`], Wn = [`dpi`, `dpcm`, `dppx`, `x`], Gn = [`fr`], Kn = [`db`], qn = [`st`];
function Jn(e3, t2, n2) {
  return Object.assign(He(`SyntaxError`, e3), { input: t2, offset: n2, rawMessage: e3, message: e3 + `
  ` + t2 + `
--` + Array((n2 || t2.length) + 1).join(`-`) + `^` });
}
const Yn = 9, Xn = 10, Zn = 12, Qn = 13, $n = 32, er = new Uint8Array(128).map((e3, t2) => /[a-zA-Z0-9\-]/.test(String.fromCharCode(t2)) ? 1 : 0);
var tr = class {
  constructor(e3) {
    this.str = e3, this.pos = 0;
  }
  charCodeAt(e3) {
    return e3 < this.str.length ? this.str.charCodeAt(e3) : 0;
  }
  charCode() {
    return this.charCodeAt(this.pos);
  }
  isNameCharCode(e3 = this.charCode()) {
    return e3 < 128 && er[e3] === 1;
  }
  nextCharCode() {
    return this.charCodeAt(this.pos + 1);
  }
  nextNonWsCode(e3) {
    return this.charCodeAt(this.findWsEnd(e3));
  }
  skipWs() {
    this.pos = this.findWsEnd(this.pos);
  }
  findWsEnd(e3) {
    for (; e3 < this.str.length; e3++) {
      let t2 = this.str.charCodeAt(e3);
      if (t2 !== Qn && t2 !== Xn && t2 !== Zn && t2 !== $n && t2 !== Yn) break;
    }
    return e3;
  }
  substringToPos(e3) {
    return this.str.substring(this.pos, this.pos = e3);
  }
  eat(e3) {
    this.charCode() !== e3 && this.error("Expect `" + String.fromCharCode(e3) + "`"), this.pos++;
  }
  peek() {
    return this.pos < this.str.length ? this.str.charAt(this.pos++) : ``;
  }
  error(e3) {
    throw new Jn(e3, this.str, this.pos);
  }
  scanSpaces() {
    return this.substringToPos(this.findWsEnd(this.pos));
  }
  scanWord() {
    let e3 = this.pos;
    for (; e3 < this.str.length; e3++) {
      let t2 = this.str.charCodeAt(e3);
      if (t2 >= 128 || er[t2] === 0) break;
    }
    return this.pos === e3 && this.error(`Expect a keyword`), this.substringToPos(e3);
  }
  scanNumber() {
    let e3 = this.pos;
    for (; e3 < this.str.length; e3++) {
      let t2 = this.str.charCodeAt(e3);
      if (t2 < 48 || t2 > 57) break;
    }
    return this.pos === e3 && this.error(`Expect a number`), this.substringToPos(e3);
  }
  scanString() {
    let e3 = this.str.indexOf(`'`, this.pos + 1);
    return e3 === -1 && (this.pos = this.str.length, this.error(`Expect an apostrophe`)), this.substringToPos(e3 + 1);
  }
};
const nr = 9, rr = 10, ir = 12, ar = 13, or = 32, sr = 33, cr = 35, lr = 38, ur = 39, dr = 40, fr = 41, pr = 42, mr = 43, hr = 44, gr = 45, _r = 60, vr = 62, yr = 63, br = 64, xr = 91, Sr = 93, Cr = 123, wr = 124, Tr = 125, Er = 8734, Dr = { " ": 1, "&&": 2, "||": 3, "|": 4 };
function Or(e3) {
  let t2 = null, n2 = null;
  return e3.eat(Cr), e3.skipWs(), t2 = e3.scanNumber(e3), e3.skipWs(), e3.charCode() === hr ? (e3.pos++, e3.skipWs(), e3.charCode() !== Tr && (n2 = e3.scanNumber(e3), e3.skipWs())) : n2 = t2, e3.eat(Tr), { min: Number(t2), max: n2 ? Number(n2) : 0 };
}
function kr(e3) {
  let t2 = null, n2 = false;
  switch (e3.charCode()) {
    case pr:
      e3.pos++, t2 = { min: 0, max: 0 };
      break;
    case mr:
      e3.pos++, t2 = { min: 1, max: 0 };
      break;
    case yr:
      e3.pos++, t2 = { min: 0, max: 1 };
      break;
    case cr:
      e3.pos++, n2 = true, e3.charCode() === Cr ? t2 = Or(e3) : e3.charCode() === yr ? (e3.pos++, t2 = { min: 0, max: 0 }) : t2 = { min: 1, max: 0 };
      break;
    case Cr:
      t2 = Or(e3);
      break;
    default:
      return null;
  }
  return { type: `Multiplier`, comma: n2, min: t2.min, max: t2.max, term: null };
}
function W(e3, t2) {
  let n2 = kr(e3);
  return n2 === null ? t2 : (n2.term = t2, e3.charCode() === cr && e3.charCodeAt(e3.pos - 1) === mr ? W(e3, n2) : n2);
}
function Ar(e3) {
  let t2 = e3.peek();
  return t2 === `` ? null : W(e3, { type: `Token`, value: t2 });
}
function jr(e3) {
  let t2;
  return e3.eat(_r), e3.eat(ur), t2 = e3.scanWord(), e3.eat(ur), e3.eat(vr), W(e3, { type: `Property`, name: t2 });
}
function Mr(e3) {
  let t2 = null, n2 = null, r2 = 1;
  return e3.eat(xr), e3.charCode() === gr && (e3.peek(), r2 = -1), r2 == -1 && e3.charCode() === Er ? e3.peek() : (t2 = r2 * Number(e3.scanNumber(e3)), e3.isNameCharCode() && (t2 += e3.scanWord())), e3.skipWs(), e3.eat(hr), e3.skipWs(), e3.charCode() === Er ? e3.peek() : (r2 = 1, e3.charCode() === gr && (e3.peek(), r2 = -1), n2 = r2 * Number(e3.scanNumber(e3)), e3.isNameCharCode() && (n2 += e3.scanWord())), e3.eat(Sr), { type: `Range`, min: t2, max: n2 };
}
function Nr(e3) {
  let t2, n2 = null;
  if (e3.eat(_r), t2 = e3.scanWord(), t2 === `boolean-expr`) {
    e3.eat(xr);
    let t3 = Ir(e3, Sr);
    return e3.eat(Sr), e3.eat(vr), W(e3, { type: `Boolean`, term: t3.terms.length === 1 ? t3.terms[0] : t3 });
  }
  return e3.charCode() === dr && e3.nextCharCode() === fr && (e3.pos += 2, t2 += `()`), e3.charCodeAt(e3.findWsEnd(e3.pos)) === xr && (e3.skipWs(), n2 = Mr(e3)), e3.eat(vr), W(e3, { type: `Type`, name: t2, opts: n2 });
}
function Pr(e3) {
  let t2 = e3.scanWord();
  return e3.charCode() === dr ? (e3.pos++, { type: `Function`, name: t2 }) : W(e3, { type: `Keyword`, name: t2 });
}
function Fr(e3, t2) {
  function n2(e4, t3) {
    return { type: `Group`, terms: e4, combinator: t3, disallowEmpty: false, explicit: false };
  }
  let r2;
  for (t2 = Object.keys(t2).sort((e4, t3) => Dr[e4] - Dr[t3]); t2.length > 0; ) {
    r2 = t2.shift();
    let i2 = 0, a2 = 0;
    for (; i2 < e3.length; i2++) {
      let t3 = e3[i2];
      t3.type === `Combinator` && (t3.value === r2 ? (a2 === -1 && (a2 = i2 - 1), e3.splice(i2, 1), i2--) : (a2 !== -1 && i2 - a2 > 1 && (e3.splice(a2, i2 - a2, n2(e3.slice(a2, i2), r2)), i2 = a2 + 1), a2 = -1));
    }
    a2 !== -1 && t2.length && e3.splice(a2, i2 - a2, n2(e3.slice(a2, i2), r2));
  }
  return r2;
}
function Ir(e3, t2) {
  let n2 = /* @__PURE__ */ Object.create(null), r2 = [], i2, a2 = null, o2 = e3.pos;
  for (; e3.charCode() !== t2 && (i2 = Rr(e3, t2)); ) i2.type !== `Spaces` && (i2.type === `Combinator` ? ((a2 === null || a2.type === `Combinator`) && (e3.pos = o2, e3.error(`Unexpected combinator`)), n2[i2.value] = true) : a2 !== null && a2.type !== `Combinator` && (n2[` `] = true, r2.push({ type: `Combinator`, value: ` ` })), r2.push(i2), a2 = i2, o2 = e3.pos);
  return a2 !== null && a2.type === `Combinator` && (e3.pos -= o2, e3.error(`Unexpected combinator`)), { type: `Group`, terms: r2, combinator: Fr(r2, n2) || ` `, disallowEmpty: false, explicit: false };
}
function Lr(e3, t2) {
  let n2;
  return e3.eat(xr), n2 = Ir(e3, t2), e3.eat(Sr), n2.explicit = true, e3.charCode() === sr && (e3.pos++, n2.disallowEmpty = true), n2;
}
function Rr(e3, t2) {
  let n2 = e3.charCode();
  switch (n2) {
    case Sr:
      break;
    case xr:
      return W(e3, Lr(e3, t2));
    case _r:
      return e3.nextCharCode() === ur ? jr(e3) : Nr(e3);
    case wr:
      return { type: `Combinator`, value: e3.substringToPos(e3.pos + (e3.nextCharCode() === wr ? 2 : 1)) };
    case lr:
      return e3.pos++, e3.eat(lr), { type: `Combinator`, value: `&&` };
    case hr:
      return e3.pos++, { type: `Comma` };
    case ur:
      return W(e3, { type: `String`, value: e3.scanString() });
    case or:
    case nr:
    case rr:
    case ar:
    case ir:
      return { type: `Spaces`, value: e3.scanSpaces() };
    case br:
      return n2 = e3.nextCharCode(), e3.isNameCharCode(n2) ? (e3.pos++, { type: `AtKeyword`, name: e3.scanWord() }) : Ar(e3);
    case pr:
    case mr:
    case yr:
    case cr:
    case sr:
      break;
    case Cr:
      if (n2 = e3.nextCharCode(), n2 < 48 || n2 > 57) return Ar(e3);
      break;
    default:
      return e3.isNameCharCode(n2) ? Pr(e3) : Ar(e3);
  }
}
function zr(e3) {
  let t2 = new tr(e3), n2 = Ir(t2);
  return t2.pos !== e3.length && t2.error(`Unexpected input`), n2.terms.length === 1 && n2.terms[0].type === `Group` ? n2.terms[0] : n2;
}
const Br = function() {
};
function Vr(e3) {
  return typeof e3 == `function` ? e3 : Br;
}
function Hr(e3, t2, n2) {
  function r2(e4) {
    switch (i2.call(n2, e4), e4.type) {
      case `Group`:
        e4.terms.forEach(r2);
        break;
      case `Multiplier`:
      case `Boolean`:
        r2(e4.term);
        break;
      case `Type`:
      case `Property`:
      case `Keyword`:
      case `AtKeyword`:
      case `Function`:
      case `String`:
      case `Token`:
      case `Comma`:
        break;
      default:
        throw Error(`Unknown type: ` + e4.type);
    }
    a2.call(n2, e4);
  }
  let i2 = Br, a2 = Br;
  if (typeof t2 == `function` ? i2 = t2 : t2 && (i2 = Vr(t2.enter), a2 = Vr(t2.leave)), i2 === Br && a2 === Br) throw Error("Neither `enter` nor `leave` walker handler is set or both aren't a function");
  r2(e3, n2);
}
const Ur = { decorator(e3) {
  let t2 = [], n2 = null;
  return { ...e3, node(t3) {
    let r2 = n2;
    n2 = t3, e3.node.call(this, t3), n2 = r2;
  }, emit(e4, r2, i2) {
    t2.push({ type: r2, value: e4, node: i2 ? null : n2 });
  }, result() {
    return t2;
  } };
} };
function Wr(e3) {
  let t2 = [];
  return Be(e3, (n2, r2, i2) => t2.push({ type: n2, value: e3.slice(r2, i2), node: null })), t2;
}
function Gr(e3, t2) {
  return typeof e3 == `string` ? Wr(e3) : t2.generate(e3, Ur);
}
const G = { type: `Match` }, K = { type: `Mismatch` }, Kr = { type: `DisallowEmpty` }, qr = 40, Jr = 41;
function q(e3, t2, n2) {
  return t2 === G && n2 === K || e3 === G && t2 === G && n2 === G ? e3 : (e3.type === `If` && e3.else === K && t2 === G && (t2 = e3.then, e3 = e3.match), { type: `If`, match: e3, then: t2, else: n2 });
}
function Yr(e3) {
  return e3.length > 2 && e3.charCodeAt(e3.length - 2) === qr && e3.charCodeAt(e3.length - 1) === Jr;
}
function Xr(e3) {
  return e3.type === `Keyword` || e3.type === `AtKeyword` || e3.type === `Function` || e3.type === `Type` && Yr(e3.name);
}
function J(e3, t2 = ` `, n2 = false) {
  return { type: `Group`, terms: e3, combinator: t2, disallowEmpty: false, explicit: n2 };
}
function Zr(e3, t2, n2 = /* @__PURE__ */ new Set()) {
  if (!n2.has(e3)) switch (n2.add(e3), e3.type) {
    case `If`:
      e3.match = Zr(e3.match, t2, n2), e3.then = Zr(e3.then, t2, n2), e3.else = Zr(e3.else, t2, n2);
      break;
    case `Type`:
      return t2[e3.name] || e3;
  }
  return e3;
}
function Qr(e3, t2, n2) {
  switch (e3) {
    case ` `: {
      let e4 = G;
      for (let n3 = t2.length - 1; n3 >= 0; n3--) {
        let r2 = t2[n3];
        e4 = q(r2, e4, K);
      }
      return e4;
    }
    case `|`: {
      let e4 = K, n3 = null;
      for (let r2 = t2.length - 1; r2 >= 0; r2--) {
        let i2 = t2[r2];
        if (Xr(i2) && (n3 === null && r2 > 0 && Xr(t2[r2 - 1]) && (n3 = /* @__PURE__ */ Object.create(null), e4 = q({ type: `Enum`, map: n3 }, G, e4)), n3 !== null)) {
          let e5 = (Yr(i2.name) ? i2.name.slice(0, -1) : i2.name).toLowerCase();
          if (!(e5 in n3)) {
            n3[e5] = i2;
            continue;
          }
        }
        n3 = null, e4 = q(i2, G, e4);
      }
      return e4;
    }
    case `&&`: {
      if (t2.length > 5) return { type: `MatchOnce`, terms: t2, all: true };
      let n3 = K;
      for (let r2 = t2.length - 1; r2 >= 0; r2--) {
        let i2 = t2[r2], a2;
        a2 = t2.length > 1 ? Qr(e3, t2.filter(function(e4) {
          return e4 !== i2;
        }), false) : G, n3 = q(i2, a2, n3);
      }
      return n3;
    }
    case `||`: {
      if (t2.length > 5) return { type: `MatchOnce`, terms: t2, all: false };
      let r2 = n2 ? G : K;
      for (let n3 = t2.length - 1; n3 >= 0; n3--) {
        let i2 = t2[n3], a2;
        a2 = t2.length > 1 ? Qr(e3, t2.filter(function(e4) {
          return e4 !== i2;
        }), true) : G, r2 = q(i2, a2, r2);
      }
      return r2;
    }
  }
}
function $r(e3) {
  let t2 = G, n2 = ei(e3.term);
  if (e3.max === 0) n2 = q(n2, Kr, K), t2 = q(n2, null, K), t2.then = q(G, G, t2), e3.comma && (t2.then.else = q({ type: `Comma`, syntax: e3 }, t2, K));
  else for (let r2 = e3.min || 1; r2 <= e3.max; r2++) e3.comma && t2 !== G && (t2 = q({ type: `Comma`, syntax: e3 }, t2, K)), t2 = q(n2, q(G, G, t2), K);
  if (e3.min === 0) t2 = q(G, G, t2);
  else for (let r2 = 0; r2 < e3.min - 1; r2++) e3.comma && t2 !== G && (t2 = q({ type: `Comma`, syntax: e3 }, t2, K)), t2 = q(n2, t2, K);
  return t2;
}
function ei(e3) {
  if (typeof e3 == `function`) return { type: `Generic`, fn: e3 };
  switch (e3.type) {
    case `Group`: {
      let t2 = Qr(e3.combinator, e3.terms.map(ei), false);
      return e3.disallowEmpty && (t2 = q(t2, Kr, K)), t2;
    }
    case `Multiplier`:
      return $r(e3);
    case `Boolean`: {
      let t2 = ei(e3.term), n2 = ei(J([J([{ type: `Keyword`, name: `not` }, { type: `Type`, name: `!boolean-group` }]), J([{ type: `Type`, name: `!boolean-group` }, J([{ type: `Multiplier`, comma: false, min: 0, max: 0, term: J([{ type: `Keyword`, name: `and` }, { type: `Type`, name: `!boolean-group` }]) }, { type: `Multiplier`, comma: false, min: 0, max: 0, term: J([{ type: `Keyword`, name: `or` }, { type: `Type`, name: `!boolean-group` }]) }], `|`)])], `|`)), r2 = ei(J([{ type: `Type`, name: `!term` }, J([{ type: `Token`, value: `(` }, { type: `Type`, name: `!self` }, { type: `Token`, value: `)` }]), { type: `Type`, name: `general-enclosed` }], `|`));
      return Zr(r2, { "!term": t2, "!self": n2 }), Zr(n2, { "!boolean-group": r2 }), n2;
    }
    case `Type`:
    case `Property`:
      return { type: e3.type, name: e3.name, syntax: e3 };
    case `Keyword`:
      return { type: e3.type, name: e3.name.toLowerCase(), syntax: e3 };
    case `AtKeyword`:
      return { type: e3.type, name: `@` + e3.name.toLowerCase(), syntax: e3 };
    case `Function`:
      return { type: e3.type, name: e3.name.toLowerCase() + `(`, syntax: e3 };
    case `String`:
      return e3.value.length === 3 ? { type: `Token`, value: e3.value.charAt(1), syntax: e3 } : { type: e3.type, value: e3.value.substr(1, e3.value.length - 2).replace(/\\'/g, `'`), syntax: e3 };
    case `Token`:
      return { type: e3.type, value: e3.value, syntax: e3 };
    case `Comma`:
      return { type: e3.type, syntax: e3 };
    default:
      throw Error(`Unknown node type:`, e3.type);
  }
}
function ti(e3, t2) {
  return typeof e3 == `string` && (e3 = zr(e3)), { type: `MatchGraph`, match: ei(e3), syntax: t2 || null, source: e3 };
}
const { hasOwnProperty: ni } = Object.prototype, ri = 0, ii = 1, ai = 2, oi = 3, si = `Match`, ci = `Mismatch`, li = `Maximum iteration number exceeded (please fill an issue on https://github.com/csstree/csstree/issues)`, ui = 15e3;
let di = 0;
function fi(e3) {
  let t2 = null, n2 = null, r2 = e3;
  for (; r2 !== null; ) n2 = r2.prev, r2.prev = t2, t2 = r2, r2 = n2;
  return t2;
}
function pi(e3, t2) {
  if (e3.length !== t2.length) return false;
  for (let n2 = 0; n2 < e3.length; n2++) {
    let r2 = t2.charCodeAt(n2), i2 = e3.charCodeAt(n2);
    if (i2 >= 65 && i2 <= 90 && (i2 |= 32), i2 !== r2) return false;
  }
  return true;
}
function mi(e3) {
  return e3.type === f ? e3.value !== `?` : false;
}
function hi(e3) {
  return e3 === null ? true : e3.type === x || e3.type === a || e3.type === w || e3.type === S || e3.type === E || mi(e3);
}
function gi(e3) {
  return e3 === null ? true : e3.type === T || e3.type === C || e3.type === D || e3.type === f && e3.value === `/`;
}
function _i(e3, t2, n2) {
  function r2() {
    do
      b2++, y2 = b2 < e3.length ? e3[b2] : null;
    while (y2 !== null && (y2.type === g || y2.type === O));
  }
  function a2(t3) {
    let n3 = b2 + t3;
    return n3 < e3.length ? e3[n3] : null;
  }
  function o2(e4, t3) {
    return { nextState: e4, matchStack: C2, syntaxStack: f2, thenStack: p2, tokenIndex: b2, prev: t3 };
  }
  function s2(e4) {
    p2 = { nextState: e4, matchStack: C2, syntaxStack: f2, prev: p2 };
  }
  function c2(e4) {
    m2 = o2(e4, m2);
  }
  function l2() {
    C2 = { type: ii, syntax: t2.syntax, token: y2, prev: C2 }, r2(), h2 = null, b2 > S2 && (S2 = b2);
  }
  function u2() {
    f2 = { syntax: t2.syntax, opts: t2.syntax.opts || f2 !== null && f2.opts || null, prev: f2 }, C2 = { type: ai, syntax: t2.syntax, token: C2.token, prev: C2 };
  }
  function d2() {
    C2 = C2.type === ai ? C2.prev : { type: oi, syntax: f2.syntax, token: C2.token, prev: C2 }, f2 = f2.prev;
  }
  let f2 = null, p2 = null, m2 = null, h2 = null, _2 = 0, v2 = null, y2 = null, b2 = -1, S2 = 0, C2 = { type: ri, syntax: null, token: null, prev: null };
  for (r2(); v2 === null && ++_2 < ui; ) switch (t2.type) {
    case `Match`:
      if (p2 === null) {
        if (y2 !== null && (b2 !== e3.length - 1 || y2.value !== `\\0` && y2.value !== `\\9`)) {
          t2 = K;
          break;
        }
        v2 = si;
        break;
      }
      if (t2 = p2.nextState, t2 === Kr) if (p2.matchStack === C2) {
        t2 = K;
        break;
      } else t2 = G;
      for (; p2.syntaxStack !== f2; ) d2();
      p2 = p2.prev;
      break;
    case `Mismatch`:
      if (h2 !== null && h2 !== false) (m2 === null || b2 > m2.tokenIndex) && (m2 = h2, h2 = false);
      else if (m2 === null) {
        v2 = ci;
        break;
      }
      t2 = m2.nextState, p2 = m2.thenStack, f2 = m2.syntaxStack, C2 = m2.matchStack, b2 = m2.tokenIndex, y2 = b2 < e3.length ? e3[b2] : null, m2 = m2.prev;
      break;
    case `MatchGraph`:
      t2 = t2.match;
      break;
    case `If`:
      t2.else !== K && c2(t2.else), t2.then !== G && s2(t2.then), t2 = t2.match;
      break;
    case `MatchOnce`:
      t2 = { type: `MatchOnceBuffer`, syntax: t2, index: 0, mask: 0 };
      break;
    case `MatchOnceBuffer`: {
      let e4 = t2.syntax.terms;
      if (t2.index === e4.length) {
        if (t2.mask === 0 || t2.syntax.all) {
          t2 = K;
          break;
        }
        t2 = G;
        break;
      }
      if (t2.mask === (1 << e4.length) - 1) {
        t2 = G;
        break;
      }
      for (; t2.index < e4.length; t2.index++) {
        let n3 = 1 << t2.index;
        if ((t2.mask & n3) === 0) {
          c2(t2), s2({ type: `AddMatchOnce`, syntax: t2.syntax, mask: t2.mask | n3 }), t2 = e4[t2.index++];
          break;
        }
      }
      break;
    }
    case `AddMatchOnce`:
      t2 = { type: `MatchOnceBuffer`, syntax: t2.syntax, index: 0, mask: t2.mask };
      break;
    case `Enum`:
      if (y2 !== null) {
        let e4 = y2.value.toLowerCase();
        if (e4.indexOf(`\\`) !== -1 && (e4 = e4.replace(/\\[09].*$/, ``)), ni.call(t2.map, e4)) {
          t2 = t2.map[e4];
          break;
        }
      }
      t2 = K;
      break;
    case `Generic`: {
      let e4 = f2 === null ? null : f2.opts, n3 = b2 + Math.floor(t2.fn(y2, a2, e4));
      if (!isNaN(n3) && n3 > b2) {
        for (; b2 < n3; ) l2();
        t2 = G;
      } else t2 = K;
      break;
    }
    case `Type`:
    case `Property`: {
      let e4 = t2.type === `Type` ? `types` : `properties`, r4 = ni.call(n2, e4) ? n2[e4][t2.name] : null;
      if (!r4 || !r4.match) throw Error(`Bad syntax reference: ` + (t2.type === `Type` ? `<` + t2.name + `>` : `<'` + t2.name + `'>`));
      if (h2 !== false && y2 !== null && t2.type === `Type`) {
        let e5 = t2.name === `custom-ident` && y2.type === i || t2.name === `length` && y2.value === `0`;
        if (e5) {
          h2 === null && (h2 = o2(t2, m2)), t2 = K;
          break;
        }
      }
      u2(), t2 = r4.matchRef || r4.match;
      break;
    }
    case `Keyword`: {
      let e4 = t2.name;
      if (y2 !== null) {
        let n3 = y2.value;
        if (n3.indexOf(`\\`) !== -1 && (n3 = n3.replace(/\\[09].*$/, ``)), pi(n3, e4)) {
          l2(), t2 = G;
          break;
        }
      }
      t2 = K;
      break;
    }
    case `AtKeyword`:
    case `Function`:
      if (y2 !== null && pi(y2.value, t2.name)) {
        l2(), t2 = G;
        break;
      }
      t2 = K;
      break;
    case `Token`:
      if (y2 !== null && y2.value === t2.value) {
        l2(), t2 = G;
        break;
      }
      t2 = K;
      break;
    case `Comma`:
      y2 !== null && y2.type === x ? hi(C2.token) ? t2 = K : (l2(), t2 = gi(y2) ? K : G) : t2 = hi(C2.token) || gi(y2) ? G : K;
      break;
    case `String`:
      let r3 = ``, g2 = b2;
      for (; g2 < e3.length && r3.length < t2.value.length; g2++) r3 += e3[g2].value;
      if (pi(r3, t2.value)) {
        for (; b2 < g2; ) l2();
        t2 = G;
      } else t2 = K;
      break;
    default:
      throw Error(`Unknown node type: ` + t2.type);
  }
  switch (di += _2, v2) {
    case null:
      console.warn(`[csstree-match] BREAK after ` + ui + ` iterations`), v2 = li, C2 = null;
      break;
    case si:
      for (; f2 !== null; ) d2();
      break;
    default:
      C2 = null;
  }
  return { tokens: e3, reason: v2, iterations: _2, match: C2, longestMatch: S2 };
}
function vi(e3, t2, n2) {
  let r2 = _i(e3, t2, n2 || {});
  if (r2.match === null) return r2;
  let i2 = r2.match, a2 = r2.match = { syntax: t2.syntax || null, match: [] }, o2 = [a2];
  for (i2 = fi(i2).prev; i2 !== null; ) {
    switch (i2.type) {
      case ai:
        a2.match.push(a2 = { syntax: i2.syntax, match: [] }), o2.push(a2);
        break;
      case oi:
        o2.pop(), a2 = o2[o2.length - 1];
        break;
      default:
        a2.match.push({ syntax: i2.syntax || null, token: i2.token.value, node: i2.token.node });
    }
    i2 = i2.prev;
  }
  return r2;
}
var yi = {};
e(yi, { getTrace: () => bi, isKeyword: () => Ci, isProperty: () => Si, isType: () => xi });
function bi(e3) {
  function t2(e4) {
    return e4 === null ? false : e4.type === `Type` || e4.type === `Property` || e4.type === `Keyword`;
  }
  function n2(i2) {
    if (Array.isArray(i2.match)) {
      for (let e4 = 0; e4 < i2.match.length; e4++) if (n2(i2.match[e4])) return t2(i2.syntax) && r2.unshift(i2.syntax), true;
    } else if (i2.node === e3) return r2 = t2(i2.syntax) ? [i2.syntax] : [], true;
    return false;
  }
  let r2 = null;
  return this.matched !== null && n2(this.matched), r2;
}
function xi(e3, t2) {
  return wi(this, e3, (e4) => e4.type === `Type` && e4.name === t2);
}
function Si(e3, t2) {
  return wi(this, e3, (e4) => e4.type === `Property` && e4.name === t2);
}
function Ci(e3) {
  return wi(this, e3, (e4) => e4.type === `Keyword`);
}
function wi(e3, t2, n2) {
  let r2 = bi.call(e3, t2);
  return r2 === null ? false : r2.some(n2);
}
function Ti(e3) {
  return `node` in e3 ? e3.node : Ti(e3.match[0]);
}
function Ei(e3) {
  return `node` in e3 ? e3.node : Ei(e3.match[e3.match.length - 1]);
}
function Di(e3, t2, n2, r2, i2) {
  function a2(n3) {
    if (n3.syntax !== null && n3.syntax.type === r2 && n3.syntax.name === i2) {
      let r3 = Ti(n3), i3 = Ei(n3);
      e3.syntax.walk(t2, function(e4, t3, n4) {
        if (e4 === r3) {
          let e5 = new L();
          do {
            if (e5.appendData(t3.data), t3.data === i3) break;
            t3 = t3.next;
          } while (t3 !== null);
          o2.push({ parent: n4, nodes: e5 });
        }
      });
    }
    Array.isArray(n3.match) && n3.match.forEach(a2);
  }
  let o2 = [];
  return n2.matched !== null && a2(n2.matched), o2;
}
const { hasOwnProperty: Oi } = Object.prototype;
function ki(e3) {
  return typeof e3 == `number` && isFinite(e3) && Math.floor(e3) === e3 && e3 >= 0;
}
function Ai(e3) {
  return !!e3 && ki(e3.offset) && ki(e3.line) && ki(e3.column);
}
function ji(e3, t2) {
  return function(n2, r2) {
    if (!n2 || n2.constructor !== Object) return r2(n2, `Type of node should be an Object`);
    for (let i2 in n2) {
      let a2 = true;
      if (Oi.call(n2, i2) === false) continue;
      if (i2 === `type`) n2.type !== e3 && r2(n2, "Wrong node type `" + n2.type + "`, expected `" + e3 + "`");
      else if (i2 === `loc`) {
        if (n2.loc === null) continue;
        if (n2.loc && n2.loc.constructor === Object) if (typeof n2.loc.source != `string`) i2 += `.source`;
        else if (!Ai(n2.loc.start)) i2 += `.start`;
        else if (!Ai(n2.loc.end)) i2 += `.end`;
        else continue;
        a2 = false;
      } else if (t2.hasOwnProperty(i2)) {
        a2 = false;
        for (let e4 = 0; !a2 && e4 < t2[i2].length; e4++) {
          let r3 = t2[i2][e4];
          switch (r3) {
            case String:
              a2 = typeof n2[i2] == `string`;
              break;
            case Boolean:
              a2 = typeof n2[i2] == `boolean`;
              break;
            case null:
              a2 = n2[i2] === null;
              break;
            default:
              typeof r3 == `string` ? a2 = n2[i2] && n2[i2].type === r3 : Array.isArray(r3) && (a2 = n2[i2] instanceof L);
          }
        }
      } else r2(n2, "Unknown field `" + i2 + "` for " + e3 + ` node type`);
      a2 || r2(n2, "Bad value for `" + e3 + `.` + i2 + "`");
    }
    for (let i2 in t2) Oi.call(t2, i2) && Oi.call(n2, i2) === false && r2(n2, "Field `" + e3 + `.` + i2 + "` is missed");
  };
}
function Mi(e3, t2) {
  let n2 = [];
  for (let r2 = 0; r2 < e3.length; r2++) {
    let i2 = e3[r2];
    if (i2 === String || i2 === Boolean) n2.push(i2.name.toLowerCase());
    else if (i2 === null) n2.push(`null`);
    else if (typeof i2 == `string`) n2.push(i2);
    else if (Array.isArray(i2)) n2.push(`List<` + (Mi(i2, t2) || `any`) + `>`);
    else throw Error("Wrong value `" + i2 + "` in `" + t2 + "` structure definition");
  }
  return n2.join(` | `);
}
function Ni(e3, t2) {
  let n2 = t2.structure, r2 = { type: String, loc: true }, i2 = { type: `"` + e3 + `"` };
  for (let t3 in n2) {
    if (Oi.call(n2, t3) === false) continue;
    let a2 = r2[t3] = Array.isArray(n2[t3]) ? n2[t3].slice() : [n2[t3]];
    i2[t3] = Mi(a2, e3 + `.` + t3);
  }
  return { docs: i2, check: ji(e3, r2) };
}
function Pi(e3) {
  let t2 = {};
  if (e3.node) {
    for (let n2 in e3.node) if (Oi.call(e3.node, n2)) {
      let r2 = e3.node[n2];
      if (r2.structure) t2[n2] = Ni(n2, r2);
      else throw Error("Missed `structure` field in `" + n2 + "` node type definition");
    }
  }
  return t2;
}
function Fi(e3, t2, n2) {
  let r2 = {};
  for (let i2 in e3) e3[i2].syntax && (r2[i2] = n2 ? e3[i2].syntax : It(e3[i2].syntax, { compact: t2 }));
  return r2;
}
function Ii(e3, t2, n2) {
  let r2 = {};
  for (let [i2, a2] of Object.entries(e3)) r2[i2] = { prelude: a2.prelude && (n2 ? a2.prelude.syntax : It(a2.prelude.syntax, { compact: t2 })), descriptors: a2.descriptors && Fi(a2.descriptors, t2, n2) };
  return r2;
}
function Li(e3) {
  for (let t2 = 0; t2 < e3.length; t2++) if (e3[t2].value.toLowerCase() === `var(`) return true;
  return false;
}
function Ri(e3) {
  let t2 = e3.terms[0];
  return e3.explicit === false && e3.terms.length === 1 && t2.type === `Multiplier` && t2.comma === true;
}
function Y(e3, t2, n2) {
  return { matched: e3, iterations: n2, error: t2, ...yi };
}
function zi(e3, t2, n2, r2) {
  let i2 = Gr(n2, e3.syntax), a2;
  return Li(i2) ? Y(null, Error(`Matching for a tree with var() is not supported`)) : (r2 && (a2 = vi(i2, e3.cssWideKeywordsSyntax, e3)), (!r2 || !a2.match) && (a2 = vi(i2, t2.match, e3), !a2.match) ? Y(null, new Ht(a2.reason, t2.syntax, n2, a2), a2.iterations) : Y(a2.match, null, a2.iterations));
}
var Bi = class {
  constructor(e3, t2, n2) {
    if (this.cssWideKeywords = Qt, this.syntax = t2, this.generic = false, this.units = { ...zn }, this.atrules = /* @__PURE__ */ Object.create(null), this.properties = /* @__PURE__ */ Object.create(null), this.types = /* @__PURE__ */ Object.create(null), this.structure = n2 || Pi(e3), e3) {
      if (e3.cssWideKeywords && (this.cssWideKeywords = e3.cssWideKeywords), e3.units) for (let t3 of Object.keys(zn)) Array.isArray(e3.units[t3]) && (this.units[t3] = e3.units[t3]);
      if (e3.types) for (let [t3, n3] of Object.entries(e3.types)) this.addType_(t3, n3);
      if (e3.generic) {
        this.generic = true;
        for (let [e4, t3] of Object.entries(Rn(this.units))) this.addType_(e4, t3);
      }
      if (e3.atrules) for (let [t3, n3] of Object.entries(e3.atrules)) this.addAtrule_(t3, n3);
      if (e3.properties) for (let [t3, n3] of Object.entries(e3.properties)) this.addProperty_(t3, n3);
    }
    this.cssWideKeywordsSyntax = ti(this.cssWideKeywords.join(` |  `));
  }
  checkStructure(e3) {
    function t2(e4, t3) {
      r2.push({ node: e4, message: t3 });
    }
    let n2 = this.structure, r2 = [];
    return this.syntax.walk(e3, function(e4) {
      n2.hasOwnProperty(e4.type) ? n2[e4.type].check(e4, t2) : t2(e4, "Unknown node type `" + e4.type + "`");
    }), r2.length ? r2 : false;
  }
  createDescriptor(e3, t2, n2, r2 = null) {
    let i2 = { type: t2, name: n2 }, a2 = { type: t2, name: n2, parent: r2, serializable: typeof e3 == `string` || e3 && typeof e3.type == `string`, syntax: null, match: null, matchRef: null };
    return typeof e3 == `function` ? a2.match = ti(e3, i2) : (typeof e3 == `string` ? Object.defineProperty(a2, `syntax`, { get() {
      return Object.defineProperty(a2, `syntax`, { value: zr(e3) }), a2.syntax;
    } }) : a2.syntax = e3, Object.defineProperty(a2, `match`, { get() {
      return Object.defineProperty(a2, `match`, { value: ti(a2.syntax, i2) }), a2.match;
    } }), t2 === `Property` && Object.defineProperty(a2, `matchRef`, { get() {
      let e4 = a2.syntax, t3 = Ri(e4) ? ti({ ...e4, terms: [e4.terms[0].term] }, i2) : null;
      return Object.defineProperty(a2, `matchRef`, { value: t3 }), t3;
    } })), a2;
  }
  addAtrule_(e3, t2) {
    t2 && (this.atrules[e3] = { type: `Atrule`, name: e3, prelude: t2.prelude ? this.createDescriptor(t2.prelude, `AtrulePrelude`, e3) : null, descriptors: t2.descriptors ? Object.keys(t2.descriptors).reduce((n2, r2) => (n2[r2] = this.createDescriptor(t2.descriptors[r2], `AtruleDescriptor`, r2, e3), n2), /* @__PURE__ */ Object.create(null)) : null });
  }
  addProperty_(e3, t2) {
    t2 && (this.properties[e3] = this.createDescriptor(t2, `Property`, e3));
  }
  addType_(e3, t2) {
    t2 && (this.types[e3] = this.createDescriptor(t2, `Type`, e3));
  }
  checkAtruleName(e3) {
    if (!this.getAtrule(e3)) return new Vt(`Unknown at-rule`, `@` + e3);
  }
  checkAtrulePrelude(e3, t2) {
    let n2 = this.checkAtruleName(e3);
    if (n2) return n2;
    let r2 = this.getAtrule(e3);
    if (!r2.prelude && t2) return SyntaxError("At-rule `@" + e3 + "` should not contain a prelude");
    if (r2.prelude && !t2 && !zi(this, r2.prelude, ``, false).matched) return SyntaxError("At-rule `@" + e3 + "` should contain a prelude");
  }
  checkAtruleDescriptorName(e3, t2) {
    let n2 = this.checkAtruleName(e3);
    if (n2) return n2;
    let r2 = this.getAtrule(e3), i2 = Kt(t2);
    if (!r2.descriptors) return SyntaxError("At-rule `@" + e3 + "` has no known descriptors");
    if (!r2.descriptors[i2.name] && !r2.descriptors[i2.basename]) return new Vt(`Unknown at-rule descriptor`, t2);
  }
  checkPropertyName(e3) {
    if (!this.getProperty(e3)) return new Vt(`Unknown property`, e3);
  }
  matchAtrulePrelude(e3, t2) {
    let n2 = this.checkAtrulePrelude(e3, t2);
    if (n2) return Y(null, n2);
    let r2 = this.getAtrule(e3);
    return r2.prelude ? zi(this, r2.prelude, t2 || ``, false) : Y(null, null);
  }
  matchAtruleDescriptor(e3, t2, n2) {
    let r2 = this.checkAtruleDescriptorName(e3, t2);
    if (r2) return Y(null, r2);
    let i2 = this.getAtrule(e3), a2 = Kt(t2);
    return zi(this, i2.descriptors[a2.name] || i2.descriptors[a2.basename], n2, false);
  }
  matchDeclaration(e3) {
    return e3.type === `Declaration` ? this.matchProperty(e3.property, e3.value) : Y(null, Error(`Not a Declaration node`));
  }
  matchProperty(e3, t2) {
    if (qt(e3).custom) return Y(null, Error(`Lexer matching doesn't applicable for custom properties`));
    let n2 = this.checkPropertyName(e3);
    return n2 ? Y(null, n2) : zi(this, this.getProperty(e3), t2, true);
  }
  matchType(e3, t2) {
    let n2 = this.getType(e3);
    return n2 ? zi(this, n2, t2, false) : Y(null, new Vt(`Unknown type`, e3));
  }
  match(e3, t2) {
    return typeof e3 != `string` && (!e3 || !e3.type) ? Y(null, new Vt(`Bad syntax`)) : ((typeof e3 == `string` || !e3.match) && (e3 = this.createDescriptor(e3, `Type`, `anonymous`)), zi(this, e3, t2, false));
  }
  findValueFragments(e3, t2, n2, r2) {
    return Di(this, t2, this.matchProperty(e3, t2), n2, r2);
  }
  findDeclarationValueFragments(e3, t2, n2) {
    return Di(this, e3.value, this.matchDeclaration(e3), t2, n2);
  }
  findAllFragments(e3, t2, n2) {
    let r2 = [];
    return this.syntax.walk(e3, { visit: `Declaration`, enter: (e4) => {
      r2.push.apply(r2, this.findDeclarationValueFragments(e4, t2, n2));
    } }), r2;
  }
  getAtrule(e3, t2 = true) {
    let n2 = Kt(e3), r2 = n2.vendor && t2 ? this.atrules[n2.name] || this.atrules[n2.basename] : this.atrules[n2.name];
    return r2 || null;
  }
  getAtrulePrelude(e3, t2 = true) {
    let n2 = this.getAtrule(e3, t2);
    return n2 && n2.prelude || null;
  }
  getAtruleDescriptor(e3, t2) {
    return this.atrules.hasOwnProperty(e3) && this.atrules.declarators && this.atrules[e3].declarators[t2] || null;
  }
  getProperty(e3, t2 = true) {
    let n2 = qt(e3), r2 = n2.vendor && t2 ? this.properties[n2.name] || this.properties[n2.basename] : this.properties[n2.name];
    return r2 || null;
  }
  getType(e3) {
    return hasOwnProperty.call(this.types, e3) ? this.types[e3] : null;
  }
  validate() {
    function e3(e4, t3) {
      return t3 ? `<${e4}>` : `<'${e4}'>`;
    }
    function t2(a3, o3, s2, c2) {
      if (s2.has(o3)) return s2.get(o3);
      s2.set(o3, false), c2.syntax !== null && Hr(c2.syntax, function(c3) {
        if (c3.type !== `Type` && c3.type !== `Property`) return;
        let l2 = c3.type === `Type` ? a3.types : a3.properties, u2 = c3.type === `Type` ? r2 : i2;
        hasOwnProperty.call(l2, c3.name) ? t2(a3, c3.name, u2, l2[c3.name]) && (n2.push(`${e3(o3, s2 === r2)} used broken syntax definition ${e3(c3.name, c3.type === `Type`)}`), s2.set(o3, true)) : (n2.push(`${e3(o3, s2 === r2)} used missed syntax definition ${e3(c3.name, c3.type === `Type`)}`), s2.set(o3, true));
      }, this);
    }
    let n2 = [], r2 = /* @__PURE__ */ new Map(), i2 = /* @__PURE__ */ new Map();
    for (let e4 in this.types) t2(this, e4, r2, this.types[e4]);
    for (let e4 in this.properties) t2(this, e4, i2, this.properties[e4]);
    let a2 = [...r2.keys()].filter((e4) => r2.get(e4)), o2 = [...i2.keys()].filter((e4) => i2.get(e4));
    return a2.length || o2.length ? { errors: n2, types: a2, properties: o2 } : null;
  }
  dump(e3, t2) {
    return { generic: this.generic, cssWideKeywords: this.cssWideKeywords, units: this.units, types: Fi(this.types, !t2, e3), properties: Fi(this.properties, !t2, e3), atrules: Ii(this.atrules, !t2, e3) };
  }
  toString() {
    return JSON.stringify(this.dump());
  }
};
function Vi(e3, t2) {
  return typeof t2 == `string` && /^\s*\|/.test(t2) ? typeof e3 == `string` ? e3 + t2 : t2.replace(/^\s*\|\s*/, ``) : t2 || null;
}
function Hi(e3, t2) {
  let n2 = /* @__PURE__ */ Object.create(null);
  for (let [r2, i2] of Object.entries(e3)) if (i2) {
    n2[r2] = {};
    for (let e4 of Object.keys(i2)) t2.includes(e4) && (n2[r2][e4] = i2[e4]);
  }
  return n2;
}
function Ui(e3, t2) {
  let n2 = { ...e3 };
  for (let [r2, i2] of Object.entries(t2)) switch (r2) {
    case `generic`:
      n2[r2] = !!i2;
      break;
    case `cssWideKeywords`:
      n2[r2] = e3[r2] ? [...e3[r2], ...i2] : i2 || [];
      break;
    case `units`:
      n2[r2] = { ...e3[r2] };
      for (let [e4, t3] of Object.entries(i2)) n2[r2][e4] = Array.isArray(t3) ? t3 : [];
      break;
    case `atrules`:
      n2[r2] = { ...e3[r2] };
      for (let [e4, t3] of Object.entries(i2)) {
        let i3 = n2[r2][e4] || {}, a2 = n2[r2][e4] = { prelude: i3.prelude || null, descriptors: { ...i3.descriptors } };
        if (!t3) continue;
        a2.prelude = t3.prelude ? Vi(a2.prelude, t3.prelude) : a2.prelude || null;
        for (let [e5, n3] of Object.entries(t3.descriptors || {})) a2.descriptors[e5] = n3 ? Vi(a2.descriptors[e5], n3) : null;
        Object.keys(a2.descriptors).length || (a2.descriptors = null);
      }
      break;
    case `types`:
    case `properties`:
      n2[r2] = { ...e3[r2] };
      for (let [e4, t3] of Object.entries(i2)) n2[r2][e4] = Vi(n2[r2][e4], t3);
      break;
    case `scope`:
    case `features`:
      n2[r2] = { ...e3[r2] };
      for (let [e4, t3] of Object.entries(i2)) n2[r2][e4] = { ...n2[r2][e4], ...t3 };
      break;
    case `parseContext`:
      n2[r2] = { ...e3[r2], ...i2 };
      break;
    case `atrule`:
    case `pseudo`:
      n2[r2] = { ...e3[r2], ...Hi(i2, [`parse`]) };
      break;
    case `node`:
      n2[r2] = { ...e3[r2], ...Hi(i2, [`name`, `structure`, `parse`, `generate`, `walkContext`]) };
      break;
  }
  return n2;
}
function Wi(e3) {
  let t2 = it(e3), n2 = At(e3), r2 = bt(e3), { fromPlainObject: i2, toPlainObject: a2 } = xt(n2), o2 = { lexer: null, createLexer: (e4) => new Bi(e4, o2, o2.lexer.structure), tokenize: Be, parse: t2, generate: r2, walk: n2, find: n2.find, findLast: n2.findLast, findAll: n2.findAll, fromPlainObject: i2, toPlainObject: a2, fork(t3) {
    let n3 = Ui({}, e3);
    return Wi(typeof t3 == `function` ? t3(n3) : Ui(n3, t3));
  } };
  return o2.lexer = new Bi({ generic: e3.generic, cssWideKeywords: e3.cssWideKeywords, units: e3.units, types: e3.types, atrules: e3.atrules, properties: e3.properties, node: e3.node }, o2), o2;
}
var Gi = (e3) => Wi(Ui({}, e3)), Ki = { generic: true, cssWideKeywords: [`initial`, `inherit`, `unset`, `revert`, `revert-layer`], units: { angle: [`deg`, `grad`, `rad`, `turn`], decibel: [`db`], flex: [`fr`], frequency: [`hz`, `khz`], length: `cm.mm.q.in.pt.pc.px.em.rem.ex.rex.cap.rcap.ch.rch.ic.ric.lh.rlh.vw.svw.lvw.dvw.vh.svh.lvh.dvh.vi.svi.lvi.dvi.vb.svb.lvb.dvb.vmin.svmin.lvmin.dvmin.vmax.svmax.lvmax.dvmax.cqw.cqh.cqi.cqb.cqmin.cqmax`.split(`.`), resolution: [`dpi`, `dpcm`, `dppx`, `x`], semitones: [`st`], time: [`s`, `ms`] }, types: { "abs()": `abs( <calc-sum> )`, "absolute-size": `xx-small|x-small|small|medium|large|x-large|xx-large|xxx-large`, "acos()": `acos( <calc-sum> )`, "alpha-value": `<number>|<percentage>`, "angle-percentage": `<angle>|<percentage>`, "angular-color-hint": `<angle-percentage>`, "angular-color-stop": `<color>&&<color-stop-angle>?`, "angular-color-stop-list": `[<angular-color-stop> [, <angular-color-hint>]?]# , <angular-color-stop>`, "animateable-feature": `scroll-position|contents|<custom-ident>`, "asin()": `asin( <calc-sum> )`, "atan()": `atan( <calc-sum> )`, "atan2()": `atan2( <calc-sum> , <calc-sum> )`, attachment: `scroll|fixed|local`, "attr()": `attr( <attr-name> <type-or-unit>? [, <attr-fallback>]? )`, "attr-matcher": `['~'|'|'|'^'|'$'|'*']? '='`, "attr-modifier": `i|s`, "attribute-selector": `'[' <wq-name> ']'|'[' <wq-name> <attr-matcher> [<string-token>|<ident-token>] <attr-modifier>? ']'`, "auto-repeat": `repeat( [auto-fill|auto-fit] , [<line-names>? <fixed-size>]+ <line-names>? )`, "auto-track-list": `[<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>? <auto-repeat> [<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>?`, axis: `block|inline|x|y`, "baseline-position": `[first|last]? baseline`, "basic-shape": `<inset()>|<xywh()>|<rect()>|<circle()>|<ellipse()>|<polygon()>|<path()>`, "bg-image": `none|<image>`, "bg-layer": `<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>`, "bg-position": `[[left|center|right|top|bottom|<length-percentage>]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]|[center|[left|right] <length-percentage>?]&&[center|[top|bottom] <length-percentage>?]]`, "bg-size": `[<length-percentage>|auto]{1,2}|cover|contain`, "blur()": `blur( <length> )`, "blend-mode": `normal|multiply|screen|overlay|darken|lighten|color-dodge|color-burn|hard-light|soft-light|difference|exclusion|hue|saturation|color|luminosity`, box: `border-box|padding-box|content-box`, "brightness()": `brightness( <number-percentage> )`, "calc()": `calc( <calc-sum> )`, "calc-sum": `<calc-product> [['+'|'-'] <calc-product>]*`, "calc-product": `<calc-value> ['*' <calc-value>|'/' <number>]*`, "calc-value": `<number>|<dimension>|<percentage>|<calc-constant>|( <calc-sum> )`, "calc-constant": `e|pi|infinity|-infinity|NaN`, "cf-final-image": `<image>|<color>`, "cf-mixing-image": `<percentage>?&&<image>`, "circle()": `circle( [<shape-radius>]? [at <position>]? )`, "clamp()": `clamp( <calc-sum>#{3} )`, "class-selector": `'.' <ident-token>`, "clip-source": `<url>`, color: `<color-base>|currentColor|<system-color>|<device-cmyk()>|<light-dark()>|<-non-standard-color>`, "color-stop": `<color-stop-length>|<color-stop-angle>`, "color-stop-angle": `<angle-percentage>{1,2}`, "color-stop-length": `<length-percentage>{1,2}`, "color-stop-list": `[<linear-color-stop> [, <linear-color-hint>]?]# , <linear-color-stop>`, "color-interpolation-method": `in [<rectangular-color-space>|<polar-color-space> <hue-interpolation-method>?|<custom-color-space>]`, combinator: `'>'|'+'|'~'|['|' '|']`, "common-lig-values": `[common-ligatures|no-common-ligatures]`, "compat-auto": `searchfield|textarea|push-button|slider-horizontal|checkbox|radio|square-button|menulist|listbox|meter|progress-bar|button`, "composite-style": `clear|copy|source-over|source-in|source-out|source-atop|destination-over|destination-in|destination-out|destination-atop|xor`, "compositing-operator": `add|subtract|intersect|exclude`, "compound-selector": `[<type-selector>? <subclass-selector>*]!`, "compound-selector-list": `<compound-selector>#`, "complex-selector": `<complex-selector-unit> [<combinator>? <complex-selector-unit>]*`, "complex-selector-list": `<complex-selector>#`, "conic-gradient()": `conic-gradient( [from <angle>]? [at <position>]? , <angular-color-stop-list> )`, "contextual-alt-values": `[contextual|no-contextual]`, "content-distribution": `space-between|space-around|space-evenly|stretch`, "content-list": `[<string>|contents|<image>|<counter>|<quote>|<target>|<leader()>|<attr()>]+`, "content-position": `center|start|end|flex-start|flex-end`, "content-replacement": `<image>`, "contrast()": `contrast( [<number-percentage>] )`, "cos()": `cos( <calc-sum> )`, counter: `<counter()>|<counters()>`, "counter()": `counter( <counter-name> , <counter-style>? )`, "counter-name": `<custom-ident>`, "counter-style": `<counter-style-name>|symbols( )`, "counter-style-name": `<custom-ident>`, "counters()": `counters( <counter-name> , <string> , <counter-style>? )`, "cross-fade()": `cross-fade( <cf-mixing-image> , <cf-final-image>? )`, "cubic-bezier-timing-function": `ease|ease-in|ease-out|ease-in-out|cubic-bezier( <number [0,1]> , <number> , <number [0,1]> , <number> )`, "deprecated-system-color": `ActiveBorder|ActiveCaption|AppWorkspace|Background|ButtonFace|ButtonHighlight|ButtonShadow|ButtonText|CaptionText|GrayText|Highlight|HighlightText|InactiveBorder|InactiveCaption|InactiveCaptionText|InfoBackground|InfoText|Menu|MenuText|Scrollbar|ThreeDDarkShadow|ThreeDFace|ThreeDHighlight|ThreeDLightShadow|ThreeDShadow|Window|WindowFrame|WindowText`, "discretionary-lig-values": `[discretionary-ligatures|no-discretionary-ligatures]`, "display-box": `contents|none`, "display-inside": `flow|flow-root|table|flex|grid|ruby`, "display-internal": `table-row-group|table-header-group|table-footer-group|table-row|table-cell|table-column-group|table-column|table-caption|ruby-base|ruby-text|ruby-base-container|ruby-text-container`, "display-legacy": `inline-block|inline-list-item|inline-table|inline-flex|inline-grid`, "display-listitem": `<display-outside>?&&[flow|flow-root]?&&list-item`, "display-outside": `block|inline|run-in`, "drop-shadow()": `drop-shadow( <length>{2,3} <color>? )`, "east-asian-variant-values": `[jis78|jis83|jis90|jis04|simplified|traditional]`, "east-asian-width-values": `[full-width|proportional-width]`, "element()": `element( <custom-ident> , [first|start|last|first-except]? )|element( <id-selector> )`, "ellipse()": `ellipse( [<shape-radius>{2}]? [at <position>]? )`, "ending-shape": `circle|ellipse`, "env()": `env( <custom-ident> , <declaration-value>? )`, "exp()": `exp( <calc-sum> )`, "explicit-track-list": `[<line-names>? <track-size>]+ <line-names>?`, "family-name": `<string>|<custom-ident>+`, "feature-tag-value": `<string> [<integer>|on|off]?`, "feature-type": `@stylistic|@historical-forms|@styleset|@character-variant|@swash|@ornaments|@annotation`, "feature-value-block": `<feature-type> '{' <feature-value-declaration-list> '}'`, "feature-value-block-list": `<feature-value-block>+`, "feature-value-declaration": `<custom-ident> : <integer>+ ;`, "feature-value-declaration-list": `<feature-value-declaration>`, "feature-value-name": `<custom-ident>`, "fill-rule": `nonzero|evenodd`, "filter-function": `<blur()>|<brightness()>|<contrast()>|<drop-shadow()>|<grayscale()>|<hue-rotate()>|<invert()>|<opacity()>|<saturate()>|<sepia()>`, "filter-function-list": `[<filter-function>|<url>]+`, "final-bg-layer": `<'background-color'>||<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>`, "fixed-breadth": `<length-percentage>`, "fixed-repeat": `repeat( [<integer [1,\u221E]>] , [<line-names>? <fixed-size>]+ <line-names>? )`, "fixed-size": `<fixed-breadth>|minmax( <fixed-breadth> , <track-breadth> )|minmax( <inflexible-breadth> , <fixed-breadth> )`, "font-stretch-absolute": `normal|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|<percentage>`, "font-variant-css21": `[normal|small-caps]`, "font-weight-absolute": `normal|bold|<number [1,1000]>`, "frequency-percentage": `<frequency>|<percentage>`, "general-enclosed": `[<function-token> <any-value>? )]|[( <any-value>? )]`, "generic-family": `<generic-script-specific>|<generic-complete>|<generic-incomplete>|<-non-standard-generic-family>`, "generic-name": `serif|sans-serif|cursive|fantasy|monospace`, "geometry-box": `<shape-box>|fill-box|stroke-box|view-box`, gradient: `<linear-gradient()>|<repeating-linear-gradient()>|<radial-gradient()>|<repeating-radial-gradient()>|<conic-gradient()>|<repeating-conic-gradient()>|<-legacy-gradient>`, "grayscale()": `grayscale( <number-percentage> )`, "grid-line": `auto|<custom-ident>|[<integer>&&<custom-ident>?]|[span&&[<integer>||<custom-ident>]]`, "historical-lig-values": `[historical-ligatures|no-historical-ligatures]`, "hsl()": `hsl( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsl( <hue> , <percentage> , <percentage> , <alpha-value>? )`, "hsla()": `hsla( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsla( <hue> , <percentage> , <percentage> , <alpha-value>? )`, hue: `<number>|<angle>`, "hue-rotate()": `hue-rotate( <angle> )`, "hue-interpolation-method": `[shorter|longer|increasing|decreasing] hue`, "hwb()": `hwb( [<hue>|none] [<percentage>|none] [<percentage>|none] [/ [<alpha-value>|none]]? )`, "hypot()": `hypot( <calc-sum># )`, image: `<url>|<image()>|<image-set()>|<element()>|<paint()>|<cross-fade()>|<gradient>`, "image()": `image( <image-tags>? [<image-src>? , <color>?]! )`, "image-set()": `image-set( <image-set-option># )`, "image-set-option": `[<image>|<string>] [<resolution>||type( <string> )]`, "image-src": `<url>|<string>`, "image-tags": `ltr|rtl`, "inflexible-breadth": `<length-percentage>|min-content|max-content|auto`, "inset()": `inset( <length-percentage>{1,4} [round <'border-radius'>]? )`, "invert()": `invert( <number-percentage> )`, "keyframes-name": `<custom-ident>|<string>`, "keyframe-block": `<keyframe-selector># { <declaration-list> }`, "keyframe-block-list": `<keyframe-block>+`, "keyframe-selector": `from|to|<percentage>|<timeline-range-name> <percentage>`, "lab()": `lab( [<percentage>|<number>|none] [<percentage>|<number>|none] [<percentage>|<number>|none] [/ [<alpha-value>|none]]? )`, "layer()": `layer( <layer-name> )`, "layer-name": `<ident> ['.' <ident>]*`, "lch()": `lch( [<percentage>|<number>|none] [<percentage>|<number>|none] [<hue>|none] [/ [<alpha-value>|none]]? )`, "leader()": `leader( <leader-type> )`, "leader-type": `dotted|solid|space|<string>`, "length-percentage": `<length>|<percentage>`, "light-dark()": `light-dark( <color> , <color> )`, "line-names": `'[' <custom-ident>* ']'`, "line-name-list": `[<line-names>|<name-repeat>]+`, "line-style": `none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset`, "line-width": `<length>|thin|medium|thick`, "linear-color-hint": `<length-percentage>`, "linear-color-stop": `<color> <color-stop-length>?`, "linear-gradient()": `linear-gradient( [[<angle>|to <side-or-corner>]||<color-interpolation-method>]? , <color-stop-list> )`, "log()": `log( <calc-sum> , <calc-sum>? )`, "mask-layer": `<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||<geometry-box>||[<geometry-box>|no-clip]||<compositing-operator>||<masking-mode>`, "mask-position": `[<length-percentage>|left|center|right] [<length-percentage>|top|center|bottom]?`, "mask-reference": `none|<image>|<mask-source>`, "mask-source": `<url>`, "masking-mode": `alpha|luminance|match-source`, "matrix()": `matrix( <number>#{6} )`, "matrix3d()": `matrix3d( <number>#{16} )`, "max()": `max( <calc-sum># )`, "media-and": `<media-in-parens> [and <media-in-parens>]+`, "media-condition": `<media-not>|<media-and>|<media-or>|<media-in-parens>`, "media-condition-without-or": `<media-not>|<media-and>|<media-in-parens>`, "media-feature": `( [<mf-plain>|<mf-boolean>|<mf-range>] )`, "media-in-parens": `( <media-condition> )|<media-feature>|<general-enclosed>`, "media-not": `not <media-in-parens>`, "media-or": `<media-in-parens> [or <media-in-parens>]+`, "media-query": `<media-condition>|[not|only]? <media-type> [and <media-condition-without-or>]?`, "media-query-list": `<media-query>#`, "media-type": `<ident>`, "mf-boolean": `<mf-name>`, "mf-name": `<ident>`, "mf-plain": `<mf-name> : <mf-value>`, "mf-range": `<mf-name> ['<'|'>']? '='? <mf-value>|<mf-value> ['<'|'>']? '='? <mf-name>|<mf-value> '<' '='? <mf-name> '<' '='? <mf-value>|<mf-value> '>' '='? <mf-name> '>' '='? <mf-value>`, "mf-value": `<number>|<dimension>|<ident>|<ratio>`, "min()": `min( <calc-sum># )`, "minmax()": `minmax( [<length-percentage>|min-content|max-content|auto] , [<length-percentage>|<flex>|min-content|max-content|auto] )`, "mod()": `mod( <calc-sum> , <calc-sum> )`, "name-repeat": `repeat( [<integer [1,\u221E]>|auto-fill] , <line-names>+ )`, "named-color": `transparent|aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen`, "namespace-prefix": `<ident>`, "ns-prefix": `[<ident-token>|'*']? '|'`, "number-percentage": `<number>|<percentage>`, "numeric-figure-values": `[lining-nums|oldstyle-nums]`, "numeric-fraction-values": `[diagonal-fractions|stacked-fractions]`, "numeric-spacing-values": `[proportional-nums|tabular-nums]`, nth: `<an-plus-b>|even|odd`, "opacity()": `opacity( [<number-percentage>] )`, "overflow-position": `unsafe|safe`, "outline-radius": `<length>|<percentage>`, "page-body": `<declaration>? [; <page-body>]?|<page-margin-box> <page-body>`, "page-margin-box": `<page-margin-box-type> '{' <declaration-list> '}'`, "page-margin-box-type": `@top-left-corner|@top-left|@top-center|@top-right|@top-right-corner|@bottom-left-corner|@bottom-left|@bottom-center|@bottom-right|@bottom-right-corner|@left-top|@left-middle|@left-bottom|@right-top|@right-middle|@right-bottom`, "page-selector-list": `[<page-selector>#]?`, "page-selector": `<pseudo-page>+|<ident> <pseudo-page>*`, "page-size": `A5|A4|A3|B5|B4|JIS-B5|JIS-B4|letter|legal|ledger`, "path()": `path( [<fill-rule> ,]? <string> )`, "paint()": `paint( <ident> , <declaration-value>? )`, "perspective()": `perspective( [<length [0,\u221E]>|none] )`, "polygon()": `polygon( <fill-rule>? , [<length-percentage> <length-percentage>]# )`, "polar-color-space": `hsl|hwb|lch|oklch`, position: `[[left|center|right]||[top|center|bottom]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]?|[[left|right] <length-percentage>]&&[[top|bottom] <length-percentage>]]`, "pow()": `pow( <calc-sum> , <calc-sum> )`, "pseudo-class-selector": `':' <ident-token>|':' <function-token> <any-value> ')'`, "pseudo-element-selector": `':' <pseudo-class-selector>|<legacy-pseudo-element-selector>`, "pseudo-page": `: [left|right|first|blank]`, quote: `open-quote|close-quote|no-open-quote|no-close-quote`, "radial-gradient()": `radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )`, ratio: `<number [0,\u221E]> [/ <number [0,\u221E]>]?`, "ray()": `ray( <angle>&&<ray-size>?&&contain?&&[at <position>]? )`, "ray-size": `closest-side|closest-corner|farthest-side|farthest-corner|sides`, "rectangular-color-space": `srgb|srgb-linear|display-p3|a98-rgb|prophoto-rgb|rec2020|lab|oklab|xyz|xyz-d50|xyz-d65`, "relative-selector": `<combinator>? <complex-selector>`, "relative-selector-list": `<relative-selector>#`, "relative-size": `larger|smaller`, "rem()": `rem( <calc-sum> , <calc-sum> )`, "repeat-style": `repeat-x|repeat-y|[repeat|space|round|no-repeat]{1,2}`, "repeating-conic-gradient()": `repeating-conic-gradient( [from <angle>]? [at <position>]? , <angular-color-stop-list> )`, "repeating-linear-gradient()": `repeating-linear-gradient( [<angle>|to <side-or-corner>]? , <color-stop-list> )`, "repeating-radial-gradient()": `repeating-radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )`, "reversed-counter-name": `reversed( <counter-name> )`, "rgb()": `rgb( <percentage>{3} [/ <alpha-value>]? )|rgb( <number>{3} [/ <alpha-value>]? )|rgb( <percentage>#{3} , <alpha-value>? )|rgb( <number>#{3} , <alpha-value>? )`, "rgba()": `rgba( <percentage>{3} [/ <alpha-value>]? )|rgba( <number>{3} [/ <alpha-value>]? )|rgba( <percentage>#{3} , <alpha-value>? )|rgba( <number>#{3} , <alpha-value>? )`, "rotate()": `rotate( [<angle>|<zero>] )`, "rotate3d()": `rotate3d( <number> , <number> , <number> , [<angle>|<zero>] )`, "rotateX()": `rotateX( [<angle>|<zero>] )`, "rotateY()": `rotateY( [<angle>|<zero>] )`, "rotateZ()": `rotateZ( [<angle>|<zero>] )`, "round()": `round( <rounding-strategy>? , <calc-sum> , <calc-sum> )`, "rounding-strategy": `nearest|up|down|to-zero`, "saturate()": `saturate( <number-percentage> )`, "scale()": `scale( [<number>|<percentage>]#{1,2} )`, "scale3d()": `scale3d( [<number>|<percentage>]#{3} )`, "scaleX()": `scaleX( [<number>|<percentage>] )`, "scaleY()": `scaleY( [<number>|<percentage>] )`, "scaleZ()": `scaleZ( [<number>|<percentage>] )`, "scroll()": `scroll( [<axis>||<scroller>]? )`, scroller: `root|nearest|self`, "self-position": `center|start|end|self-start|self-end|flex-start|flex-end`, "shape-radius": `<length-percentage>|closest-side|farthest-side`, "sign()": `sign( <calc-sum> )`, "skew()": `skew( [<angle>|<zero>] , [<angle>|<zero>]? )`, "skewX()": `skewX( [<angle>|<zero>] )`, "skewY()": `skewY( [<angle>|<zero>] )`, "sepia()": `sepia( <number-percentage> )`, shadow: `inset?&&<length>{2,4}&&<color>?`, "shadow-t": `[<length>{2,3}&&<color>?]`, shape: `rect( <top> , <right> , <bottom> , <left> )|rect( <top> <right> <bottom> <left> )`, "shape-box": `<box>|margin-box`, "side-or-corner": `[left|right]||[top|bottom]`, "sin()": `sin( <calc-sum> )`, "single-animation": `<'animation-duration'>||<easing-function>||<'animation-delay'>||<single-animation-iteration-count>||<single-animation-direction>||<single-animation-fill-mode>||<single-animation-play-state>||[none|<keyframes-name>]||<single-animation-timeline>`, "single-animation-direction": `normal|reverse|alternate|alternate-reverse`, "single-animation-fill-mode": `none|forwards|backwards|both`, "single-animation-iteration-count": `infinite|<number>`, "single-animation-play-state": `running|paused`, "single-animation-timeline": `auto|none|<dashed-ident>|<scroll()>|<view()>`, "single-transition": `[none|<single-transition-property>]||<time>||<easing-function>||<time>||<transition-behavior-value>`, "single-transition-property": `all|<custom-ident>`, size: `closest-side|farthest-side|closest-corner|farthest-corner|<length>|<length-percentage>{2}`, "sqrt()": `sqrt( <calc-sum> )`, "step-position": `jump-start|jump-end|jump-none|jump-both|start|end`, "step-timing-function": `step-start|step-end|steps( <integer> [, <step-position>]? )`, "subclass-selector": `<id-selector>|<class-selector>|<attribute-selector>|<pseudo-class-selector>`, "supports-condition": `not <supports-in-parens>|<supports-in-parens> [and <supports-in-parens>]*|<supports-in-parens> [or <supports-in-parens>]*`, "supports-in-parens": `( <supports-condition> )|<supports-feature>|<general-enclosed>`, "supports-feature": `<supports-decl>|<supports-selector-fn>`, "supports-decl": `( <declaration> )`, "supports-selector-fn": `selector( <complex-selector> )`, symbol: `<string>|<image>|<custom-ident>`, "system-color": `AccentColor|AccentColorText|ActiveText|ButtonBorder|ButtonFace|ButtonText|Canvas|CanvasText|Field|FieldText|GrayText|Highlight|HighlightText|LinkText|Mark|MarkText|SelectedItem|SelectedItemText|VisitedText`, "tan()": `tan( <calc-sum> )`, target: `<target-counter()>|<target-counters()>|<target-text()>`, "target-counter()": `target-counter( [<string>|<url>] , <custom-ident> , <counter-style>? )`, "target-counters()": `target-counters( [<string>|<url>] , <custom-ident> , <string> , <counter-style>? )`, "target-text()": `target-text( [<string>|<url>] , [content|before|after|first-letter]? )`, "time-percentage": `<time>|<percentage>`, "timeline-range-name": `cover|contain|entry|exit|entry-crossing|exit-crossing`, "easing-function": `linear|<cubic-bezier-timing-function>|<step-timing-function>`, "track-breadth": `<length-percentage>|<flex>|min-content|max-content|auto`, "track-list": `[<line-names>? [<track-size>|<track-repeat>]]+ <line-names>?`, "track-repeat": `repeat( [<integer [1,\u221E]>] , [<line-names>? <track-size>]+ <line-names>? )`, "track-size": `<track-breadth>|minmax( <inflexible-breadth> , <track-breadth> )|fit-content( <length-percentage> )`, "transform-function": `<matrix()>|<translate()>|<translateX()>|<translateY()>|<scale()>|<scaleX()>|<scaleY()>|<rotate()>|<skew()>|<skewX()>|<skewY()>|<matrix3d()>|<translate3d()>|<translateZ()>|<scale3d()>|<scaleZ()>|<rotate3d()>|<rotateX()>|<rotateY()>|<rotateZ()>|<perspective()>`, "transform-list": `<transform-function>+`, "transition-behavior-value": `normal|allow-discrete`, "translate()": `translate( <length-percentage> , <length-percentage>? )`, "translate3d()": `translate3d( <length-percentage> , <length-percentage> , <length> )`, "translateX()": `translateX( <length-percentage> )`, "translateY()": `translateY( <length-percentage> )`, "translateZ()": `translateZ( <length> )`, "type-or-unit": `string|color|url|integer|number|length|angle|time|frequency|cap|ch|em|ex|ic|lh|rlh|rem|vb|vi|vw|vh|vmin|vmax|mm|Q|cm|in|pt|pc|px|deg|grad|rad|turn|ms|s|Hz|kHz|%`, "type-selector": `<wq-name>|<ns-prefix>? '*'`, "var()": `var( <custom-property-name> , <declaration-value>? )`, "view()": `view( [<axis>||<'view-timeline-inset'>]? )`, "viewport-length": `auto|<length-percentage>`, "visual-box": `content-box|padding-box|border-box`, "wq-name": `<ns-prefix>? <ident-token>`, "-legacy-gradient": `<-webkit-gradient()>|<-legacy-linear-gradient>|<-legacy-repeating-linear-gradient>|<-legacy-radial-gradient>|<-legacy-repeating-radial-gradient>`, "-legacy-linear-gradient": `-moz-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-linear-gradient( <-legacy-linear-gradient-arguments> )`, "-legacy-repeating-linear-gradient": `-moz-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )`, "-legacy-linear-gradient-arguments": `[<angle>|<side-or-corner>]? , <color-stop-list>`, "-legacy-radial-gradient": `-moz-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-radial-gradient( <-legacy-radial-gradient-arguments> )`, "-legacy-repeating-radial-gradient": `-moz-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )`, "-legacy-radial-gradient-arguments": `[<position> ,]? [[[<-legacy-radial-gradient-shape>||<-legacy-radial-gradient-size>]|[<length>|<percentage>]{2}] ,]? <color-stop-list>`, "-legacy-radial-gradient-size": `closest-side|closest-corner|farthest-side|farthest-corner|contain|cover`, "-legacy-radial-gradient-shape": `circle|ellipse`, "-non-standard-font": `-apple-system-body|-apple-system-headline|-apple-system-subheadline|-apple-system-caption1|-apple-system-caption2|-apple-system-footnote|-apple-system-short-body|-apple-system-short-headline|-apple-system-short-subheadline|-apple-system-short-caption1|-apple-system-short-footnote|-apple-system-tall-body`, "-non-standard-color": `-moz-ButtonDefault|-moz-ButtonHoverFace|-moz-ButtonHoverText|-moz-CellHighlight|-moz-CellHighlightText|-moz-Combobox|-moz-ComboboxText|-moz-Dialog|-moz-DialogText|-moz-dragtargetzone|-moz-EvenTreeRow|-moz-Field|-moz-FieldText|-moz-html-CellHighlight|-moz-html-CellHighlightText|-moz-mac-accentdarkestshadow|-moz-mac-accentdarkshadow|-moz-mac-accentface|-moz-mac-accentlightesthighlight|-moz-mac-accentlightshadow|-moz-mac-accentregularhighlight|-moz-mac-accentregularshadow|-moz-mac-chrome-active|-moz-mac-chrome-inactive|-moz-mac-focusring|-moz-mac-menuselect|-moz-mac-menushadow|-moz-mac-menutextselect|-moz-MenuHover|-moz-MenuHoverText|-moz-MenuBarText|-moz-MenuBarHoverText|-moz-nativehyperlinktext|-moz-OddTreeRow|-moz-win-communicationstext|-moz-win-mediatext|-moz-activehyperlinktext|-moz-default-background-color|-moz-default-color|-moz-hyperlinktext|-moz-visitedhyperlinktext|-webkit-activelink|-webkit-focus-ring-color|-webkit-link|-webkit-text`, "-non-standard-image-rendering": `optimize-contrast|-moz-crisp-edges|-o-crisp-edges|-webkit-optimize-contrast`, "-non-standard-overflow": `overlay|-moz-scrollbars-none|-moz-scrollbars-horizontal|-moz-scrollbars-vertical|-moz-hidden-unscrollable`, "-non-standard-size": `intrinsic|min-intrinsic|-webkit-fill-available|-webkit-fit-content|-webkit-min-content|-webkit-max-content|-moz-available|-moz-fit-content|-moz-min-content|-moz-max-content`, "-webkit-gradient()": `-webkit-gradient( <-webkit-gradient-type> , <-webkit-gradient-point> [, <-webkit-gradient-point>|, <-webkit-gradient-radius> , <-webkit-gradient-point>] [, <-webkit-gradient-radius>]? [, <-webkit-gradient-color-stop>]* )`, "-webkit-gradient-color-stop": `from( <color> )|color-stop( [<number-zero-one>|<percentage>] , <color> )|to( <color> )`, "-webkit-gradient-point": `[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]`, "-webkit-gradient-radius": `<length>|<percentage>`, "-webkit-gradient-type": `linear|radial`, "-webkit-mask-box-repeat": `repeat|stretch|round`, "-ms-filter-function-list": `<-ms-filter-function>+`, "-ms-filter-function": `<-ms-filter-function-progid>|<-ms-filter-function-legacy>`, "-ms-filter-function-progid": `'progid:' [<ident-token> '.']* [<ident-token>|<function-token> <any-value>? )]`, "-ms-filter-function-legacy": `<ident-token>|<function-token> <any-value>? )`, "absolute-color-base": `<hex-color>|<absolute-color-function>|<named-color>|transparent`, "absolute-color-function": `<rgb()>|<rgba()>|<hsl()>|<hsla()>|<hwb()>|<lab()>|<lch()>|<oklab()>|<oklch()>|<color()>`, age: `child|young|old`, "anchor-name": `<dashed-ident>`, "attr-name": `<wq-name>`, "attr-fallback": `<any-value>`, "bg-clip": `<box>|border|text`, bottom: `<length>|auto`, "container-name": `<custom-ident>`, "container-condition": `not <query-in-parens>|<query-in-parens> [[and <query-in-parens>]*|[or <query-in-parens>]*]`, "coord-box": `content-box|padding-box|border-box|fill-box|stroke-box|view-box`, "generic-voice": `[<age>? <gender> <integer>?]`, gender: `male|female|neutral`, "generic-script-specific": `generic( kai )|generic( fangsong )|generic( nastaliq )`, "generic-complete": `serif|sans-serif|system-ui|cursive|fantasy|math|monospace`, "generic-incomplete": `ui-serif|ui-sans-serif|ui-monospace|ui-rounded`, "-non-standard-generic-family": `-apple-system|BlinkMacSystemFont`, left: `<length>|auto`, "color-base": `<hex-color>|<color-function>|<named-color>|<color-mix()>|transparent`, "color-function": `<rgb()>|<rgba()>|<hsl()>|<hsla()>|<hwb()>|<lab()>|<lch()>|<oklab()>|<oklch()>|<color()>`, "device-cmyk()": `<legacy-device-cmyk-syntax>|<modern-device-cmyk-syntax>`, "legacy-device-cmyk-syntax": `device-cmyk( <number>#{4} )`, "modern-device-cmyk-syntax": `device-cmyk( <cmyk-component>{4} [/ [<alpha-value>|none]]? )`, "cmyk-component": `<number>|<percentage>|none`, "color-mix()": `color-mix( <color-interpolation-method> , [<color>&&<percentage [0,100]>?]#{2} )`, "color-space": `<rectangular-color-space>|<polar-color-space>|<custom-color-space>`, "custom-color-space": `<dashed-ident>`, paint: `none|<color>|<url> [none|<color>]?|context-fill|context-stroke`, "palette-identifier": `<dashed-ident>`, right: `<length>|auto`, "scope-start": `<forgiving-selector-list>`, "scope-end": `<forgiving-selector-list>`, "forgiving-selector-list": `<complex-real-selector-list>`, "forgiving-relative-selector-list": `<relative-real-selector-list>`, "selector-list": `<complex-selector-list>`, "complex-real-selector-list": `<complex-real-selector>#`, "simple-selector-list": `<simple-selector>#`, "relative-real-selector-list": `<relative-real-selector>#`, "complex-selector-unit": `[<compound-selector>? <pseudo-compound-selector>*]!`, "complex-real-selector": `<compound-selector> [<combinator>? <compound-selector>]*`, "relative-real-selector": `<combinator>? <complex-real-selector>`, "pseudo-compound-selector": `<pseudo-element-selector> <pseudo-class-selector>*`, "simple-selector": `<type-selector>|<subclass-selector>`, "legacy-pseudo-element-selector": `':' [before|after|first-line|first-letter]`, "single-animation-composition": `replace|add|accumulate`, "svg-length": `<percentage>|<length>|<number>`, "svg-writing-mode": `lr-tb|rl-tb|tb-rl|lr|rl|tb`, top: `<length>|auto`, x: `<number>`, y: `<number>`, declaration: `<ident-token> : <declaration-value>? ['!' important]?`, "declaration-list": `[<declaration>? ';']* <declaration>?`, url: `url( <string> <url-modifier>* )|<url-token>`, "url-modifier": `<ident>|<function-token> <any-value> )`, "number-zero-one": `<number [0,1]>`, "number-one-or-greater": `<number [1,\u221E]>`, "color()": `color( <colorspace-params> [/ [<alpha-value>|none]]? )`, "colorspace-params": `[<predefined-rgb-params>|<xyz-params>]`, "predefined-rgb-params": `<predefined-rgb> [<number>|<percentage>|none]{3}`, "predefined-rgb": `srgb|srgb-linear|display-p3|a98-rgb|prophoto-rgb|rec2020`, "xyz-params": `<xyz-space> [<number>|<percentage>|none]{3}`, "xyz-space": `xyz|xyz-d50|xyz-d65`, "oklab()": `oklab( [<percentage>|<number>|none] [<percentage>|<number>|none] [<percentage>|<number>|none] [/ [<alpha-value>|none]]? )`, "oklch()": `oklch( [<percentage>|<number>|none] [<percentage>|<number>|none] [<hue>|none] [/ [<alpha-value>|none]]? )`, "offset-path": `<ray()>|<url>|<basic-shape>`, "rect()": `rect( [<length-percentage>|auto]{4} [round <'border-radius'>]? )`, "xywh()": `xywh( <length-percentage>{2} <length-percentage [0,\u221E]>{2} [round <'border-radius'>]? )`, "query-in-parens": `( <container-condition> )|( <size-feature> )|style( <style-query> )|<general-enclosed>`, "size-feature": `<mf-plain>|<mf-boolean>|<mf-range>`, "style-feature": `<declaration>`, "style-query": `<style-condition>|<style-feature>`, "style-condition": `not <style-in-parens>|<style-in-parens> [[and <style-in-parens>]*|[or <style-in-parens>]*]`, "style-in-parens": `( <style-condition> )|( <style-feature> )|<general-enclosed>`, "-non-standard-display": `-ms-inline-flexbox|-ms-grid|-ms-inline-grid|-webkit-flex|-webkit-inline-flex|-webkit-box|-webkit-inline-box|-moz-inline-stack|-moz-box|-moz-inline-box`, "inset-area": `[[left|center|right|span-left|span-right|x-start|x-end|span-x-start|span-x-end|x-self-start|x-self-end|span-x-self-start|span-x-self-end|span-all]||[top|center|bottom|span-top|span-bottom|y-start|y-end|span-y-start|span-y-end|y-self-start|y-self-end|span-y-self-start|span-y-self-end|span-all]|[block-start|center|block-end|span-block-start|span-block-end|span-all]||[inline-start|center|inline-end|span-inline-start|span-inline-end|span-all]|[self-block-start|self-block-end|span-self-block-start|span-self-block-end|span-all]||[self-inline-start|self-inline-end|span-self-inline-start|span-self-inline-end|span-all]|[start|center|end|span-start|span-end|span-all]{1,2}|[self-start|center|self-end|span-self-start|span-self-end|span-all]{1,2}]`, "position-area": `[[left|center|right|span-left|span-right|x-start|x-end|span-x-start|span-x-end|x-self-start|x-self-end|span-x-self-start|span-x-self-end|span-all]||[top|center|bottom|span-top|span-bottom|y-start|y-end|span-y-start|span-y-end|y-self-start|y-self-end|span-y-self-start|span-y-self-end|span-all]|[block-start|center|block-end|span-block-start|span-block-end|span-all]||[inline-start|center|inline-end|span-inline-start|span-inline-end|span-all]|[self-block-start|center|self-block-end|span-self-block-start|span-self-block-end|span-all]||[self-inline-start|center|self-inline-end|span-self-inline-start|span-self-inline-end|span-all]|[start|center|end|span-start|span-end|span-all]{1,2}|[self-start|center|self-end|span-self-start|span-self-end|span-all]{1,2}]`, "anchor()": `anchor( <anchor-element>?&&<anchor-side> , <length-percentage>? )`, "anchor-side": `inside|outside|top|left|right|bottom|start|end|self-start|self-end|<percentage>|center`, "anchor-size()": `anchor-size( [<anchor-element>||<anchor-size>]? , <length-percentage>? )`, "anchor-size": `width|height|block|inline|self-block|self-inline`, "anchor-element": `<dashed-ident>`, "try-size": `most-width|most-height|most-block-size|most-inline-size`, "try-tactic": `flip-block||flip-inline||flip-start`, "font-variant-css2": `normal|small-caps`, "font-width-css3": `normal|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded`, "system-family-name": `caption|icon|menu|message-box|small-caption|status-bar` }, properties: { "--*": `<declaration-value>`, "-ms-accelerator": `false|true`, "-ms-block-progression": `tb|rl|bt|lr`, "-ms-content-zoom-chaining": `none|chained`, "-ms-content-zooming": `none|zoom`, "-ms-content-zoom-limit": `<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>`, "-ms-content-zoom-limit-max": `<percentage>`, "-ms-content-zoom-limit-min": `<percentage>`, "-ms-content-zoom-snap": `<'-ms-content-zoom-snap-type'>||<'-ms-content-zoom-snap-points'>`, "-ms-content-zoom-snap-points": `snapInterval( <percentage> , <percentage> )|snapList( <percentage># )`, "-ms-content-zoom-snap-type": `none|proximity|mandatory`, "-ms-filter": `<string>`, "-ms-flow-from": `[none|<custom-ident>]#`, "-ms-flow-into": `[none|<custom-ident>]#`, "-ms-grid-columns": `none|<track-list>|<auto-track-list>`, "-ms-grid-rows": `none|<track-list>|<auto-track-list>`, "-ms-high-contrast-adjust": `auto|none`, "-ms-hyphenate-limit-chars": `auto|<integer>{1,3}`, "-ms-hyphenate-limit-lines": `no-limit|<integer>`, "-ms-hyphenate-limit-zone": `<percentage>|<length>`, "-ms-ime-align": `auto|after`, "-ms-overflow-style": `auto|none|scrollbar|-ms-autohiding-scrollbar`, "-ms-scrollbar-3dlight-color": `<color>`, "-ms-scrollbar-arrow-color": `<color>`, "-ms-scrollbar-base-color": `<color>`, "-ms-scrollbar-darkshadow-color": `<color>`, "-ms-scrollbar-face-color": `<color>`, "-ms-scrollbar-highlight-color": `<color>`, "-ms-scrollbar-shadow-color": `<color>`, "-ms-scrollbar-track-color": `<color>`, "-ms-scroll-chaining": `chained|none`, "-ms-scroll-limit": `<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>`, "-ms-scroll-limit-x-max": `auto|<length>`, "-ms-scroll-limit-x-min": `<length>`, "-ms-scroll-limit-y-max": `auto|<length>`, "-ms-scroll-limit-y-min": `<length>`, "-ms-scroll-rails": `none|railed`, "-ms-scroll-snap-points-x": `snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )`, "-ms-scroll-snap-points-y": `snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )`, "-ms-scroll-snap-type": `none|proximity|mandatory`, "-ms-scroll-snap-x": `<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>`, "-ms-scroll-snap-y": `<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>`, "-ms-scroll-translation": `none|vertical-to-horizontal`, "-ms-text-autospace": `none|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space`, "-ms-touch-select": `grippers|none`, "-ms-user-select": `none|element|text`, "-ms-wrap-flow": `auto|both|start|end|maximum|clear`, "-ms-wrap-margin": `<length>`, "-ms-wrap-through": `wrap|none`, "-moz-appearance": `none|button|button-arrow-down|button-arrow-next|button-arrow-previous|button-arrow-up|button-bevel|button-focus|caret|checkbox|checkbox-container|checkbox-label|checkmenuitem|dualbutton|groupbox|listbox|listitem|menuarrow|menubar|menucheckbox|menuimage|menuitem|menuitemtext|menulist|menulist-button|menulist-text|menulist-textfield|menupopup|menuradio|menuseparator|meterbar|meterchunk|progressbar|progressbar-vertical|progresschunk|progresschunk-vertical|radio|radio-container|radio-label|radiomenuitem|range|range-thumb|resizer|resizerpanel|scale-horizontal|scalethumbend|scalethumb-horizontal|scalethumbstart|scalethumbtick|scalethumb-vertical|scale-vertical|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|separator|sheet|spinner|spinner-downbutton|spinner-textfield|spinner-upbutton|splitter|statusbar|statusbarpanel|tab|tabpanel|tabpanels|tab-scroll-arrow-back|tab-scroll-arrow-forward|textfield|textfield-multiline|toolbar|toolbarbutton|toolbarbutton-dropdown|toolbargripper|toolbox|tooltip|treeheader|treeheadercell|treeheadersortarrow|treeitem|treeline|treetwisty|treetwistyopen|treeview|-moz-mac-unified-toolbar|-moz-win-borderless-glass|-moz-win-browsertabbar-toolbox|-moz-win-communicationstext|-moz-win-communications-toolbox|-moz-win-exclude-glass|-moz-win-glass|-moz-win-mediatext|-moz-win-media-toolbox|-moz-window-button-box|-moz-window-button-box-maximized|-moz-window-button-close|-moz-window-button-maximize|-moz-window-button-minimize|-moz-window-button-restore|-moz-window-frame-bottom|-moz-window-frame-left|-moz-window-frame-right|-moz-window-titlebar|-moz-window-titlebar-maximized`, "-moz-binding": `<url>|none`, "-moz-border-bottom-colors": `<color>+|none`, "-moz-border-left-colors": `<color>+|none`, "-moz-border-right-colors": `<color>+|none`, "-moz-border-top-colors": `<color>+|none`, "-moz-context-properties": `none|[fill|fill-opacity|stroke|stroke-opacity]#`, "-moz-float-edge": `border-box|content-box|margin-box|padding-box`, "-moz-force-broken-image-icon": `0|1`, "-moz-image-region": `<shape>|auto`, "-moz-orient": `inline|block|horizontal|vertical`, "-moz-outline-radius": `<outline-radius>{1,4} [/ <outline-radius>{1,4}]?`, "-moz-outline-radius-bottomleft": `<outline-radius>`, "-moz-outline-radius-bottomright": `<outline-radius>`, "-moz-outline-radius-topleft": `<outline-radius>`, "-moz-outline-radius-topright": `<outline-radius>`, "-moz-stack-sizing": `ignore|stretch-to-fit`, "-moz-text-blink": `none|blink`, "-moz-user-focus": `ignore|normal|select-after|select-before|select-menu|select-same|select-all|none`, "-moz-user-input": `auto|none|enabled|disabled`, "-moz-user-modify": `read-only|read-write|write-only`, "-moz-window-dragging": `drag|no-drag`, "-moz-window-shadow": `default|menu|tooltip|sheet|none`, "-webkit-appearance": `none|button|button-bevel|caps-lock-indicator|caret|checkbox|default-button|inner-spin-button|listbox|listitem|media-controls-background|media-controls-fullscreen-background|media-current-time-display|media-enter-fullscreen-button|media-exit-fullscreen-button|media-fullscreen-button|media-mute-button|media-overlay-play-button|media-play-button|media-seek-back-button|media-seek-forward-button|media-slider|media-sliderthumb|media-time-remaining-display|media-toggle-closed-captions-button|media-volume-slider|media-volume-slider-container|media-volume-sliderthumb|menulist|menulist-button|menulist-text|menulist-textfield|meter|progress-bar|progress-bar-value|push-button|radio|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbargripper-horizontal|scrollbargripper-vertical|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|searchfield-cancel-button|searchfield-decoration|searchfield-results-button|searchfield-results-decoration|slider-horizontal|slider-vertical|sliderthumb-horizontal|sliderthumb-vertical|square-button|textarea|textfield|-apple-pay-button`, "-webkit-border-before": `<'border-width'>||<'border-style'>||<color>`, "-webkit-border-before-color": `<color>`, "-webkit-border-before-style": `<'border-style'>`, "-webkit-border-before-width": `<'border-width'>`, "-webkit-box-reflect": `[above|below|right|left]? <length>? <image>?`, "-webkit-line-clamp": `none|<integer>`, "-webkit-mask": `[<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||[<box>|border|padding|content|text]||[<box>|border|padding|content]]#`, "-webkit-mask-attachment": `<attachment>#`, "-webkit-mask-clip": `[<box>|border|padding|content|text]#`, "-webkit-mask-composite": `<composite-style>#`, "-webkit-mask-image": `<mask-reference>#`, "-webkit-mask-origin": `[<box>|border|padding|content]#`, "-webkit-mask-position": `<position>#`, "-webkit-mask-position-x": `[<length-percentage>|left|center|right]#`, "-webkit-mask-position-y": `[<length-percentage>|top|center|bottom]#`, "-webkit-mask-repeat": `<repeat-style>#`, "-webkit-mask-repeat-x": `repeat|no-repeat|space|round`, "-webkit-mask-repeat-y": `repeat|no-repeat|space|round`, "-webkit-mask-size": `<bg-size>#`, "-webkit-overflow-scrolling": `auto|touch`, "-webkit-tap-highlight-color": `<color>`, "-webkit-text-fill-color": `<color>`, "-webkit-text-stroke": `<length>||<color>`, "-webkit-text-stroke-color": `<color>`, "-webkit-text-stroke-width": `<length>`, "-webkit-touch-callout": `default|none`, "-webkit-user-modify": `read-only|read-write|read-write-plaintext-only`, "accent-color": `auto|<color>`, "align-content": `normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>`, "align-items": `normal|stretch|<baseline-position>|[<overflow-position>? <self-position>]`, "align-self": `auto|normal|stretch|<baseline-position>|<overflow-position>? <self-position>`, "align-tracks": `[normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>]#`, all: `initial|inherit|unset|revert|revert-layer`, "anchor-name": `none|<dashed-ident>#`, "anchor-scope": `none|all|<dashed-ident>#`, animation: `<single-animation>#`, "animation-composition": `<single-animation-composition>#`, "animation-delay": `<time>#`, "animation-direction": `<single-animation-direction>#`, "animation-duration": `<time>#`, "animation-fill-mode": `<single-animation-fill-mode>#`, "animation-iteration-count": `<single-animation-iteration-count>#`, "animation-name": `[none|<keyframes-name>]#`, "animation-play-state": `<single-animation-play-state>#`, "animation-range": `[<'animation-range-start'> <'animation-range-end'>?]#`, "animation-range-end": `[normal|<length-percentage>|<timeline-range-name> <length-percentage>?]#`, "animation-range-start": `[normal|<length-percentage>|<timeline-range-name> <length-percentage>?]#`, "animation-timing-function": `<easing-function>#`, "animation-timeline": `<single-animation-timeline>#`, appearance: `none|auto|textfield|menulist-button|<compat-auto>`, "aspect-ratio": `auto||<ratio>`, azimuth: `<angle>|[[left-side|far-left|left|center-left|center|center-right|right|far-right|right-side]||behind]|leftwards|rightwards`, "backdrop-filter": `none|<filter-function-list>`, "backface-visibility": `visible|hidden`, background: `[<bg-layer> ,]* <final-bg-layer>`, "background-attachment": `<attachment>#`, "background-blend-mode": `<blend-mode>#`, "background-clip": `<bg-clip>#`, "background-color": `<color>`, "background-image": `<bg-image>#`, "background-origin": `<box>#`, "background-position": `<bg-position>#`, "background-position-x": `[center|[[left|right|x-start|x-end]? <length-percentage>?]!]#`, "background-position-y": `[center|[[top|bottom|y-start|y-end]? <length-percentage>?]!]#`, "background-repeat": `<repeat-style>#`, "background-size": `<bg-size>#`, "block-size": `<'width'>`, border: `<line-width>||<line-style>||<color>`, "border-block": `<'border-top-width'>||<'border-top-style'>||<color>`, "border-block-color": `<'border-top-color'>{1,2}`, "border-block-style": `<'border-top-style'>`, "border-block-width": `<'border-top-width'>`, "border-block-end": `<'border-top-width'>||<'border-top-style'>||<color>`, "border-block-end-color": `<'border-top-color'>`, "border-block-end-style": `<'border-top-style'>`, "border-block-end-width": `<'border-top-width'>`, "border-block-start": `<'border-top-width'>||<'border-top-style'>||<color>`, "border-block-start-color": `<'border-top-color'>`, "border-block-start-style": `<'border-top-style'>`, "border-block-start-width": `<'border-top-width'>`, "border-bottom": `<line-width>||<line-style>||<color>`, "border-bottom-color": `<'border-top-color'>`, "border-bottom-left-radius": `<length-percentage>{1,2}`, "border-bottom-right-radius": `<length-percentage>{1,2}`, "border-bottom-style": `<line-style>`, "border-bottom-width": `<line-width>`, "border-collapse": `collapse|separate`, "border-color": `<color>{1,4}`, "border-end-end-radius": `<length-percentage>{1,2}`, "border-end-start-radius": `<length-percentage>{1,2}`, "border-image": `<'border-image-source'>||<'border-image-slice'> [/ <'border-image-width'>|/ <'border-image-width'>? / <'border-image-outset'>]?||<'border-image-repeat'>`, "border-image-outset": `[<length>|<number>]{1,4}`, "border-image-repeat": `[stretch|repeat|round|space]{1,2}`, "border-image-slice": `<number-percentage>{1,4}&&fill?`, "border-image-source": `none|<image>`, "border-image-width": `[<length-percentage>|<number>|auto]{1,4}`, "border-inline": `<'border-top-width'>||<'border-top-style'>||<color>`, "border-inline-end": `<'border-top-width'>||<'border-top-style'>||<color>`, "border-inline-color": `<'border-top-color'>{1,2}`, "border-inline-style": `<'border-top-style'>`, "border-inline-width": `<'border-top-width'>`, "border-inline-end-color": `<'border-top-color'>`, "border-inline-end-style": `<'border-top-style'>`, "border-inline-end-width": `<'border-top-width'>`, "border-inline-start": `<'border-top-width'>||<'border-top-style'>||<color>`, "border-inline-start-color": `<'border-top-color'>`, "border-inline-start-style": `<'border-top-style'>`, "border-inline-start-width": `<'border-top-width'>`, "border-left": `<line-width>||<line-style>||<color>`, "border-left-color": `<color>`, "border-left-style": `<line-style>`, "border-left-width": `<line-width>`, "border-radius": `<length-percentage>{1,4} [/ <length-percentage>{1,4}]?`, "border-right": `<line-width>||<line-style>||<color>`, "border-right-color": `<color>`, "border-right-style": `<line-style>`, "border-right-width": `<line-width>`, "border-spacing": `<length> <length>?`, "border-start-end-radius": `<length-percentage>{1,2}`, "border-start-start-radius": `<length-percentage>{1,2}`, "border-style": `<line-style>{1,4}`, "border-top": `<line-width>||<line-style>||<color>`, "border-top-color": `<color>`, "border-top-left-radius": `<length-percentage>{1,2}`, "border-top-right-radius": `<length-percentage>{1,2}`, "border-top-style": `<line-style>`, "border-top-width": `<line-width>`, "border-width": `<line-width>{1,4}`, bottom: `<length>|<percentage>|auto`, "box-align": `start|center|end|baseline|stretch`, "box-decoration-break": `slice|clone`, "box-direction": `normal|reverse|inherit`, "box-flex": `<number>`, "box-flex-group": `<integer>`, "box-lines": `single|multiple`, "box-ordinal-group": `<integer>`, "box-orient": `horizontal|vertical|inline-axis|block-axis|inherit`, "box-pack": `start|center|end|justify`, "box-shadow": `none|<shadow>#`, "box-sizing": `content-box|border-box`, "break-after": `auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region`, "break-before": `auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region`, "break-inside": `auto|avoid|avoid-page|avoid-column|avoid-region`, "caption-side": `top|bottom|block-start|block-end|inline-start|inline-end`, caret: `<'caret-color'>||<'caret-shape'>`, "caret-color": `auto|<color>`, "caret-shape": `auto|bar|block|underscore`, clear: `none|left|right|both|inline-start|inline-end`, clip: `<shape>|auto`, "clip-path": `<clip-source>|[<basic-shape>||<geometry-box>]|none`, "clip-rule": `nonzero|evenodd`, color: `<color>`, "color-interpolation-filters": `auto|sRGB|linearRGB`, "color-scheme": `normal|[light|dark|<custom-ident>]+&&only?`, "column-count": `<integer>|auto`, "column-fill": `auto|balance`, "column-gap": `normal|<length-percentage>`, "column-rule": `<'column-rule-width'>||<'column-rule-style'>||<'column-rule-color'>`, "column-rule-color": `<color>`, "column-rule-style": `<'border-style'>`, "column-rule-width": `<'border-width'>`, "column-span": `none|all`, "column-width": `<length>|auto`, columns: `<'column-width'>||<'column-count'>`, contain: `none|strict|content|[[size||inline-size]||layout||style||paint]`, "contain-intrinsic-size": `[auto? [none|<length>]]{1,2}`, "contain-intrinsic-block-size": `auto? [none|<length>]`, "contain-intrinsic-height": `auto? [none|<length>]`, "contain-intrinsic-inline-size": `auto? [none|<length>]`, "contain-intrinsic-width": `auto? [none|<length>]`, container: `<'container-name'> [/ <'container-type'>]?`, "container-name": `none|<custom-ident>+`, "container-type": `normal||[size|inline-size]`, content: `normal|none|[<content-replacement>|<content-list>] [/ [<string>|<counter>]+]?`, "content-visibility": `visible|auto|hidden`, "counter-increment": `[<counter-name> <integer>?]+|none`, "counter-reset": `[<counter-name> <integer>?|<reversed-counter-name> <integer>?]+|none`, "counter-set": `[<counter-name> <integer>?]+|none`, cursor: `[[<url> [<x> <y>]? ,]* [auto|default|none|context-menu|help|pointer|progress|wait|cell|crosshair|text|vertical-text|alias|copy|move|no-drop|not-allowed|e-resize|n-resize|ne-resize|nw-resize|s-resize|se-resize|sw-resize|w-resize|ew-resize|ns-resize|nesw-resize|nwse-resize|col-resize|row-resize|all-scroll|zoom-in|zoom-out|grab|grabbing|hand|-webkit-grab|-webkit-grabbing|-webkit-zoom-in|-webkit-zoom-out|-moz-grab|-moz-grabbing|-moz-zoom-in|-moz-zoom-out]]`, d: `none|path( <string> )`, cx: `<length>|<percentage>`, cy: `<length>|<percentage>`, direction: `ltr|rtl`, display: `[<display-outside>||<display-inside>]|<display-listitem>|<display-internal>|<display-box>|<display-legacy>|<-non-standard-display>`, "dominant-baseline": `auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge`, "empty-cells": `show|hide`, "field-sizing": `content|fixed`, fill: `<paint>`, "fill-opacity": `<number-zero-one>`, "fill-rule": `nonzero|evenodd`, filter: `none|<filter-function-list>|<-ms-filter-function-list>`, flex: `none|[<'flex-grow'> <'flex-shrink'>?||<'flex-basis'>]`, "flex-basis": `content|<'width'>`, "flex-direction": `row|row-reverse|column|column-reverse`, "flex-flow": `<'flex-direction'>||<'flex-wrap'>`, "flex-grow": `<number>`, "flex-shrink": `<number>`, "flex-wrap": `nowrap|wrap|wrap-reverse`, float: `left|right|none|inline-start|inline-end`, font: `[[<'font-style'>||<font-variant-css2>||<'font-weight'>||<font-width-css3>]? <'font-size'> [/ <'line-height'>]? <'font-family'>#]|<system-family-name>|<-non-standard-font>`, "font-family": `[<family-name>|<generic-family>]#`, "font-feature-settings": `normal|<feature-tag-value>#`, "font-kerning": `auto|normal|none`, "font-language-override": `normal|<string>`, "font-optical-sizing": `auto|none`, "font-palette": `normal|light|dark|<palette-identifier>`, "font-variation-settings": `normal|[<string> <number>]#`, "font-size": `<absolute-size>|<relative-size>|<length-percentage>`, "font-size-adjust": `none|[ex-height|cap-height|ch-width|ic-width|ic-height]? [from-font|<number>]`, "font-smooth": `auto|never|always|<absolute-size>|<length>`, "font-stretch": `<font-stretch-absolute>`, "font-style": `normal|italic|oblique <angle>?`, "font-synthesis": `none|[weight||style||small-caps||position]`, "font-synthesis-position": `auto|none`, "font-synthesis-small-caps": `auto|none`, "font-synthesis-style": `auto|none`, "font-synthesis-weight": `auto|none`, "font-variant": `normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>||stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )||[small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps]||<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero||<east-asian-variant-values>||<east-asian-width-values>||ruby]`, "font-variant-alternates": `normal|[stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )]`, "font-variant-caps": `normal|small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps`, "font-variant-east-asian": `normal|[<east-asian-variant-values>||<east-asian-width-values>||ruby]`, "font-variant-emoji": `normal|text|emoji|unicode`, "font-variant-ligatures": `normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>]`, "font-variant-numeric": `normal|[<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero]`, "font-variant-position": `normal|sub|super`, "font-weight": `<font-weight-absolute>|bolder|lighter`, "forced-color-adjust": `auto|none|preserve-parent-color`, gap: `<'row-gap'> <'column-gap'>?`, grid: `<'grid-template'>|<'grid-template-rows'> / [auto-flow&&dense?] <'grid-auto-columns'>?|[auto-flow&&dense?] <'grid-auto-rows'>? / <'grid-template-columns'>`, "grid-area": `<grid-line> [/ <grid-line>]{0,3}`, "grid-auto-columns": `<track-size>+`, "grid-auto-flow": `[row|column]||dense`, "grid-auto-rows": `<track-size>+`, "grid-column": `<grid-line> [/ <grid-line>]?`, "grid-column-end": `<grid-line>`, "grid-column-gap": `<length-percentage>`, "grid-column-start": `<grid-line>`, "grid-gap": `<'grid-row-gap'> <'grid-column-gap'>?`, "grid-row": `<grid-line> [/ <grid-line>]?`, "grid-row-end": `<grid-line>`, "grid-row-gap": `<length-percentage>`, "grid-row-start": `<grid-line>`, "grid-template": `none|[<'grid-template-rows'> / <'grid-template-columns'>]|[<line-names>? <string> <track-size>? <line-names>?]+ [/ <explicit-track-list>]?`, "grid-template-areas": `none|<string>+`, "grid-template-columns": `none|<track-list>|<auto-track-list>|subgrid <line-name-list>?`, "grid-template-rows": `none|<track-list>|<auto-track-list>|subgrid <line-name-list>?`, "hanging-punctuation": `none|[first||[force-end|allow-end]||last]`, height: `auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|stretch|<-non-standard-size>`, "hyphenate-character": `auto|<string>`, "hyphenate-limit-chars": `[auto|<integer>]{1,3}`, hyphens: `none|manual|auto`, "image-orientation": `from-image|<angle>|[<angle>? flip]`, "image-rendering": `auto|crisp-edges|pixelated|optimizeSpeed|optimizeQuality|<-non-standard-image-rendering>`, "image-resolution": `[from-image||<resolution>]&&snap?`, "ime-mode": `auto|normal|active|inactive|disabled`, "initial-letter": `normal|[<number> <integer>?]`, "initial-letter-align": `[auto|alphabetic|hanging|ideographic]`, "inline-size": `<'width'>`, "input-security": `auto|none`, inset: `<'top'>{1,4}`, "inset-block": `<'top'>{1,2}`, "inset-block-end": `<'top'>`, "inset-block-start": `<'top'>`, "inset-inline": `<'top'>{1,2}`, "inset-inline-end": `<'top'>`, "inset-inline-start": `<'top'>`, "interpolate-size": `numeric-only|allow-keywords`, isolation: `auto|isolate`, "justify-content": `normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]`, "justify-items": `normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]|legacy|legacy&&[left|right|center]`, "justify-self": `auto|normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]`, "justify-tracks": `[normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]]#`, left: `<length>|<percentage>|auto`, "letter-spacing": `normal|<length-percentage>`, "line-break": `auto|loose|normal|strict|anywhere`, "line-clamp": `none|<integer>`, "line-height": `normal|<number>|<length>|<percentage>`, "line-height-step": `<length>`, "list-style": `<'list-style-type'>||<'list-style-position'>||<'list-style-image'>`, "list-style-image": `<image>|none`, "list-style-position": `inside|outside`, "list-style-type": `<counter-style>|<string>|none`, margin: `[<length>|<percentage>|auto]{1,4}`, "margin-block": `<'margin-left'>{1,2}`, "margin-block-end": `<'margin-left'>`, "margin-block-start": `<'margin-left'>`, "margin-bottom": `<length>|<percentage>|auto`, "margin-inline": `<'margin-left'>{1,2}`, "margin-inline-end": `<'margin-left'>`, "margin-inline-start": `<'margin-left'>`, "margin-left": `<length>|<percentage>|auto`, "margin-right": `<length>|<percentage>|auto`, "margin-top": `<length>|<percentage>|auto`, "margin-trim": `none|in-flow|all`, marker: `none|<url>`, "marker-end": `none|<url>`, "marker-mid": `none|<url>`, "marker-start": `none|<url>`, mask: `<mask-layer>#`, "mask-border": `<'mask-border-source'>||<'mask-border-slice'> [/ <'mask-border-width'>? [/ <'mask-border-outset'>]?]?||<'mask-border-repeat'>||<'mask-border-mode'>`, "mask-border-mode": `luminance|alpha`, "mask-border-outset": `[<length>|<number>]{1,4}`, "mask-border-repeat": `[stretch|repeat|round|space]{1,2}`, "mask-border-slice": `<number-percentage>{1,4} fill?`, "mask-border-source": `none|<image>`, "mask-border-width": `[<length-percentage>|<number>|auto]{1,4}`, "mask-clip": `[<geometry-box>|no-clip]#`, "mask-composite": `<compositing-operator>#`, "mask-image": `<mask-reference>#`, "mask-mode": `<masking-mode>#`, "mask-origin": `<geometry-box>#`, "mask-position": `<position>#`, "mask-repeat": `<repeat-style>#`, "mask-size": `<bg-size>#`, "mask-type": `luminance|alpha`, "masonry-auto-flow": `[pack|next]||[definite-first|ordered]`, "math-depth": `auto-add|add( <integer> )|<integer>`, "math-shift": `normal|compact`, "math-style": `normal|compact`, "max-block-size": `<'max-width'>`, "max-height": `none|<length-percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|stretch|<-non-standard-size>`, "max-inline-size": `<'max-width'>`, "max-lines": `none|<integer>`, "max-width": `none|<length-percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|stretch|<-non-standard-size>`, "min-block-size": `<'min-width'>`, "min-height": `auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|stretch|<-non-standard-size>`, "min-inline-size": `<'min-width'>`, "min-width": `auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|stretch|<-non-standard-size>`, "mix-blend-mode": `<blend-mode>|plus-lighter`, "object-fit": `fill|contain|cover|none|scale-down`, "object-position": `<position>`, offset: `[<'offset-position'>? [<'offset-path'> [<'offset-distance'>||<'offset-rotate'>]?]?]! [/ <'offset-anchor'>]?`, "offset-anchor": `auto|<position>`, "offset-distance": `<length-percentage>`, "offset-path": `none|<offset-path>||<coord-box>`, "offset-position": `normal|auto|<position>`, "offset-rotate": `[auto|reverse]||<angle>`, opacity: `<alpha-value>`, order: `<integer>`, orphans: `<integer>`, outline: `[<'outline-width'>||<'outline-style'>||<'outline-color'>]`, "outline-color": `auto|<color>`, "outline-offset": `<length>`, "outline-style": `auto|<'border-style'>`, "outline-width": `<line-width>`, overflow: `[visible|hidden|clip|scroll|auto]{1,2}|<-non-standard-overflow>`, "overflow-anchor": `auto|none`, "overflow-block": `visible|hidden|clip|scroll|auto`, "overflow-clip-box": `padding-box|content-box`, "overflow-clip-margin": `<visual-box>||<length [0,\u221E]>`, "overflow-inline": `visible|hidden|clip|scroll|auto`, "overflow-wrap": `normal|break-word|anywhere`, "overflow-x": `visible|hidden|clip|scroll|auto`, "overflow-y": `visible|hidden|clip|scroll|auto`, overlay: `none|auto`, "overscroll-behavior": `[contain|none|auto]{1,2}`, "overscroll-behavior-block": `contain|none|auto`, "overscroll-behavior-inline": `contain|none|auto`, "overscroll-behavior-x": `contain|none|auto`, "overscroll-behavior-y": `contain|none|auto`, padding: `[<length>|<percentage>]{1,4}`, "padding-block": `<'padding-left'>{1,2}`, "padding-block-end": `<'padding-left'>`, "padding-block-start": `<'padding-left'>`, "padding-bottom": `<length>|<percentage>`, "padding-inline": `<'padding-left'>{1,2}`, "padding-inline-end": `<'padding-left'>`, "padding-inline-start": `<'padding-left'>`, "padding-left": `<length>|<percentage>`, "padding-right": `<length>|<percentage>`, "padding-top": `<length>|<percentage>`, page: `auto|<custom-ident>`, "page-break-after": `auto|always|avoid|left|right|recto|verso`, "page-break-before": `auto|always|avoid|left|right|recto|verso`, "page-break-inside": `auto|avoid`, "paint-order": `normal|[fill||stroke||markers]`, perspective: `none|<length>`, "perspective-origin": `<position>`, "place-content": `<'align-content'> <'justify-content'>?`, "place-items": `<'align-items'> <'justify-items'>?`, "place-self": `<'align-self'> <'justify-self'>?`, "pointer-events": `auto|none|visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|inherit`, position: `static|relative|absolute|sticky|fixed|-webkit-sticky`, "position-anchor": `auto|<anchor-name>`, "position-area": `none|<position-area>`, "position-try": `<'position-try-order'>? <'position-try-fallbacks'>`, "position-try-fallbacks": `none|[[<dashed-ident>||<try-tactic>]|<'position-area'>]#`, "position-try-order": `normal|<try-size>`, "position-visibility": `always|[anchors-valid||anchors-visible||no-overflow]`, "print-color-adjust": `economy|exact`, quotes: `none|auto|[<string> <string>]+`, r: `<length>|<percentage>`, resize: `none|both|horizontal|vertical|block|inline`, right: `<length>|<percentage>|auto`, rotate: `none|<angle>|[x|y|z|<number>{3}]&&<angle>`, "row-gap": `normal|<length-percentage>`, "ruby-align": `start|center|space-between|space-around`, "ruby-merge": `separate|collapse|auto`, "ruby-position": `[alternate||[over|under]]|inter-character`, rx: `<length>|<percentage>`, ry: `<length>|<percentage>`, scale: `none|[<number>|<percentage>]{1,3}`, "scrollbar-color": `auto|<color>{2}`, "scrollbar-gutter": `auto|stable&&both-edges?`, "scrollbar-width": `auto|thin|none`, "scroll-behavior": `auto|smooth`, "scroll-margin": `<length>{1,4}`, "scroll-margin-block": `<length>{1,2}`, "scroll-margin-block-start": `<length>`, "scroll-margin-block-end": `<length>`, "scroll-margin-bottom": `<length>`, "scroll-margin-inline": `<length>{1,2}`, "scroll-margin-inline-start": `<length>`, "scroll-margin-inline-end": `<length>`, "scroll-margin-left": `<length>`, "scroll-margin-right": `<length>`, "scroll-margin-top": `<length>`, "scroll-padding": `[auto|<length-percentage>]{1,4}`, "scroll-padding-block": `[auto|<length-percentage>]{1,2}`, "scroll-padding-block-start": `auto|<length-percentage>`, "scroll-padding-block-end": `auto|<length-percentage>`, "scroll-padding-bottom": `auto|<length-percentage>`, "scroll-padding-inline": `[auto|<length-percentage>]{1,2}`, "scroll-padding-inline-start": `auto|<length-percentage>`, "scroll-padding-inline-end": `auto|<length-percentage>`, "scroll-padding-left": `auto|<length-percentage>`, "scroll-padding-right": `auto|<length-percentage>`, "scroll-padding-top": `auto|<length-percentage>`, "scroll-snap-align": `[none|start|end|center]{1,2}`, "scroll-snap-coordinate": `none|<position>#`, "scroll-snap-destination": `<position>`, "scroll-snap-points-x": `none|repeat( <length-percentage> )`, "scroll-snap-points-y": `none|repeat( <length-percentage> )`, "scroll-snap-stop": `normal|always`, "scroll-snap-type": `none|[x|y|block|inline|both] [mandatory|proximity]?`, "scroll-snap-type-x": `none|mandatory|proximity`, "scroll-snap-type-y": `none|mandatory|proximity`, "scroll-timeline": `[<'scroll-timeline-name'>||<'scroll-timeline-axis'>]#`, "scroll-timeline-axis": `[block|inline|x|y]#`, "scroll-timeline-name": `[none|<dashed-ident>]#`, "shape-image-threshold": `<alpha-value>`, "shape-margin": `<length-percentage>`, "shape-outside": `none|[<shape-box>||<basic-shape>]|<image>`, "shape-rendering": `auto|optimizeSpeed|crispEdges|geometricPrecision`, stroke: `<paint>`, "stroke-dasharray": `none|[<svg-length>+]#`, "stroke-dashoffset": `<svg-length>`, "stroke-linecap": `butt|round|square`, "stroke-linejoin": `miter|round|bevel`, "stroke-miterlimit": `<number-one-or-greater>`, "stroke-opacity": `<'opacity'>`, "stroke-width": `<svg-length>`, "tab-size": `<integer>|<length>`, "table-layout": `auto|fixed`, "text-align": `start|end|left|right|center|justify|match-parent`, "text-align-last": `auto|start|end|left|right|center|justify`, "text-anchor": `start|middle|end`, "text-combine-upright": `none|all|[digits <integer>?]`, "text-decoration": `<'text-decoration-line'>||<'text-decoration-style'>||<'text-decoration-color'>||<'text-decoration-thickness'>`, "text-decoration-color": `<color>`, "text-decoration-line": `none|[underline||overline||line-through||blink]|spelling-error|grammar-error`, "text-decoration-skip": `none|[objects||[spaces|[leading-spaces||trailing-spaces]]||edges||box-decoration]`, "text-decoration-skip-ink": `auto|all|none`, "text-decoration-style": `solid|double|dotted|dashed|wavy`, "text-decoration-thickness": `auto|from-font|<length>|<percentage>`, "text-emphasis": `<'text-emphasis-style'>||<'text-emphasis-color'>`, "text-emphasis-color": `<color>`, "text-emphasis-position": `auto|[over|under]&&[right|left]?`, "text-emphasis-style": `none|[[filled|open]||[dot|circle|double-circle|triangle|sesame]]|<string>`, "text-indent": `<length-percentage>&&hanging?&&each-line?`, "text-justify": `auto|inter-character|inter-word|none`, "text-orientation": `mixed|upright|sideways`, "text-overflow": `[clip|ellipsis|<string>]{1,2}`, "text-rendering": `auto|optimizeSpeed|optimizeLegibility|geometricPrecision`, "text-shadow": `none|<shadow-t>#`, "text-size-adjust": `none|auto|<percentage>`, "text-spacing-trim": `space-all|normal|space-first|trim-start|trim-both|trim-all|auto`, "text-transform": `none|capitalize|uppercase|lowercase|full-width|full-size-kana`, "text-underline-offset": `auto|<length>|<percentage>`, "text-underline-position": `auto|from-font|[under||[left|right]]`, "text-wrap": `<'text-wrap-mode'>||<'text-wrap-style'>`, "text-wrap-mode": `auto|wrap|nowrap`, "text-wrap-style": `auto|balance|stable|pretty`, "timeline-scope": `none|<dashed-ident>#`, top: `<length>|<percentage>|auto`, "touch-action": `auto|none|[[pan-x|pan-left|pan-right]||[pan-y|pan-up|pan-down]||pinch-zoom]|manipulation`, transform: `none|<transform-list>`, "transform-box": `content-box|border-box|fill-box|stroke-box|view-box`, "transform-origin": `[<length-percentage>|left|center|right|top|bottom]|[[<length-percentage>|left|center|right]&&[<length-percentage>|top|center|bottom]] <length>?`, "transform-style": `flat|preserve-3d`, transition: `<single-transition>#`, "transition-behavior": `<transition-behavior-value>#`, "transition-delay": `<time>#`, "transition-duration": `<time>#`, "transition-property": `none|<single-transition-property>#`, "transition-timing-function": `<easing-function>#`, translate: `none|<length-percentage> [<length-percentage> <length>?]?`, "unicode-bidi": `normal|embed|isolate|bidi-override|isolate-override|plaintext|-moz-isolate|-moz-isolate-override|-moz-plaintext|-webkit-isolate|-webkit-isolate-override|-webkit-plaintext`, "user-select": `auto|text|none|contain|all`, "vector-effect": `none|non-scaling-stroke|non-scaling-size|non-rotation|fixed-position`, "vertical-align": `baseline|sub|super|text-top|text-bottom|middle|top|bottom|<percentage>|<length>`, "view-timeline": `[<'view-timeline-name'> <'view-timeline-axis'>?]#`, "view-timeline-axis": `[block|inline|x|y]#`, "view-timeline-inset": `[[auto|<length-percentage>]{1,2}]#`, "view-timeline-name": `none|<dashed-ident>#`, "view-transition-name": `none|<custom-ident>`, visibility: `visible|hidden|collapse`, "white-space": `normal|pre|nowrap|pre-wrap|pre-line|break-spaces|[<'white-space-collapse'>||<'text-wrap'>||<'white-space-trim'>]`, "white-space-collapse": `collapse|discard|preserve|preserve-breaks|preserve-spaces|break-spaces`, widows: `<integer>`, width: `auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|stretch|<-non-standard-size>`, "will-change": `auto|<animateable-feature>#`, "word-break": `normal|break-all|keep-all|break-word|auto-phrase`, "word-spacing": `normal|<length>`, "word-wrap": `normal|break-word`, "writing-mode": `horizontal-tb|vertical-rl|vertical-lr|sideways-rl|sideways-lr|<svg-writing-mode>`, x: `<length>|<percentage>`, y: `<length>|<percentage>`, "z-index": `auto|<integer>`, zoom: `normal|reset|<number>|<percentage>`, "-moz-background-clip": `padding|border`, "-moz-border-radius-bottomleft": `<'border-bottom-left-radius'>`, "-moz-border-radius-bottomright": `<'border-bottom-right-radius'>`, "-moz-border-radius-topleft": `<'border-top-left-radius'>`, "-moz-border-radius-topright": `<'border-bottom-right-radius'>`, "-moz-control-character-visibility": `visible|hidden`, "-moz-osx-font-smoothing": `auto|grayscale`, "-moz-user-select": `none|text|all|-moz-none`, "-ms-flex-align": `start|end|center|baseline|stretch`, "-ms-flex-item-align": `auto|start|end|center|baseline|stretch`, "-ms-flex-line-pack": `start|end|center|justify|distribute|stretch`, "-ms-flex-negative": `<'flex-shrink'>`, "-ms-flex-pack": `start|end|center|justify|distribute`, "-ms-flex-order": `<integer>`, "-ms-flex-positive": `<'flex-grow'>`, "-ms-flex-preferred-size": `<'flex-basis'>`, "-ms-interpolation-mode": `nearest-neighbor|bicubic`, "-ms-grid-column-align": `start|end|center|stretch`, "-ms-grid-row-align": `start|end|center|stretch`, "-ms-hyphenate-limit-last": `none|always|column|page|spread`, "-webkit-background-clip": `[<box>|border|padding|content|text]#`, "-webkit-column-break-after": `always|auto|avoid`, "-webkit-column-break-before": `always|auto|avoid`, "-webkit-column-break-inside": `always|auto|avoid`, "-webkit-font-smoothing": `auto|none|antialiased|subpixel-antialiased`, "-webkit-mask-box-image": `[<url>|<gradient>|none] [<length-percentage>{4} <-webkit-mask-box-repeat>{2}]?`, "-webkit-print-color-adjust": `economy|exact`, "-webkit-text-security": `none|circle|disc|square`, "-webkit-user-drag": `none|element|auto`, "-webkit-user-select": `auto|none|text|all`, "alignment-baseline": `auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical`, "baseline-shift": `baseline|sub|super|<svg-length>`, behavior: `<url>+`, cue: `<'cue-before'> <'cue-after'>?`, "cue-after": `<url> <decibel>?|none`, "cue-before": `<url> <decibel>?|none`, "glyph-orientation-horizontal": `<angle>`, "glyph-orientation-vertical": `<angle>`, kerning: `auto|<svg-length>`, pause: `<'pause-before'> <'pause-after'>?`, "pause-after": `<time>|none|x-weak|weak|medium|strong|x-strong`, "pause-before": `<time>|none|x-weak|weak|medium|strong|x-strong`, rest: `<'rest-before'> <'rest-after'>?`, "rest-after": `<time>|none|x-weak|weak|medium|strong|x-strong`, "rest-before": `<time>|none|x-weak|weak|medium|strong|x-strong`, src: `[<url> [format( <string># )]?|local( <family-name> )]#`, speak: `auto|never|always`, "speak-as": `normal|spell-out||digits||[literal-punctuation|no-punctuation]`, "unicode-range": `<urange>#`, "voice-balance": `<number>|left|center|right|leftwards|rightwards`, "voice-duration": `auto|<time>`, "voice-family": `[[<family-name>|<generic-voice>] ,]* [<family-name>|<generic-voice>]|preserve`, "voice-pitch": `<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]`, "voice-range": `<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]`, "voice-rate": `[normal|x-slow|slow|medium|fast|x-fast]||<percentage>`, "voice-stress": `normal|strong|moderate|none|reduced`, "voice-volume": `silent|[[x-soft|soft|medium|loud|x-loud]||<decibel>]`, "white-space-trim": `none|discard-before||discard-after||discard-inner` }, atrules: { charset: { prelude: `<string>`, descriptors: null }, "counter-style": { prelude: `<counter-style-name>`, descriptors: { "additive-symbols": `[<integer>&&<symbol>]#`, fallback: `<counter-style-name>`, negative: `<symbol> <symbol>?`, pad: `<integer>&&<symbol>`, prefix: `<symbol>`, range: `[[<integer>|infinite]{2}]#|auto`, "speak-as": `auto|bullets|numbers|words|spell-out|<counter-style-name>`, suffix: `<symbol>`, symbols: `<symbol>+`, system: `cyclic|numeric|alphabetic|symbolic|additive|[fixed <integer>?]|[extends <counter-style-name>]` } }, document: { prelude: `[<url>|url-prefix( <string> )|domain( <string> )|media-document( <string> )|regexp( <string> )]#`, descriptors: null }, "font-palette-values": { prelude: `<dashed-ident>`, descriptors: { "base-palette": `light|dark|<integer [0,\u221E]>`, "font-family": `<family-name>#`, "override-colors": `[<integer [0,\u221E]> <absolute-color-base>]#` } }, "font-face": { prelude: null, descriptors: { "ascent-override": `normal|<percentage>`, "descent-override": `normal|<percentage>`, "font-display": `[auto|block|swap|fallback|optional]`, "font-family": `<family-name>`, "font-feature-settings": `normal|<feature-tag-value>#`, "font-variation-settings": `normal|[<string> <number>]#`, "font-stretch": `<font-stretch-absolute>{1,2}`, "font-style": `normal|italic|oblique <angle>{0,2}`, "font-weight": `<font-weight-absolute>{1,2}`, "line-gap-override": `normal|<percentage>`, "size-adjust": `<percentage>`, src: `[<url> [format( <string># )]?|local( <family-name> )]#`, "unicode-range": `<urange>#` } }, "font-feature-values": { prelude: `<family-name>#`, descriptors: null }, import: { prelude: `[<string>|<url>] [layer|layer( <layer-name> )]? [supports( [<supports-condition>|<declaration>] )]? <media-query-list>?`, descriptors: null }, keyframes: { prelude: `<keyframes-name>`, descriptors: null }, layer: { prelude: `[<layer-name>#|<layer-name>?]`, descriptors: null }, media: { prelude: `<media-query-list>`, descriptors: null }, namespace: { prelude: `<namespace-prefix>? [<string>|<url>]`, descriptors: null }, page: { prelude: `<page-selector-list>`, descriptors: { bleed: `auto|<length>`, marks: `none|[crop||cross]`, "page-orientation": `upright|rotate-left|rotate-right`, size: `<length>{1,2}|auto|[<page-size>||[portrait|landscape]]` } }, "position-try": { prelude: `<dashed-ident>`, descriptors: { top: `<'top'>`, left: `<'left'>`, bottom: `<'bottom'>`, right: `<'right'>`, "inset-block-start": `<'inset-block-start'>`, "inset-block-end": `<'inset-block-end'>`, "inset-inline-start": `<'inset-inline-start'>`, "inset-inline-end": `<'inset-inline-end'>`, "inset-block": `<'inset-block'>`, "inset-inline": `<'inset-inline'>`, inset: `<'inset'>`, "margin-top": `<'margin-top'>`, "margin-left": `<'margin-left'>`, "margin-bottom": `<'margin-bottom'>`, "margin-right": `<'margin-right'>`, "margin-block-start": `<'margin-block-start'>`, "margin-block-end": `<'margin-block-end'>`, "margin-inline-start": `<'margin-inline-start'>`, "margin-inline-end": `<'margin-inline-end'>`, margin: `<'margin'>`, "margin-block": `<'margin-block'>`, "margin-inline": `<'margin-inline'>`, width: `<'width'>`, height: `<'height'>`, "min-width": `<'min-width'>`, "min-height": `<'min-height'>`, "max-width": `<'max-width'>`, "max-height": `<'max-height'>`, "block-size": `<'block-size'>`, "inline-size": `<'inline-size'>`, "min-block-size": `<'min-block-size'>`, "min-inline-size": `<'min-inline-size'>`, "max-block-size": `<'max-block-size'>`, "max-inline-size": `<'max-inline-size'>`, "align-self": `<'align-self'>|anchor-center`, "justify-self": `<'justify-self'>|anchor-center` } }, property: { prelude: `<custom-property-name>`, descriptors: { syntax: `<string>`, inherits: `true|false`, "initial-value": `<declaration-value>?` } }, scope: { prelude: `[( <scope-start> )]? [to ( <scope-end> )]?`, descriptors: null }, "starting-style": { prelude: null, descriptors: null }, supports: { prelude: `<supports-condition>`, descriptors: null }, container: { prelude: `[<container-name>]? <container-condition>`, descriptors: null }, nest: { prelude: `<complex-selector-list>`, descriptors: null } } }, qi = {};
e(qi, { generate: () => ra, name: () => ea, parse: () => na, structure: () => ta });
const X = 43, Z = 45, Ji = 110, Yi = true, Xi = false;
function Zi(e3, t2) {
  let n2 = this.tokenStart + e3, r2 = this.charCodeAt(n2);
  for ((r2 === X || r2 === Z) && (t2 && this.error(`Number sign is not allowed`), n2++); n2 < this.tokenEnd; n2++) k(this.charCodeAt(n2)) || this.error(`Integer is expected`, n2);
}
function Qi(e3) {
  return Zi.call(this, 0, e3);
}
function Q(e3, t2) {
  if (!this.cmpChar(this.tokenStart + e3, t2)) {
    let n2 = ``;
    switch (t2) {
      case Ji:
        n2 = `N is expected`;
        break;
      case Z:
        n2 = `HyphenMinus is expected`;
        break;
    }
    this.error(n2, this.tokenStart + e3);
  }
}
function $i() {
  let e3 = 0, t2 = 0, n2 = this.tokenType;
  for (; n2 === g || n2 === O; ) n2 = this.lookupType(++e3);
  if (n2 !== p) if (this.isDelim(X, e3) || this.isDelim(Z, e3)) {
    t2 = this.isDelim(X, e3) ? X : Z;
    do
      n2 = this.lookupType(++e3);
    while (n2 === g || n2 === O);
    n2 !== p && (this.skip(e3), Qi.call(this, Yi));
  } else return null;
  return e3 > 0 && this.skip(e3), t2 === 0 && (n2 = this.charCodeAt(this.tokenStart), n2 !== X && n2 !== Z && this.error(`Number sign is expected`)), Qi.call(this, t2 !== 0), t2 === Z ? `-` + this.consume(p) : this.consume(p);
}
const ea = `AnPlusB`, ta = { a: [String, null], b: [String, null] };
function na() {
  let e3 = this.tokenStart, t2 = null, n2 = null;
  if (this.tokenType === p) Qi.call(this, Xi), n2 = this.consume(p);
  else if (this.tokenType === i && this.cmpChar(this.tokenStart, Z)) switch (t2 = `-1`, Q.call(this, 1, Ji), this.tokenEnd - this.tokenStart) {
    case 2:
      this.next(), n2 = $i.call(this);
      break;
    case 3:
      Q.call(this, 2, Z), this.next(), this.skipSC(), Qi.call(this, Yi), n2 = `-` + this.consume(p);
      break;
    default:
      Q.call(this, 2, Z), Zi.call(this, 3, Yi), this.next(), n2 = this.substrToCursor(e3 + 2);
  }
  else if (this.tokenType === i || this.isDelim(X) && this.lookupType(1) === i) {
    let r2 = 0;
    switch (t2 = `1`, this.isDelim(X) && (r2 = 1, this.next()), Q.call(this, 0, Ji), this.tokenEnd - this.tokenStart) {
      case 1:
        this.next(), n2 = $i.call(this);
        break;
      case 2:
        Q.call(this, 1, Z), this.next(), this.skipSC(), Qi.call(this, Yi), n2 = `-` + this.consume(p);
        break;
      default:
        Q.call(this, 1, Z), Zi.call(this, 2, Yi), this.next(), n2 = this.substrToCursor(e3 + r2 + 1);
    }
  } else if (this.tokenType === h) {
    let r2 = this.charCodeAt(this.tokenStart), i2 = r2 === X || r2 === Z, a2 = this.tokenStart + i2;
    for (; a2 < this.tokenEnd && k(this.charCodeAt(a2)); a2++) ;
    a2 === this.tokenStart + i2 && this.error(`Integer is expected`, this.tokenStart + i2), Q.call(this, a2 - this.tokenStart, Ji), t2 = this.substring(e3, a2), a2 + 1 === this.tokenEnd ? (this.next(), n2 = $i.call(this)) : (Q.call(this, a2 - this.tokenStart + 1, Z), a2 + 2 === this.tokenEnd ? (this.next(), this.skipSC(), Qi.call(this, Yi), n2 = `-` + this.consume(p)) : (Zi.call(this, a2 - this.tokenStart + 2, Yi), this.next(), n2 = this.substrToCursor(a2 + 1)));
  } else this.error();
  return t2 !== null && t2.charCodeAt(0) === X && (t2 = t2.substr(1)), n2 !== null && n2.charCodeAt(0) === X && (n2 = n2.substr(1)), { type: `AnPlusB`, loc: this.getLocation(e3, this.tokenStart), a: t2, b: n2 };
}
function ra(e3) {
  if (e3.a) {
    let t2 = e3.a === `+1` && `n` || e3.a === `1` && `n` || e3.a === `-1` && `-n` || e3.a + `n`;
    if (e3.b) {
      let n2 = e3.b[0] === `-` || e3.b[0] === `+` ? e3.b : `+` + e3.b;
      this.tokenize(t2 + n2);
    } else this.tokenize(t2);
  } else this.tokenize(e3.b);
}
var ia = {};
e(ia, { generate: () => da, name: () => sa, parse: () => ua, structure: () => la, walkContext: () => ca });
function aa() {
  return this.Raw(this.consumeUntilLeftCurlyBracketOrSemicolon, true);
}
function oa() {
  for (let e3 = 1, t2; t2 = this.lookupType(e3); e3++) {
    if (t2 === D) return true;
    if (t2 === E || t2 === o) return false;
  }
  return false;
}
const sa = `Atrule`, ca = `atrule`, la = { name: String, prelude: [`AtrulePrelude`, `Raw`, null], block: [`Block`, null] };
function ua(e3 = false) {
  let t2 = this.tokenStart, n2, r2, i2 = null, a2 = null;
  switch (this.eat(o), n2 = this.substrToCursor(t2 + 1), r2 = n2.toLowerCase(), this.skipSC(), this.eof === false && this.tokenType !== E && this.tokenType !== b && (i2 = this.parseAtrulePrelude ? this.parseWithFallback(this.AtrulePrelude.bind(this, n2, e3), aa) : aa.call(this, this.tokenIndex), this.skipSC()), this.tokenType) {
    case b:
      this.next();
      break;
    case E:
      a2 = hasOwnProperty.call(this.atrule, r2) && typeof this.atrule[r2].block == `function` ? this.atrule[r2].block.call(this, e3) : this.Block(oa.call(this));
      break;
  }
  return { type: `Atrule`, loc: this.getLocation(t2, this.tokenStart), name: n2, prelude: i2, block: a2 };
}
function da(e3) {
  this.token(o, `@` + e3.name), e3.prelude !== null && this.node(e3.prelude), e3.block ? this.node(e3.block) : this.token(b, `;`);
}
var fa = {};
e(fa, { generate: () => _a, name: () => pa, parse: () => ga, structure: () => ha, walkContext: () => ma });
const pa = `AtrulePrelude`, ma = `atrulePrelude`, ha = { children: [[]] };
function ga(e3) {
  let t2 = null;
  return e3 !== null && (e3 = e3.toLowerCase()), this.skipSC(), t2 = hasOwnProperty.call(this.atrule, e3) && typeof this.atrule[e3].prelude == `function` ? this.atrule[e3].prelude.call(this) : this.readSequence(this.scope.AtrulePrelude), this.skipSC(), this.eof !== true && this.tokenType !== E && this.tokenType !== b && this.error(`Semicolon or block is expected`), { type: `AtrulePrelude`, loc: this.getLocationFromList(t2), children: t2 };
}
function _a(e3) {
  this.children(e3);
}
var va = {};
e(va, { generate: () => Aa, name: () => Da, parse: () => ka, structure: () => Oa });
const ya = 36, ba = 42, xa = 61, Sa = 94, Ca = 124, wa = 126;
function Ta() {
  this.eof && this.error(`Unexpected end of input`);
  let e3 = this.tokenStart, t2 = false;
  return this.isDelim(ba) ? (t2 = true, this.next()) : this.isDelim(Ca) || this.eat(i), this.isDelim(Ca) ? this.charCodeAt(this.tokenStart + 1) === xa ? t2 && this.error(`Identifier is expected`, this.tokenEnd) : (this.next(), this.eat(i)) : t2 && this.error(`Vertical line is expected`), { type: `Identifier`, loc: this.getLocation(e3, this.tokenStart), name: this.substrToCursor(e3) };
}
function Ea() {
  let e3 = this.tokenStart, t2 = this.charCodeAt(e3);
  return t2 !== xa && t2 !== wa && t2 !== Sa && t2 !== ya && t2 !== ba && t2 !== Ca && this.error(`Attribute selector (=, ~=, ^=, $=, *=, |=) is expected`), this.next(), t2 !== xa && (this.isDelim(xa) || this.error(`Equal sign is expected`), this.next()), this.substrToCursor(e3);
}
const Da = `AttributeSelector`, Oa = { name: `Identifier`, matcher: [String, null], value: [`String`, `Identifier`, null], flags: [String, null] };
function ka() {
  let e3 = this.tokenStart, t2, n2 = null, r2 = null, a2 = null;
  return this.eat(S), this.skipSC(), t2 = Ta.call(this), this.skipSC(), this.tokenType !== C && (this.tokenType !== i && (n2 = Ea.call(this), this.skipSC(), r2 = this.tokenType === c ? this.String() : this.Identifier(), this.skipSC()), this.tokenType === i && (a2 = this.consume(i), this.skipSC())), this.eat(C), { type: `AttributeSelector`, loc: this.getLocation(e3, this.tokenStart), name: t2, matcher: n2, value: r2, flags: a2 };
}
function Aa(e3) {
  this.token(f, `[`), this.node(e3.name), e3.matcher !== null && (this.tokenize(e3.matcher), this.node(e3.value)), e3.flags !== null && this.token(i, e3.flags), this.token(f, `]`);
}
var ja = {};
e(ja, { generate: () => Va, name: () => La, parse: () => Ba, structure: () => za, walkContext: () => Ra });
const Ma = 38;
function Na() {
  return this.Raw(null, true);
}
function Pa() {
  return this.parseWithFallback(this.Rule, Na);
}
function Fa() {
  return this.Raw(this.consumeUntilSemicolonIncluded, true);
}
function Ia() {
  if (this.tokenType === b) return Fa.call(this, this.tokenIndex);
  let e3 = this.parseWithFallback(this.Declaration, Fa);
  return this.tokenType === b && this.next(), e3;
}
const La = `Block`, Ra = `block`, za = { children: [[`Atrule`, `Rule`, `Declaration`]] };
function Ba(e3) {
  let t2 = e3 ? Ia : Pa, n2 = this.tokenStart, r2 = this.createList();
  this.eat(E);
  scan: for (; !this.eof; ) switch (this.tokenType) {
    case D:
      break scan;
    case g:
    case O:
      this.next();
      break;
    case o:
      r2.push(this.parseWithFallback(this.Atrule.bind(this, e3), Na));
      break;
    default:
      e3 && this.isDelim(Ma) ? r2.push(Pa.call(this)) : r2.push(t2.call(this));
  }
  return this.eof || this.eat(D), { type: `Block`, loc: this.getLocation(n2, this.tokenStart), children: r2 };
}
function Va(e3) {
  this.token(E, `{`), this.children(e3, (e4) => {
    e4.type === `Declaration` && this.token(b, `;`);
  }), this.token(D, `}`);
}
var Ha = {};
e(Ha, { generate: () => Ka, name: () => Ua, parse: () => Ga, structure: () => Wa });
const Ua = `Brackets`, Wa = { children: [[]] };
function Ga(e3, t2) {
  let n2 = this.tokenStart, r2 = null;
  return this.eat(S), r2 = e3.call(this, t2), this.eof || this.eat(C), { type: `Brackets`, loc: this.getLocation(n2, this.tokenStart), children: r2 };
}
function Ka(e3) {
  this.token(f, `[`), this.children(e3), this.token(f, `]`);
}
var qa = {};
e(qa, { generate: () => Za, name: () => Ja, parse: () => Xa, structure: () => Ya });
const Ja = `CDC`, Ya = [];
function Xa() {
  let e3 = this.tokenStart;
  return this.eat(v), { type: `CDC`, loc: this.getLocation(e3, this.tokenStart) };
}
function Za() {
  this.token(v, `-->`);
}
var Qa = {};
e(Qa, { generate: () => no, name: () => $a, parse: () => to, structure: () => eo });
const $a = `CDO`, eo = [];
function to() {
  let e3 = this.tokenStart;
  return this.eat(_), { type: `CDO`, loc: this.getLocation(e3, this.tokenStart) };
}
function no() {
  this.token(_, `<!--`);
}
var ro = {};
e(ro, { generate: () => co, name: () => ao, parse: () => so, structure: () => oo });
const io = 46, ao = `ClassSelector`, oo = { name: String };
function so() {
  return this.eatDelim(io), { type: `ClassSelector`, loc: this.getLocation(this.tokenStart - 1, this.tokenEnd), name: this.consume(i) };
}
function co(e3) {
  this.token(f, `.`), this.token(i, e3.name);
}
var lo = {};
e(lo, { generate: () => vo, name: () => ho, parse: () => _o, structure: () => go });
const uo = 43, fo = 47, po = 62, mo = 126, ho = `Combinator`, go = { name: String };
function _o() {
  let e3 = this.tokenStart, t2;
  switch (this.tokenType) {
    case g:
      t2 = ` `;
      break;
    case f:
      switch (this.charCodeAt(this.tokenStart)) {
        case po:
        case uo:
        case mo:
          this.next();
          break;
        case fo:
          this.next(), this.eatIdent(`deep`), this.eatDelim(fo);
          break;
        default:
          this.error(`Combinator is expected`);
      }
      t2 = this.substrToCursor(e3);
      break;
  }
  return { type: `Combinator`, loc: this.getLocation(e3, this.tokenStart), name: t2 };
}
function vo(e3) {
  this.tokenize(e3.name);
}
var yo = {};
e(yo, { generate: () => To, name: () => So, parse: () => wo, structure: () => Co });
const bo = 42, xo = 47, So = `Comment`, Co = { value: String };
function wo() {
  let e3 = this.tokenStart, t2 = this.tokenEnd;
  return this.eat(O), t2 - e3 + 2 >= 2 && this.charCodeAt(t2 - 2) === bo && this.charCodeAt(t2 - 1) === xo && (t2 -= 2), { type: `Comment`, loc: this.getLocation(e3, this.tokenStart), value: this.substring(e3 + 2, t2) };
}
function To(e3) {
  this.token(O, `/*` + e3.value + `*/`);
}
var Eo = {};
e(Eo, { generate: () => No, name: () => Oo, parse: () => Mo, structure: () => ko });
const Do = /* @__PURE__ */ new Set([y, T, r]), Oo = `Condition`, ko = { kind: String, children: [[`Identifier`, `Feature`, `FeatureFunction`, `FeatureRange`, `SupportsDeclaration`]] };
function Ao(e3) {
  return this.lookupTypeNonSC(1) === i && Do.has(this.lookupTypeNonSC(2)) ? this.Feature(e3) : this.FeatureRange(e3);
}
const jo = { media: Ao, container: Ao, supports() {
  return this.SupportsDeclaration();
} };
function Mo(e3 = `media`) {
  let t2 = this.createList();
  scan: for (; !this.eof; ) switch (this.tokenType) {
    case O:
    case g:
      this.next();
      continue;
    case i:
      t2.push(this.Identifier());
      break;
    case w: {
      let n2 = this.parseWithFallback(() => jo[e3].call(this, e3), () => null);
      n2 || (n2 = this.parseWithFallback(() => {
        this.eat(w);
        let t3 = this.Condition(e3);
        return this.eat(T), t3;
      }, () => this.GeneralEnclosed(e3))), t2.push(n2);
      break;
    }
    case a: {
      let n2 = this.parseWithFallback(() => this.FeatureFunction(e3), () => null);
      n2 || (n2 = this.GeneralEnclosed(e3)), t2.push(n2);
      break;
    }
    default:
      break scan;
  }
  return t2.isEmpty && this.error(`Condition is expected`), { type: `Condition`, loc: this.getLocationFromList(t2), kind: e3, children: t2 };
}
function No(e3) {
  e3.children.forEach((e4) => {
    e4.type === `Condition` ? (this.token(w, `(`), this.node(e4), this.token(T, `)`)) : this.node(e4);
  });
}
var Po = {};
e(Po, { generate: () => Yo, name: () => Go, parse: () => Jo, structure: () => qo, walkContext: () => Ko });
const Fo = 33, Io = 35, Lo = 36, Ro = 38, zo = 42, Bo = 43, Vo = 47;
function Ho() {
  return this.Raw(this.consumeUntilExclamationMarkOrSemicolon, true);
}
function Uo() {
  return this.Raw(this.consumeUntilExclamationMarkOrSemicolon, false);
}
function Wo() {
  let e3 = this.tokenIndex, t2 = this.Value();
  return t2.type !== `Raw` && this.eof === false && this.tokenType !== b && this.isDelim(Fo) === false && this.isBalanceEdge(e3) === false && this.error(), t2;
}
const Go = `Declaration`, Ko = `declaration`, qo = { important: [Boolean, String], property: String, value: [`Value`, `Raw`] };
function Jo() {
  let e3 = this.tokenStart, t2 = this.tokenIndex, n2 = Xo.call(this), r2 = Jt(n2), i2 = r2 ? this.parseCustomProperty : this.parseValue, a2 = r2 ? Uo : Ho, o2 = false, s2;
  this.skipSC(), this.eat(y);
  let c2 = this.tokenIndex;
  if (r2 || this.skipSC(), s2 = i2 ? this.parseWithFallback(Wo, a2) : a2.call(this, this.tokenIndex), r2 && s2.type === `Value` && s2.children.isEmpty) {
    for (let e4 = c2 - this.tokenIndex; e4 <= 0; e4++) if (this.lookupType(e4) === g) {
      s2.children.appendData({ type: `WhiteSpace`, loc: null, value: ` ` });
      break;
    }
  }
  return this.isDelim(Fo) && (o2 = Zo.call(this), this.skipSC()), this.eof === false && this.tokenType !== b && this.isBalanceEdge(t2) === false && this.error(), { type: `Declaration`, loc: this.getLocation(e3, this.tokenStart), important: o2, property: n2, value: s2 };
}
function Yo(e3) {
  this.token(i, e3.property), this.token(y, `:`), this.node(e3.value), e3.important && (this.token(f, `!`), this.token(i, e3.important === true ? `important` : e3.important));
}
function Xo() {
  let e3 = this.tokenStart;
  if (this.tokenType === f) switch (this.charCodeAt(this.tokenStart)) {
    case zo:
    case Lo:
    case Bo:
    case Io:
    case Ro:
      this.next();
      break;
    case Vo:
      this.next(), this.isDelim(Vo) && this.next();
      break;
  }
  return this.tokenType === s ? this.eat(s) : this.eat(i), this.substrToCursor(e3);
}
function Zo() {
  this.eat(f), this.skipSC();
  let e3 = this.consume(i);
  return e3 === `important` ? true : e3;
}
var Qo = {};
e(Qo, { generate: () => os, name: () => ts, parse: () => rs, structure: () => ns });
const $o = 38;
function es() {
  return this.Raw(this.consumeUntilSemicolonIncluded, true);
}
const ts = `DeclarationList`, ns = { children: [[`Declaration`, `Atrule`, `Rule`]] };
function rs() {
  let e3 = this.createList();
  scan: for (; !this.eof; ) switch (this.tokenType) {
    case g:
    case O:
    case b:
      this.next();
      break;
    case o:
      e3.push(this.parseWithFallback(this.Atrule.bind(this, true), es));
      break;
    default:
      this.isDelim($o) ? e3.push(this.parseWithFallback(this.Rule, es)) : e3.push(this.parseWithFallback(this.Declaration, es));
  }
  return { type: `DeclarationList`, loc: this.getLocationFromList(e3), children: e3 };
}
function os(e3) {
  this.children(e3, (e4) => {
    e4.type === `Declaration` && this.token(b, `;`);
  });
}
var ss = {};
e(ss, { generate: () => ds, name: () => cs, parse: () => us, structure: () => ls });
const cs = `Dimension`, ls = { value: String, unit: String };
function us() {
  let e3 = this.tokenStart, t2 = this.consumeNumber(h);
  return { type: `Dimension`, loc: this.getLocation(e3, this.tokenStart), value: t2, unit: this.substring(e3 + t2.length, this.tokenStart) };
}
function ds(e3) {
  this.token(h, e3.value + e3.unit);
}
var fs = {};
e(fs, { generate: () => _s, name: () => ms, parse: () => gs, structure: () => hs });
const ps = 47, ms = `Feature`, hs = { kind: String, name: String, value: [`Identifier`, `Number`, `Dimension`, `Ratio`, `Function`, null] };
function gs(e3) {
  let t2 = this.tokenStart, n2, r2 = null;
  if (this.eat(w), this.skipSC(), n2 = this.consume(i), this.skipSC(), this.tokenType !== T) {
    switch (this.eat(y), this.skipSC(), this.tokenType) {
      case p:
        r2 = this.lookupNonWSType(1) === f ? this.Ratio() : this.Number();
        break;
      case h:
        r2 = this.Dimension();
        break;
      case i:
        r2 = this.Identifier();
        break;
      case a:
        r2 = this.parseWithFallback(() => {
          let e4 = this.Function(this.readSequence, this.scope.Value);
          return this.skipSC(), this.isDelim(ps) && this.error(), e4;
        }, () => this.Ratio());
        break;
      default:
        this.error(`Number, dimension, ratio or identifier is expected`);
    }
    this.skipSC();
  }
  return this.eof || this.eat(T), { type: `Feature`, loc: this.getLocation(t2, this.tokenStart), kind: e3, name: n2, value: r2 };
}
function _s(e3) {
  this.token(w, `(`), this.token(i, e3.name), e3.value !== null && (this.token(y, `:`), this.node(e3.value)), this.token(T, `)`);
}
var vs = {};
e(vs, { generate: () => Cs, name: () => ys, parse: () => Ss, structure: () => bs });
const ys = `FeatureFunction`, bs = { kind: String, feature: String, value: [`Declaration`, `Selector`] };
function xs(e3, t2) {
  let n2 = this.features[e3] || {}, r2 = n2[t2];
  return typeof r2 != `function` && this.error(`Unknown feature ${t2}()`), r2;
}
function Ss(e3 = `unknown`) {
  let t2 = this.tokenStart, n2 = this.consumeFunctionName(), r2 = xs.call(this, e3, n2.toLowerCase());
  this.skipSC();
  let i2 = this.parseWithFallback(() => {
    let e4 = this.tokenIndex, t3 = r2.call(this);
    return this.eof === false && this.isBalanceEdge(e4) === false && this.error(), t3;
  }, () => this.Raw(null, false));
  return this.eof || this.eat(T), { type: `FeatureFunction`, loc: this.getLocation(t2, this.tokenStart), kind: e3, feature: n2, value: i2 };
}
function Cs(e3) {
  this.token(a, e3.feature + `(`), this.node(e3.value), this.token(T, `)`);
}
var ws = {};
e(ws, { generate: () => Ps, name: () => ks, parse: () => Ns, structure: () => As });
const Ts = 47, Es = 60, Ds = 61, Os = 62, ks = `FeatureRange`, As = { kind: String, left: [`Identifier`, `Number`, `Dimension`, `Ratio`, `Function`], leftComparison: String, middle: [`Identifier`, `Number`, `Dimension`, `Ratio`, `Function`], rightComparison: [String, null], right: [`Identifier`, `Number`, `Dimension`, `Ratio`, `Function`, null] };
function js() {
  switch (this.skipSC(), this.tokenType) {
    case p:
      return this.isDelim(Ts, this.lookupOffsetNonSC(1)) ? this.Ratio() : this.Number();
    case h:
      return this.Dimension();
    case i:
      return this.Identifier();
    case a:
      return this.parseWithFallback(() => {
        let e3 = this.Function(this.readSequence, this.scope.Value);
        return this.skipSC(), this.isDelim(Ts) && this.error(), e3;
      }, () => this.Ratio());
    default:
      this.error(`Number, dimension, ratio or identifier is expected`);
  }
}
function Ms(e3) {
  if (this.skipSC(), this.isDelim(Es) || this.isDelim(Os)) {
    let e4 = this.source[this.tokenStart];
    return this.next(), this.isDelim(Ds) ? (this.next(), e4 + `=`) : e4;
  }
  if (this.isDelim(Ds)) return `=`;
  this.error(`Expected ${e3 ? `":", ` : ``}"<", ">", "=" or ")"`);
}
function Ns(e3 = `unknown`) {
  let t2 = this.tokenStart;
  this.skipSC(), this.eat(w);
  let n2 = js.call(this), r2 = Ms.call(this, n2.type === `Identifier`), i2 = js.call(this), a2 = null, o2 = null;
  return this.lookupNonWSType(0) !== T && (a2 = Ms.call(this), o2 = js.call(this)), this.skipSC(), this.eat(T), { type: `FeatureRange`, loc: this.getLocation(t2, this.tokenStart), kind: e3, left: n2, leftComparison: r2, middle: i2, rightComparison: a2, right: o2 };
}
function Ps(e3) {
  this.token(w, `(`), this.node(e3.left), this.tokenize(e3.leftComparison), this.node(e3.middle), e3.right && (this.tokenize(e3.rightComparison), this.node(e3.right)), this.token(T, `)`);
}
var Fs = {};
e(Fs, { generate: () => Bs, name: () => Is, parse: () => zs, structure: () => Rs, walkContext: () => Ls });
const Is = `Function`, Ls = `function`, Rs = { name: String, children: [[]] };
function zs(e3, t2) {
  let n2 = this.tokenStart, r2 = this.consumeFunctionName(), i2 = r2.toLowerCase(), a2;
  return a2 = t2.hasOwnProperty(i2) ? t2[i2].call(this, t2) : e3.call(this, t2), this.eof || this.eat(T), { type: `Function`, loc: this.getLocation(n2, this.tokenStart), name: r2, children: a2 };
}
function Bs(e3) {
  this.token(a, e3.name + `(`), this.children(e3), this.token(T, `)`);
}
var Vs = {};
e(Vs, { generate: () => Gs, name: () => Hs, parse: () => Ws, structure: () => Us });
const Hs = `GeneralEnclosed`, Us = { kind: String, function: [String, null], children: [[]] };
function Ws(e3) {
  let t2 = this.tokenStart, n2 = null;
  this.tokenType === a ? n2 = this.consumeFunctionName() : this.eat(w);
  let r2 = this.parseWithFallback(() => {
    let e4 = this.tokenIndex, t3 = this.readSequence(this.scope.Value);
    return this.eof === false && this.isBalanceEdge(e4) === false && this.error(), t3;
  }, () => this.createSingleNodeList(this.Raw(null, false)));
  return this.eof || this.eat(T), { type: `GeneralEnclosed`, loc: this.getLocation(t2, this.tokenStart), kind: e3, function: n2, children: r2 };
}
function Gs(e3) {
  e3.function ? this.token(a, e3.function + `(`) : this.token(w, `(`), this.children(e3), this.token(T, `)`);
}
var Ks = {};
e(Ks, { generate: () => Zs, name: () => Js, parse: () => Xs, structure: () => Ys, xxx: () => qs });
const qs = `XXX`, Js = `Hash`, Ys = { value: String };
function Xs() {
  let e3 = this.tokenStart;
  return this.eat(s), { type: `Hash`, loc: this.getLocation(e3, this.tokenStart), value: this.substrToCursor(e3 + 1) };
}
function Zs(e3) {
  this.token(s, `#` + e3.value);
}
var Qs = {};
e(Qs, { generate: () => nc, name: () => $s, parse: () => tc, structure: () => ec });
const $s = `Identifier`, ec = { name: String };
function tc() {
  return { type: `Identifier`, loc: this.getLocation(this.tokenStart, this.tokenEnd), name: this.consume(i) };
}
function nc(e3) {
  this.token(i, e3.name);
}
var rc = {};
e(rc, { generate: () => sc, name: () => ic, parse: () => oc, structure: () => ac });
const ic = `IdSelector`, ac = { name: String };
function oc() {
  let e3 = this.tokenStart;
  return this.eat(s), { type: `IdSelector`, loc: this.getLocation(e3, this.tokenStart), name: this.substrToCursor(e3 + 1) };
}
function sc(e3) {
  this.token(f, `#` + e3.name);
}
var cc = {};
e(cc, { generate: () => pc, name: () => uc, parse: () => fc, structure: () => dc });
const lc = 46, uc = `Layer`, dc = { name: String };
function fc() {
  let e3 = this.tokenStart, t2 = this.consume(i);
  for (; this.isDelim(lc); ) this.eat(f), t2 += `.` + this.consume(i);
  return { type: `Layer`, loc: this.getLocation(e3, this.tokenStart), name: t2 };
}
function pc(e3) {
  this.tokenize(e3.name);
}
var mc = {};
e(mc, { generate: () => vc, name: () => hc, parse: () => _c, structure: () => gc });
const hc = `LayerList`, gc = { children: [[`Layer`]] };
function _c() {
  let e3 = this.createList();
  for (this.skipSC(); !this.eof && (e3.push(this.Layer()), this.lookupTypeNonSC(0) === x); ) this.skipSC(), this.next(), this.skipSC();
  return { type: `LayerList`, loc: this.getLocationFromList(e3), children: e3 };
}
function vc(e3) {
  this.children(e3, () => this.token(x, `,`));
}
var yc = {};
e(yc, { generate: () => Cc, name: () => bc, parse: () => Sc, structure: () => xc });
const bc = `MediaQuery`, xc = { modifier: [String, null], mediaType: [String, null], condition: [`Condition`, null] };
function Sc() {
  let e3 = this.tokenStart, t2 = null, n2 = null, o2 = null;
  if (this.skipSC(), this.tokenType === i && this.lookupTypeNonSC(1) !== w) {
    let e4 = this.consume(i), a2 = e4.toLowerCase();
    switch (a2 === `not` || a2 === `only` ? (this.skipSC(), t2 = a2, n2 = this.consume(i)) : n2 = e4, this.lookupTypeNonSC(0)) {
      case i:
        this.skipSC(), this.eatIdent(`and`), o2 = this.Condition(`media`);
        break;
      case E:
      case b:
      case x:
      case r:
        break;
      default:
        this.error(`Identifier or parenthesis is expected`);
    }
  } else switch (this.tokenType) {
    case i:
    case w:
    case a:
      o2 = this.Condition(`media`);
      break;
    case E:
    case b:
    case r:
      break;
    default:
      this.error(`Identifier or parenthesis is expected`);
  }
  return { type: `MediaQuery`, loc: this.getLocation(e3, this.tokenStart), modifier: t2, mediaType: n2, condition: o2 };
}
function Cc(e3) {
  e3.mediaType ? (e3.modifier && this.token(i, e3.modifier), this.token(i, e3.mediaType), e3.condition && (this.token(i, `and`), this.node(e3.condition))) : e3.condition && this.node(e3.condition);
}
var wc = {};
e(wc, { generate: () => Oc, name: () => Tc, parse: () => Dc, structure: () => Ec });
const Tc = `MediaQueryList`, Ec = { children: [[`MediaQuery`]] };
function Dc() {
  let e3 = this.createList();
  for (this.skipSC(); !this.eof && (e3.push(this.MediaQuery()), this.tokenType === x); ) this.next();
  return { type: `MediaQueryList`, loc: this.getLocationFromList(e3), children: e3 };
}
function Oc(e3) {
  this.children(e3, () => this.token(x, `,`));
}
var kc = {};
e(kc, { generate: () => Pc, name: () => jc, parse: () => Nc, structure: () => Mc });
const Ac = 38, jc = `NestingSelector`, Mc = {};
function Nc() {
  let e3 = this.tokenStart;
  return this.eatDelim(Ac), { type: `NestingSelector`, loc: this.getLocation(e3, this.tokenStart) };
}
function Pc() {
  this.token(f, `&`);
}
var Fc = {};
e(Fc, { generate: () => zc, name: () => Ic, parse: () => Rc, structure: () => Lc });
const Ic = `Nth`, Lc = { nth: [`AnPlusB`, `Identifier`], selector: [`SelectorList`, null] };
function Rc() {
  this.skipSC();
  let e3 = this.tokenStart, t2 = e3, n2 = null, r2;
  return r2 = this.lookupValue(0, `odd`) || this.lookupValue(0, `even`) ? this.Identifier() : this.AnPlusB(), t2 = this.tokenStart, this.skipSC(), this.lookupValue(0, `of`) && (this.next(), n2 = this.SelectorList(), t2 = this.tokenStart), { type: `Nth`, loc: this.getLocation(e3, t2), nth: r2, selector: n2 };
}
function zc(e3) {
  this.node(e3.nth), e3.selector !== null && (this.token(i, `of`), this.node(e3.selector));
}
var Bc = {};
e(Bc, { generate: () => Wc, name: () => Vc, parse: () => Uc, structure: () => Hc });
const Vc = `Number`, Hc = { value: String };
function Uc() {
  return { type: `Number`, loc: this.getLocation(this.tokenStart, this.tokenEnd), value: this.consume(p) };
}
function Wc(e3) {
  this.token(p, e3.value);
}
var Gc = {};
e(Gc, { generate: () => Yc, name: () => Kc, parse: () => Jc, structure: () => qc });
const Kc = `Operator`, qc = { value: String };
function Jc() {
  let e3 = this.tokenStart;
  return this.next(), { type: `Operator`, loc: this.getLocation(e3, this.tokenStart), value: this.substrToCursor(e3) };
}
function Yc(e3) {
  this.tokenize(e3.value);
}
var Xc = {};
e(Xc, { generate: () => el, name: () => Zc, parse: () => $c, structure: () => Qc });
const Zc = `Parentheses`, Qc = { children: [[]] };
function $c(e3, t2) {
  let n2 = this.tokenStart, r2 = null;
  return this.eat(w), r2 = e3.call(this, t2), this.eof || this.eat(T), { type: `Parentheses`, loc: this.getLocation(n2, this.tokenStart), children: r2 };
}
function el(e3) {
  this.token(w, `(`), this.children(e3), this.token(T, `)`);
}
var tl = {};
e(tl, { generate: () => al, name: () => nl, parse: () => il, structure: () => rl });
const nl = `Percentage`, rl = { value: String };
function il() {
  return { type: `Percentage`, loc: this.getLocation(this.tokenStart, this.tokenEnd), value: this.consumeNumber(m) };
}
function al(e3) {
  this.token(m, e3.value + `%`);
}
var ol = {};
e(ol, { generate: () => dl, name: () => sl, parse: () => ul, structure: () => ll, walkContext: () => cl });
const sl = `PseudoClassSelector`, cl = `function`, ll = { name: String, children: [[`Raw`], null] };
function ul() {
  let e3 = this.tokenStart, t2 = null, n2, r2;
  return this.eat(y), this.tokenType === a ? (n2 = this.consumeFunctionName(), r2 = n2.toLowerCase(), this.lookupNonWSType(0) == T ? t2 = this.createList() : hasOwnProperty.call(this.pseudo, r2) ? (this.skipSC(), t2 = this.pseudo[r2].call(this), this.skipSC()) : (t2 = this.createList(), t2.push(this.Raw(null, false))), this.eat(T)) : n2 = this.consume(i), { type: `PseudoClassSelector`, loc: this.getLocation(e3, this.tokenStart), name: n2, children: t2 };
}
function dl(e3) {
  this.token(y, `:`), e3.children === null ? this.token(i, e3.name) : (this.token(a, e3.name + `(`), this.children(e3), this.token(T, `)`));
}
var fl = {};
e(fl, { generate: () => _l, name: () => pl, parse: () => gl, structure: () => hl, walkContext: () => ml });
const pl = `PseudoElementSelector`, ml = `function`, hl = { name: String, children: [[`Raw`], null] };
function gl() {
  let e3 = this.tokenStart, t2 = null, n2, r2;
  return this.eat(y), this.eat(y), this.tokenType === a ? (n2 = this.consumeFunctionName(), r2 = n2.toLowerCase(), this.lookupNonWSType(0) == T ? t2 = this.createList() : hasOwnProperty.call(this.pseudo, r2) ? (this.skipSC(), t2 = this.pseudo[r2].call(this), this.skipSC()) : (t2 = this.createList(), t2.push(this.Raw(null, false))), this.eat(T)) : n2 = this.consume(i), { type: `PseudoElementSelector`, loc: this.getLocation(e3, this.tokenStart), name: n2, children: t2 };
}
function _l(e3) {
  this.token(y, `:`), this.token(y, `:`), e3.children === null ? this.token(i, e3.name) : (this.token(a, e3.name + `(`), this.children(e3), this.token(T, `)`));
}
var vl = {};
e(vl, { generate: () => wl, name: () => xl, parse: () => Cl, structure: () => Sl });
const yl = 47;
function bl() {
  switch (this.skipSC(), this.tokenType) {
    case p:
      return this.Number();
    case a:
      return this.Function(this.readSequence, this.scope.Value);
    default:
      this.error(`Number of function is expected`);
  }
}
const xl = `Ratio`, Sl = { left: [`Number`, `Function`], right: [`Number`, `Function`, null] };
function Cl() {
  let e3 = this.tokenStart, t2 = bl.call(this), n2 = null;
  return this.skipSC(), this.isDelim(yl) && (this.eatDelim(yl), n2 = bl.call(this)), { type: `Ratio`, loc: this.getLocation(e3, this.tokenStart), left: t2, right: n2 };
}
function wl(e3) {
  this.node(e3.left), this.token(f, `/`), e3.right ? this.node(e3.right) : this.node(p, 1);
}
var Tl = {};
e(Tl, { generate: () => Al, name: () => Dl, parse: () => kl, structure: () => Ol });
function El() {
  return this.tokenIndex > 0 && this.lookupType(-1) === g ? this.tokenIndex > 1 ? this.getTokenStart(this.tokenIndex - 1) : this.firstCharOffset : this.tokenStart;
}
const Dl = `Raw`, Ol = { value: String };
function kl(e3, t2) {
  let n2 = this.getTokenStart(this.tokenIndex), r2;
  return this.skipUntilBalanced(this.tokenIndex, e3 || this.consumeUntilBalanceEnd), r2 = t2 && this.tokenStart > n2 ? El.call(this) : this.tokenStart, { type: `Raw`, loc: this.getLocation(n2, r2), value: this.substring(n2, r2) };
}
function Al(e3) {
  this.tokenize(e3.value);
}
var jl = {};
e(jl, { generate: () => Rl, name: () => Pl, parse: () => Ll, structure: () => Il, walkContext: () => Fl });
function Ml() {
  return this.Raw(this.consumeUntilLeftCurlyBracket, true);
}
function Nl() {
  let e3 = this.SelectorList();
  return e3.type !== `Raw` && this.eof === false && this.tokenType !== E && this.error(), e3;
}
const Pl = `Rule`, Fl = `rule`, Il = { prelude: [`SelectorList`, `Raw`], block: [`Block`] };
function Ll() {
  let e3 = this.tokenIndex, t2 = this.tokenStart, n2, r2;
  return n2 = this.parseRulePrelude ? this.parseWithFallback(Nl, Ml) : Ml.call(this, e3), r2 = this.Block(true), { type: `Rule`, loc: this.getLocation(t2, this.tokenStart), prelude: n2, block: r2 };
}
function Rl(e3) {
  this.node(e3.prelude), this.node(e3.block);
}
var zl = {};
e(zl, { generate: () => Ul, name: () => Bl, parse: () => Hl, structure: () => Vl });
const Bl = `Scope`, Vl = { root: [`SelectorList`, `Raw`, null], limit: [`SelectorList`, `Raw`, null] };
function Hl() {
  let e3 = null, t2 = null;
  this.skipSC();
  let n2 = this.tokenStart;
  return this.tokenType === w && (this.next(), this.skipSC(), e3 = this.parseWithFallback(this.SelectorList, () => this.Raw(false, true)), this.skipSC(), this.eat(T)), this.lookupNonWSType(0) === i && (this.skipSC(), this.eatIdent(`to`), this.skipSC(), this.eat(w), this.skipSC(), t2 = this.parseWithFallback(this.SelectorList, () => this.Raw(false, true)), this.skipSC(), this.eat(T)), { type: `Scope`, loc: this.getLocation(n2, this.tokenStart), root: e3, limit: t2 };
}
function Ul(e3) {
  e3.root && (this.token(w, `(`), this.node(e3.root), this.token(T, `)`)), e3.limit && (this.token(i, `to`), this.token(w, `(`), this.node(e3.limit), this.token(T, `)`));
}
var Wl = {};
e(Wl, { generate: () => Jl, name: () => Gl, parse: () => ql, structure: () => Kl });
const Gl = `Selector`, Kl = { children: [[`TypeSelector`, `IdSelector`, `ClassSelector`, `AttributeSelector`, `PseudoClassSelector`, `PseudoElementSelector`, `Combinator`]] };
function ql() {
  let e3 = this.readSequence(this.scope.Selector);
  return this.getFirstListNode(e3) === null && this.error(`Selector is expected`), { type: `Selector`, loc: this.getLocationFromList(e3), children: e3 };
}
function Jl(e3) {
  this.children(e3);
}
var Yl = {};
e(Yl, { generate: () => eu, name: () => Xl, parse: () => $l, structure: () => Ql, walkContext: () => Zl });
const Xl = `SelectorList`, Zl = `selector`, Ql = { children: [[`Selector`, `Raw`]] };
function $l() {
  let e3 = this.createList();
  for (; !this.eof; ) {
    if (e3.push(this.Selector()), this.tokenType === x) {
      this.next();
      continue;
    }
    break;
  }
  return { type: `SelectorList`, loc: this.getLocationFromList(e3), children: e3 };
}
function eu(e3) {
  this.children(e3, () => this.token(x, `,`));
}
const tu = 92, nu = 34, ru = 39;
function iu(e3) {
  let t2 = e3.length, n2 = e3.charCodeAt(0), r2 = n2 === nu || n2 === ru ? 1 : 0, i2 = r2 === 1 && t2 > 1 && e3.charCodeAt(t2 - 1) === n2 ? t2 - 2 : t2 - 1, a2 = ``;
  for (let n3 = r2; n3 <= i2; n3++) {
    let r3 = e3.charCodeAt(n3);
    if (r3 === tu) {
      if (n3 === i2) {
        n3 !== t2 - 1 && (a2 = e3.substr(n3 + 1));
        break;
      }
      if (r3 = e3.charCodeAt(++n3), N(tu, r3)) {
        let t3 = n3 - 1, r4 = Te(e3, t3);
        n3 = r4 - 1, a2 += ke(e3.substring(t3 + 1, r4));
      } else r3 === 13 && e3.charCodeAt(n3 + 1) === 10 && n3++;
    } else a2 += e3[n3];
  }
  return a2;
}
function au(e3, t2) {
  let n2 = t2 ? `'` : `"`, r2 = t2 ? ru : nu, i2 = ``, a2 = false;
  for (let t3 = 0; t3 < e3.length; t3++) {
    let n3 = e3.charCodeAt(t3);
    if (n3 === 0) {
      i2 += `\uFFFD`;
      continue;
    }
    if (n3 <= 31 || n3 === 127) {
      i2 += `\\` + n3.toString(16), a2 = true;
      continue;
    }
    n3 === r2 || n3 === tu ? (i2 += `\\` + e3.charAt(t3), a2 = false) : (a2 && (A(n3) || se(n3)) && (i2 += ` `), i2 += e3.charAt(t3), a2 = false);
  }
  return n2 + i2 + n2;
}
var ou = {};
e(ou, { generate: () => uu, name: () => su, parse: () => lu, structure: () => cu });
const su = `String`, cu = { value: String };
function lu() {
  return { type: `String`, loc: this.getLocation(this.tokenStart, this.tokenEnd), value: iu(this.consume(c)) };
}
function uu(e3) {
  this.token(c, au(e3.value));
}
var du = {};
e(du, { generate: () => vu, name: () => mu, parse: () => _u, structure: () => gu, walkContext: () => hu });
const fu = 33;
function pu() {
  return this.Raw(null, false);
}
const mu = `StyleSheet`, hu = `stylesheet`, gu = { children: [[`Comment`, `CDO`, `CDC`, `Atrule`, `Rule`, `Raw`]] };
function _u() {
  let e3 = this.tokenStart, t2 = this.createList(), n2;
  scan: for (; !this.eof; ) {
    switch (this.tokenType) {
      case g:
        this.next();
        continue;
      case O:
        if (this.charCodeAt(this.tokenStart + 2) !== fu) {
          this.next();
          continue;
        }
        n2 = this.Comment();
        break;
      case _:
        n2 = this.CDO();
        break;
      case v:
        n2 = this.CDC();
        break;
      case o:
        n2 = this.parseWithFallback(this.Atrule, pu);
        break;
      default:
        n2 = this.parseWithFallback(this.Rule, pu);
    }
    t2.push(n2);
  }
  return { type: `StyleSheet`, loc: this.getLocation(e3, this.tokenStart), children: t2 };
}
function vu(e3) {
  this.children(e3);
}
var yu = {};
e(yu, { generate: () => Cu, name: () => bu, parse: () => Su, structure: () => xu });
const bu = `SupportsDeclaration`, xu = { declaration: `Declaration` };
function Su() {
  let e3 = this.tokenStart;
  this.eat(w), this.skipSC();
  let t2 = this.Declaration();
  return this.eof || this.eat(T), { type: `SupportsDeclaration`, loc: this.getLocation(e3, this.tokenStart), declaration: t2 };
}
function Cu(e3) {
  this.token(w, `(`), this.node(e3.declaration), this.token(T, `)`);
}
var wu = {};
e(wu, { generate: () => ju, name: () => Ou, parse: () => Au, structure: () => ku });
const Tu = 42, Eu = 124;
function Du() {
  this.tokenType !== i && this.isDelim(Tu) === false && this.error(`Identifier or asterisk is expected`), this.next();
}
const Ou = `TypeSelector`, ku = { name: String };
function Au() {
  let e3 = this.tokenStart;
  return this.isDelim(Eu) ? (this.next(), Du.call(this)) : (Du.call(this), this.isDelim(Eu) && (this.next(), Du.call(this))), { type: `TypeSelector`, loc: this.getLocation(e3, this.tokenStart), name: this.substrToCursor(e3) };
}
function ju(e3) {
  this.tokenize(e3.name);
}
var Mu = {};
e(Mu, { generate: () => Uu, name: () => Bu, parse: () => Hu, structure: () => Vu });
const Nu = 43, Pu = 45, Fu = 63;
function Iu(e3, t2) {
  let n2 = 0;
  for (let r2 = this.tokenStart + e3; r2 < this.tokenEnd; r2++) {
    let i2 = this.charCodeAt(r2);
    if (i2 === Pu && t2 && n2 !== 0) return Iu.call(this, e3 + n2 + 1, false), -1;
    A(i2) || this.error(t2 && n2 !== 0 ? `Hyphen minus` + (n2 < 6 ? ` or hex digit` : ``) + ` is expected` : n2 < 6 ? `Hex digit is expected` : `Unexpected input`, r2), ++n2 > 6 && this.error(`Too many hex digits`, r2);
  }
  return this.next(), n2;
}
function Lu(e3) {
  let t2 = 0;
  for (; this.isDelim(Fu); ) ++t2 > e3 && this.error(`Too many question marks`), this.next();
}
function Ru(e3) {
  this.charCodeAt(this.tokenStart) !== e3 && this.error((e3 === Nu ? `Plus sign` : `Hyphen minus`) + ` is expected`);
}
function zu() {
  let e3 = 0;
  switch (this.tokenType) {
    case p:
      if (e3 = Iu.call(this, 1, true), this.isDelim(Fu)) {
        Lu.call(this, 6 - e3);
        break;
      }
      if (this.tokenType === h || this.tokenType === p) {
        Ru.call(this, Pu), Iu.call(this, 1, false);
        break;
      }
      break;
    case h:
      e3 = Iu.call(this, 1, true), e3 > 0 && Lu.call(this, 6 - e3);
      break;
    default:
      if (this.eatDelim(Nu), this.tokenType === i) {
        e3 = Iu.call(this, 0, true), e3 > 0 && Lu.call(this, 6 - e3);
        break;
      }
      if (this.isDelim(Fu)) {
        this.next(), Lu.call(this, 5);
        break;
      }
      this.error(`Hex digit or question mark is expected`);
  }
}
const Bu = `UnicodeRange`, Vu = { value: String };
function Hu() {
  let e3 = this.tokenStart;
  return this.eatIdent(`u`), zu.call(this), { type: `UnicodeRange`, loc: this.getLocation(e3, this.tokenStart), value: this.substrToCursor(e3) };
}
function Uu(e3) {
  this.tokenize(e3.value);
}
const Wu = 32, Gu = 92, Ku = 34, qu = 39, Ju = 40, Yu = 41;
function Xu(e3) {
  let t2 = e3.length, n2 = 4, r2 = e3.charCodeAt(t2 - 1) === Yu ? t2 - 2 : t2 - 1, i2 = ``;
  for (; n2 < r2 && se(e3.charCodeAt(n2)); ) n2++;
  for (; n2 < r2 && se(e3.charCodeAt(r2)); ) r2--;
  for (let a2 = n2; a2 <= r2; a2++) {
    let n3 = e3.charCodeAt(a2);
    if (n3 === Gu) {
      if (a2 === r2) {
        a2 !== t2 - 1 && (i2 = e3.substr(a2 + 1));
        break;
      }
      if (n3 = e3.charCodeAt(++a2), N(Gu, n3)) {
        let t3 = a2 - 1, n4 = Te(e3, t3);
        a2 = n4 - 1, i2 += ke(e3.substring(t3 + 1, n4));
      } else n3 === 13 && e3.charCodeAt(a2 + 1) === 10 && a2++;
    } else i2 += e3[a2];
  }
  return i2;
}
function Zu(e3) {
  let t2 = ``, n2 = false;
  for (let r2 = 0; r2 < e3.length; r2++) {
    let i2 = e3.charCodeAt(r2);
    if (i2 === 0) {
      t2 += `\uFFFD`;
      continue;
    }
    if (i2 <= 31 || i2 === 127) {
      t2 += `\\` + i2.toString(16), n2 = true;
      continue;
    }
    i2 === Wu || i2 === Gu || i2 === Ku || i2 === qu || i2 === Ju || i2 === Yu ? (t2 += `\\` + e3.charAt(r2), n2 = false) : (n2 && A(i2) && (t2 += ` `), t2 += e3.charAt(r2), n2 = false);
  }
  return `url(` + t2 + `)`;
}
var Qu = {};
e(Qu, { generate: () => nd, name: () => $u, parse: () => td, structure: () => ed });
const $u = `Url`, ed = { value: String };
function td() {
  let e3 = this.tokenStart, t2;
  switch (this.tokenType) {
    case u:
      t2 = Xu(this.consume(u));
      break;
    case a:
      this.cmpStr(this.tokenStart, this.tokenEnd, `url(`) || this.error("Function name must be `url`"), this.eat(a), this.skipSC(), t2 = iu(this.consume(c)), this.skipSC(), this.eof || this.eat(T);
      break;
    default:
      this.error(`Url or Function is expected`);
  }
  return { type: `Url`, loc: this.getLocation(e3, this.tokenStart), value: t2 };
}
function nd(e3) {
  this.token(u, Zu(e3.value));
}
var rd = {};
e(rd, { generate: () => sd, name: () => id, parse: () => od, structure: () => ad });
const id = `Value`, ad = { children: [[]] };
function od() {
  let e3 = this.tokenStart, t2 = this.readSequence(this.scope.Value);
  return { type: `Value`, loc: this.getLocation(e3, this.tokenStart), children: t2 };
}
function sd(e3) {
  this.children(e3);
}
var cd = {};
e(cd, { generate: () => pd, name: () => ud, parse: () => fd, structure: () => dd });
const ld = Object.freeze({ type: `WhiteSpace`, loc: null, value: ` ` }), ud = `WhiteSpace`, dd = { value: String };
function fd() {
  return this.eat(g), ld;
}
function pd(e3) {
  this.token(g, e3.value);
}
var md = {};
e(md, { AnPlusB: () => qi, Atrule: () => ia, AtrulePrelude: () => fa, AttributeSelector: () => va, Block: () => ja, Brackets: () => Ha, CDC: () => qa, CDO: () => Qa, ClassSelector: () => ro, Combinator: () => lo, Comment: () => yo, Condition: () => Eo, Declaration: () => Po, DeclarationList: () => Qo, Dimension: () => ss, Feature: () => fs, FeatureFunction: () => vs, FeatureRange: () => ws, Function: () => Fs, GeneralEnclosed: () => Vs, Hash: () => Ks, IdSelector: () => rc, Identifier: () => Qs, Layer: () => cc, LayerList: () => mc, MediaQuery: () => yc, MediaQueryList: () => wc, NestingSelector: () => kc, Nth: () => Fc, Number: () => Bc, Operator: () => Gc, Parentheses: () => Xc, Percentage: () => tl, PseudoClassSelector: () => ol, PseudoElementSelector: () => fl, Ratio: () => vl, Raw: () => Tl, Rule: () => jl, Scope: () => zl, Selector: () => Wl, SelectorList: () => Yl, String: () => ou, StyleSheet: () => du, SupportsDeclaration: () => yu, TypeSelector: () => wu, UnicodeRange: () => Mu, Url: () => Qu, Value: () => rd, WhiteSpace: () => cd });
var hd = { generic: true, cssWideKeywords: Qt, ...Ki, node: md };
const gd = 35, _d = 42, vd = 43, yd = 45, bd = 47, xd = 117;
function Sd(e3) {
  switch (this.tokenType) {
    case s:
      return this.Hash();
    case x:
      return this.Operator();
    case w:
      return this.Parentheses(this.readSequence, e3.recognizer);
    case S:
      return this.Brackets(this.readSequence, e3.recognizer);
    case c:
      return this.String();
    case h:
      return this.Dimension();
    case m:
      return this.Percentage();
    case p:
      return this.Number();
    case a:
      return this.cmpStr(this.tokenStart, this.tokenEnd, `url(`) ? this.Url() : this.Function(this.readSequence, e3.recognizer);
    case u:
      return this.Url();
    case i:
      return this.cmpChar(this.tokenStart, xd) && this.cmpChar(this.tokenStart + 1, vd) ? this.UnicodeRange() : this.Identifier();
    case f: {
      let e4 = this.charCodeAt(this.tokenStart);
      if (e4 === bd || e4 === _d || e4 === vd || e4 === yd) return this.Operator();
      e4 === gd && this.error(`Hex or identifier is expected`, this.tokenStart + 1);
      break;
    }
  }
}
var Cd = { getNode: Sd };
const wd = 35, Td = 38, Ed = 42, Dd = 43, Od = 47, kd = 46, Ad = 62, jd = 124, Md = 126;
function Nd(e3, t2) {
  t2.last !== null && t2.last.type !== `Combinator` && e3 !== null && e3.type !== `Combinator` && t2.push({ type: `Combinator`, loc: null, name: ` ` });
}
function Pd() {
  switch (this.tokenType) {
    case S:
      return this.AttributeSelector();
    case s:
      return this.IdSelector();
    case y:
      return this.lookupType(1) === y ? this.PseudoElementSelector() : this.PseudoClassSelector();
    case i:
      return this.TypeSelector();
    case p:
    case m:
      return this.Percentage();
    case h:
      this.charCodeAt(this.tokenStart) === kd && this.error(`Identifier is expected`, this.tokenStart + 1);
      break;
    case f: {
      let e3 = this.charCodeAt(this.tokenStart);
      switch (e3) {
        case Dd:
        case Ad:
        case Md:
        case Od:
          return this.Combinator();
        case kd:
          return this.ClassSelector();
        case Ed:
        case jd:
          return this.TypeSelector();
        case wd:
          return this.IdSelector();
        case Td:
          return this.NestingSelector();
      }
      break;
    }
  }
}
var Fd = { onWhiteSpace: Nd, getNode: Pd };
function Id() {
  return this.createSingleNodeList(this.Raw(null, false));
}
function Ld() {
  let e3 = this.createList();
  if (this.skipSC(), e3.push(this.Identifier()), this.skipSC(), this.tokenType === x) {
    e3.push(this.Operator());
    let t2 = this.tokenIndex, n2 = this.parseCustomProperty ? this.Value(null) : this.Raw(this.consumeUntilExclamationMarkOrSemicolon, false);
    if (n2.type === `Value` && n2.children.isEmpty) {
      for (let e4 = t2 - this.tokenIndex; e4 <= 0; e4++) if (this.lookupType(e4) === g) {
        n2.children.appendData({ type: `WhiteSpace`, loc: null, value: ` ` });
        break;
      }
    }
    e3.push(n2);
  }
  return e3;
}
function Rd(e3) {
  return e3 !== null && e3.type === `Operator` && (e3.value[e3.value.length - 1] === `-` || e3.value[e3.value.length - 1] === `+`);
}
var zd = { getNode: Sd, onWhiteSpace(e3, t2) {
  Rd(e3) && (e3.value = ` ` + e3.value), Rd(t2.last) && (t2.last.value += ` `);
}, expression: Id, var: Ld }, Bd = {};
e(Bd, { AtrulePrelude: () => Cd, Selector: () => Fd, Value: () => zd });
const Vd = /* @__PURE__ */ new Set([`none`, `and`, `not`, `or`]);
var Hd = { parse: { prelude() {
  let e3 = this.createList();
  if (this.tokenType === i) {
    let t2 = this.substring(this.tokenStart, this.tokenEnd);
    Vd.has(t2.toLowerCase()) || e3.push(this.Identifier());
  }
  return e3.push(this.Condition(`container`)), e3;
}, block(e3 = false) {
  return this.Block(e3);
} } }, Ud = { parse: { prelude: null, block() {
  return this.Block(true);
} } };
function Wd(e3, t2) {
  return this.parseWithFallback(() => {
    try {
      return e3.call(this);
    } finally {
      this.skipSC(), this.lookupNonWSType(0) !== T && this.error();
    }
  }, t2 || (() => this.Raw(null, true)));
}
const Gd = { layer() {
  this.skipSC();
  let e3 = this.createList(), t2 = Wd.call(this, this.Layer);
  return (t2.type !== `Raw` || t2.value !== ``) && e3.push(t2), e3;
}, supports() {
  this.skipSC();
  let e3 = this.createList(), t2 = Wd.call(this, this.Declaration, () => Wd.call(this, () => this.Condition(`supports`)));
  return (t2.type !== `Raw` || t2.value !== ``) && e3.push(t2), e3;
} };
var Kd = { parse: { prelude() {
  let e3 = this.createList();
  switch (this.tokenType) {
    case c:
      e3.push(this.String());
      break;
    case u:
    case a:
      e3.push(this.Url());
      break;
    default:
      this.error(`String or url() is expected`);
  }
  return this.skipSC(), this.tokenType === i && this.cmpStr(this.tokenStart, this.tokenEnd, `layer`) ? e3.push(this.Identifier()) : this.tokenType === a && this.cmpStr(this.tokenStart, this.tokenEnd, `layer(`) && e3.push(this.Function(null, Gd)), this.skipSC(), this.tokenType === a && this.cmpStr(this.tokenStart, this.tokenEnd, `supports(`) && e3.push(this.Function(null, Gd)), (this.lookupNonWSType(0) === i || this.lookupNonWSType(0) === w) && e3.push(this.MediaQueryList()), e3;
}, block: null } }, qd = { parse: { prelude() {
  return this.createSingleNodeList(this.LayerList());
}, block() {
  return this.Block(false);
} } }, Jd = { parse: { prelude() {
  return this.createSingleNodeList(this.MediaQueryList());
}, block(e3 = false) {
  return this.Block(e3);
} } }, Yd = { parse: { prelude() {
  return this.createSingleNodeList(this.SelectorList());
}, block() {
  return this.Block(true);
} } }, Xd = { parse: { prelude() {
  return this.createSingleNodeList(this.SelectorList());
}, block() {
  return this.Block(true);
} } }, Zd = { parse: { prelude() {
  return this.createSingleNodeList(this.Scope());
}, block(e3 = false) {
  return this.Block(e3);
} } }, Qd = { parse: { prelude: null, block(e3 = false) {
  return this.Block(e3);
} } }, $d = { parse: { prelude() {
  return this.createSingleNodeList(this.Condition(`supports`));
}, block(e3 = false) {
  return this.Block(e3);
} } }, ef = { container: Hd, "font-face": Ud, import: Kd, layer: qd, media: Jd, nest: Yd, page: Xd, scope: Zd, "starting-style": Qd, supports: $d };
function tf() {
  let e3 = this.createList();
  this.skipSC();
  loop: for (; !this.eof; ) {
    switch (this.tokenType) {
      case i:
        e3.push(this.Identifier());
        break;
      case c:
        e3.push(this.String());
        break;
      case x:
        e3.push(this.Operator());
        break;
      case T:
        break loop;
      default:
        this.error(`Identifier, string or comma is expected`);
    }
    this.skipSC();
  }
  return e3;
}
const $ = { parse() {
  return this.createSingleNodeList(this.SelectorList());
} }, nf = { parse() {
  return this.createSingleNodeList(this.Selector());
} }, rf = { parse() {
  return this.createSingleNodeList(this.Identifier());
} }, af = { parse: tf }, sf = { parse() {
  return this.createSingleNodeList(this.Nth());
} };
var cf = { dir: rf, has: $, lang: af, matches: $, is: $, "-moz-any": $, "-webkit-any": $, where: $, not: $, "nth-child": sf, "nth-last-child": sf, "nth-last-of-type": sf, "nth-of-type": sf, slotted: nf, host: nf, "host-context": nf }, lf = {};
e(lf, { AnPlusB: () => na, Atrule: () => ua, AtrulePrelude: () => ga, AttributeSelector: () => ka, Block: () => Ba, Brackets: () => Ga, CDC: () => Xa, CDO: () => to, ClassSelector: () => so, Combinator: () => _o, Comment: () => wo, Condition: () => Mo, Declaration: () => Jo, DeclarationList: () => rs, Dimension: () => us, Feature: () => gs, FeatureFunction: () => Ss, FeatureRange: () => Ns, Function: () => zs, GeneralEnclosed: () => Ws, Hash: () => Xs, IdSelector: () => oc, Identifier: () => tc, Layer: () => fc, LayerList: () => _c, MediaQuery: () => Sc, MediaQueryList: () => Dc, NestingSelector: () => Nc, Nth: () => Rc, Number: () => Uc, Operator: () => Jc, Parentheses: () => $c, Percentage: () => il, PseudoClassSelector: () => ul, PseudoElementSelector: () => gl, Ratio: () => Cl, Raw: () => kl, Rule: () => Ll, Scope: () => Hl, Selector: () => ql, SelectorList: () => $l, String: () => lu, StyleSheet: () => _u, SupportsDeclaration: () => Su, TypeSelector: () => Au, UnicodeRange: () => Hu, Url: () => td, Value: () => od, WhiteSpace: () => fd });
var uf = { parseContext: { default: `StyleSheet`, stylesheet: `StyleSheet`, atrule: `Atrule`, atrulePrelude(e3) {
  return this.AtrulePrelude(e3.atrule ? String(e3.atrule) : null);
}, mediaQueryList: `MediaQueryList`, mediaQuery: `MediaQuery`, condition(e3) {
  return this.Condition(e3.kind);
}, rule: `Rule`, selectorList: `SelectorList`, selector: `Selector`, block() {
  return this.Block(true);
}, declarationList: `DeclarationList`, declaration: `Declaration`, value: `Value` }, features: { supports: { selector() {
  return this.Selector();
} }, container: { style() {
  return this.Declaration();
} } }, scope: Bd, atrule: ef, pseudo: cf, node: lf }, df = { node: md }, ff = Gi({ ...hd, ...uf, ...df });
const { tokenize: pf, parse: mf, generate: hf, lexer: gf, createLexer: _f, walk: vf, find: yf, findLast: bf, findAll: xf, toPlainObject: Sf, fromPlainObject: Cf, fork: wf } = ff;
export {
  hf as generate,
  mf as parse,
  vf as walk
};
