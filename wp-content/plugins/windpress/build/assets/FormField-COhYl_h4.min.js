import { computed as e, createBaseVNode as t, createBlock as n, createCommentVNode as r, createElementBlock as i, createTextVNode as a, createVNode as o, defineComponent as s, inject as c, mergeProps as l, normalizeClass as u, openBlock as d, provide as f, ref as p, renderSlot as m, toDisplayString as h, unref as g, useId as _, useSlots as v, withCtx as y } from "./runtime-core.esm-bundler-CFIgNHFT.min.js";
import { Primitive as b, formFieldInjectionKey as x, inputIdInjectionKey as S, tv as C, useAppConfig as w } from "./Link-83qDN5tY.min.js";
import { useForwardExpose as T } from "./tv-CD-q12eC.min.js";
const E = s({ __name: `Label`, props: { for: {}, asChild: { type: Boolean }, as: { default: `label` } }, setup(e2) {
  let t2 = e2;
  return T(), (e3, r2) => (d(), n(g(b), l(t2, { onMousedown: r2[0] || (r2[0] = (e4) => {
    !e4.defaultPrevented && e4.detail > 1 && e4.preventDefault();
  }) }), { default: y(() => [m(e3.$slots, `default`)]), _: 3 }, 16));
} });
var D = { slots: { root: ``, wrapper: ``, labelWrapper: `flex content-center items-center justify-between`, label: `block font-medium text-default`, container: `mt-1 relative`, description: `text-muted`, error: `mt-2 text-error`, hint: `text-muted`, help: `mt-2 text-muted` }, variants: { size: { xs: { root: `text-xs` }, sm: { root: `text-xs` }, md: { root: `text-sm` }, lg: { root: `text-sm` }, xl: { root: `text-base` } }, required: { true: { label: `after:content-['*'] after:ms-0.5 after:text-error` } } }, defaultVariants: { size: `md` } };
const O = [`id`], k = [`id`], A = [`id`], j = { __name: `FormField`, props: { as: { type: null, required: false }, name: { type: String, required: false }, errorPattern: { type: null, required: false }, label: { type: String, required: false }, description: { type: String, required: false }, help: { type: String, required: false }, error: { type: [String, Boolean], required: false }, hint: { type: String, required: false }, size: { type: null, required: false }, required: { type: Boolean, required: false }, eagerValidation: { type: Boolean, required: false }, validateOnInputDelay: { type: Number, required: false }, class: { type: null, required: false }, ui: { type: null, required: false } }, setup(s2) {
  let l2 = s2, T2 = v(), j2 = w(), M2 = e(() => {
    var _a;
    return C({ extend: C(D), ...((_a = j2.ui) == null ? void 0 : _a.formField) || {} })({ size: l2.size, required: l2.required });
  }), N = c(`form-errors`, null), P = e(() => {
    var _a, _b;
    return l2.error || ((_b = (_a = N == null ? void 0 : N.value) == null ? void 0 : _a.find((e2) => e2.name && (e2.name === l2.name || l2.errorPattern && e2.name.match(l2.errorPattern)))) == null ? void 0 : _b.message);
  }), F = p(_()), I = F.value;
  return f(S, F), f(x, e(() => ({ error: P.value, name: l2.name, size: l2.size, eagerValidation: l2.eagerValidation, validateOnInputDelay: l2.validateOnInputDelay, errorPattern: l2.errorPattern, hint: l2.hint, description: l2.description, help: l2.help, ariaId: I }))), (e2, c2) => {
    var _a;
    return d(), n(g(b), { as: s2.as, class: u(M2.value.root({ class: [(_a = l2.ui) == null ? void 0 : _a.root, l2.class] })) }, { default: y(() => {
      var _a2, _b, _c, _d, _e, _f, _g, _h;
      return [t(`div`, { class: u(M2.value.wrapper({ class: (_a2 = l2.ui) == null ? void 0 : _a2.wrapper })) }, [s2.label || T2.label ? (d(), i(`div`, { key: 0, class: u(M2.value.labelWrapper({ class: (_b = l2.ui) == null ? void 0 : _b.labelWrapper })) }, [o(g(E), { for: F.value, class: u(M2.value.label({ class: (_c = l2.ui) == null ? void 0 : _c.label })) }, { default: y(() => [m(e2.$slots, `label`, { label: s2.label }, () => [a(h(s2.label), 1)])]), _: 3 }, 8, [`for`, `class`]), s2.hint || T2.hint ? (d(), i(`span`, { key: 0, id: `${g(I)}-hint`, class: u(M2.value.hint({ class: (_d = l2.ui) == null ? void 0 : _d.hint })) }, [m(e2.$slots, `hint`, { hint: s2.hint }, () => [a(h(s2.hint), 1)])], 10, O)) : r(``, true)], 2)) : r(``, true), s2.description || T2.description ? (d(), i(`p`, { key: 1, id: `${g(I)}-description`, class: u(M2.value.description({ class: (_e = l2.ui) == null ? void 0 : _e.description })) }, [m(e2.$slots, `description`, { description: s2.description }, () => [a(h(s2.description), 1)])], 10, k)) : r(``, true)], 2), t(`div`, { class: u([(s2.label || !!T2.label || s2.description || !!T2.description) && M2.value.container({ class: (_f = l2.ui) == null ? void 0 : _f.container })]) }, [m(e2.$slots, `default`, { error: P.value }), typeof P.value == `string` && P.value || T2.error ? (d(), i(`div`, { key: 0, id: `${g(I)}-error`, class: u(M2.value.error({ class: (_g = l2.ui) == null ? void 0 : _g.error })) }, [m(e2.$slots, `error`, { error: P.value }, () => [a(h(P.value), 1)])], 10, A)) : s2.help || T2.help ? (d(), i(`div`, { key: 1, class: u(M2.value.help({ class: (_h = l2.ui) == null ? void 0 : _h.help })) }, [m(e2.$slots, `help`, { help: s2.help }, () => [a(h(s2.help), 1)])], 2)) : r(``, true)], 2)];
    }), _: 3 }, 8, [`as`, `class`]);
  };
} };
var M = j;
export {
  M as FormField_default,
  E as _sfc_main$23
};
