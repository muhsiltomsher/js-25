import { computed as e, createBaseVNode as t, createBlock as n, createCommentVNode as r, createElementBlock as i, mergeModels as a, mergeProps as o, normalizeClass as s, onMounted as c, openBlock as l, ref as u, renderSlot as d, unref as f, useModel as p, useSlots as m, withCtx as ee } from "./runtime-core.esm-bundler-CFIgNHFT.min.js";
import { Icon_default as h, Primitive as g, looseToNumber as _, tv as v, useAppConfig as y, useFormField as te } from "./Link-83qDN5tY.min.js";
import { Avatar_default as b, useButtonGroup as x, useComponentIcons as S } from "./Button-DeZRGJ9-.min.js";
var C = { slots: { root: `relative inline-flex items-center`, base: [`w-full rounded-md border-0 placeholder:text-dimmed focus:outline-none disabled:cursor-not-allowed disabled:opacity-75`, `transition-colors`], leading: `absolute inset-y-0 start-0 flex items-center`, leadingIcon: `shrink-0 text-dimmed`, leadingAvatar: `shrink-0`, leadingAvatarSize: ``, trailing: `absolute inset-y-0 end-0 flex items-center`, trailingIcon: `shrink-0 text-dimmed` }, variants: { buttonGroup: { horizontal: { root: `group has-focus-visible:z-[1]`, base: `group-not-only:group-first:rounded-e-none group-not-only:group-last:rounded-s-none group-not-last:group-not-first:rounded-none` }, vertical: { root: `group has-focus-visible:z-[1]`, base: `group-not-only:group-first:rounded-b-none group-not-only:group-last:rounded-t-none group-not-last:group-not-first:rounded-none` } }, size: { xs: { base: `px-2 py-1 text-xs gap-1`, leading: `ps-2`, trailing: `pe-2`, leadingIcon: `size-4`, leadingAvatarSize: `3xs`, trailingIcon: `size-4` }, sm: { base: `px-2.5 py-1.5 text-xs gap-1.5`, leading: `ps-2.5`, trailing: `pe-2.5`, leadingIcon: `size-4`, leadingAvatarSize: `3xs`, trailingIcon: `size-4` }, md: { base: `px-2.5 py-1.5 text-sm gap-1.5`, leading: `ps-2.5`, trailing: `pe-2.5`, leadingIcon: `size-5`, leadingAvatarSize: `2xs`, trailingIcon: `size-5` }, lg: { base: `px-3 py-2 text-sm gap-2`, leading: `ps-3`, trailing: `pe-3`, leadingIcon: `size-5`, leadingAvatarSize: `2xs`, trailingIcon: `size-5` }, xl: { base: `px-3 py-2 text-base gap-2`, leading: `ps-3`, trailing: `pe-3`, leadingIcon: `size-6`, leadingAvatarSize: `xs`, trailingIcon: `size-6` } }, variant: { outline: `text-highlighted bg-default ring ring-inset ring-accented`, soft: `text-highlighted bg-elevated/50 hover:bg-elevated focus:bg-elevated disabled:bg-elevated/50`, subtle: `text-highlighted bg-elevated ring ring-inset ring-accented`, ghost: `text-highlighted bg-transparent hover:bg-elevated focus:bg-elevated disabled:bg-transparent dark:disabled:bg-transparent`, none: `text-highlighted bg-transparent` }, color: { primary: ``, secondary: ``, success: ``, info: ``, warning: ``, error: ``, neutral: `` }, leading: { true: `` }, trailing: { true: `` }, loading: { true: `` }, highlight: { true: `` }, type: { file: `file:me-1.5 file:font-medium file:text-muted file:outline-none` } }, compoundVariants: [{ color: `primary`, variant: [`outline`, `subtle`], class: `focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-primary` }, { color: `secondary`, variant: [`outline`, `subtle`], class: `focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-secondary` }, { color: `success`, variant: [`outline`, `subtle`], class: `focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-success` }, { color: `info`, variant: [`outline`, `subtle`], class: `focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-info` }, { color: `warning`, variant: [`outline`, `subtle`], class: `focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-warning` }, { color: `error`, variant: [`outline`, `subtle`], class: `focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-error` }, { color: `primary`, highlight: true, class: `ring ring-inset ring-primary` }, { color: `secondary`, highlight: true, class: `ring ring-inset ring-secondary` }, { color: `success`, highlight: true, class: `ring ring-inset ring-success` }, { color: `info`, highlight: true, class: `ring ring-inset ring-info` }, { color: `warning`, highlight: true, class: `ring ring-inset ring-warning` }, { color: `error`, highlight: true, class: `ring ring-inset ring-error` }, { color: `neutral`, variant: [`outline`, `subtle`], class: `focus-visible:ring-2 focus-visible:ring-inset focus-visible:ring-inverted` }, { color: `neutral`, highlight: true, class: `ring ring-inset ring-inverted` }, { leading: true, size: `xs`, class: `ps-7` }, { leading: true, size: `sm`, class: `ps-8` }, { leading: true, size: `md`, class: `ps-9` }, { leading: true, size: `lg`, class: `ps-10` }, { leading: true, size: `xl`, class: `ps-11` }, { trailing: true, size: `xs`, class: `pe-7` }, { trailing: true, size: `sm`, class: `pe-8` }, { trailing: true, size: `md`, class: `pe-9` }, { trailing: true, size: `lg`, class: `pe-10` }, { trailing: true, size: `xl`, class: `pe-11` }, { loading: true, leading: true, class: { leadingIcon: `animate-spin` } }, { loading: true, leading: false, trailing: true, class: { trailingIcon: `animate-spin` } }], defaultVariants: { size: `md`, color: `primary`, variant: `outline` } };
const w = [`id`, `type`, `value`, `name`, `placeholder`, `disabled`, `required`, `autocomplete`], T = Object.assign({ inheritAttrs: false }, { __name: `Input`, props: a({ as: { type: null, required: false }, id: { type: String, required: false }, name: { type: String, required: false }, type: { type: null, required: false, default: `text` }, placeholder: { type: String, required: false }, color: { type: null, required: false }, variant: { type: null, required: false }, size: { type: null, required: false }, required: { type: Boolean, required: false }, autocomplete: { type: null, required: false, default: `off` }, autofocus: { type: Boolean, required: false }, autofocusDelay: { type: Number, required: false, default: 0 }, disabled: { type: Boolean, required: false }, highlight: { type: Boolean, required: false }, modelModifiers: { type: Object, required: false }, class: { type: null, required: false }, ui: { type: null, required: false }, icon: { type: String, required: false }, avatar: { type: Object, required: false }, leading: { type: Boolean, required: false }, leadingIcon: { type: String, required: false }, trailing: { type: Boolean, required: false }, trailingIcon: { type: String, required: false }, loading: { type: Boolean, required: false }, loadingIcon: { type: String, required: false } }, { modelValue: { type: null }, modelModifiers: {} }), emits: a([`update:modelValue`, `blur`, `change`], [`update:modelValue`]), setup(a2, { expose: T2, emit: E2 }) {
  let D = a2, O = E2, k = m(), [A, j] = p(a2, `modelValue`), M = y(), { emitFormBlur: N, emitFormInput: P, emitFormChange: F, size: I, color: L, id: R, name: z, highlight: B, disabled: V, emitFormFocus: H, ariaAttrs: U } = te(D, { deferInputValidation: true }), { orientation: W, size: G } = x(D), { isLeading: K, isTrailing: q, leadingIconName: J, trailingIconName: Y } = S(D), X = e(() => G.value || I.value), Z = e(() => {
    var _a;
    return v({ extend: v(C), ...((_a = M.ui) == null ? void 0 : _a.input) || {} })({ type: D.type, color: L.value, variant: D.variant, size: X == null ? void 0 : X.value, loading: D.loading, highlight: B.value, leading: K.value || !!D.avatar || !!k.leading, trailing: q.value || !!k.trailing, buttonGroup: W.value });
  }), Q = u(null);
  function $(e2) {
    j.trim && (e2 = (e2 == null ? void 0 : e2.trim()) ?? null), (j.number || D.type === `number`) && (e2 = _(e2)), j.nullify && (e2 || (e2 = null)), A.value = e2, P();
  }
  function ne(e2) {
    j.lazy || $(e2.target.value);
  }
  function re(e2) {
    let t2 = e2.target.value;
    j.lazy && $(t2), j.trim && (e2.target.value = t2.trim()), F(), O(`change`, e2);
  }
  function ie(e2) {
    N(), O(`blur`, e2);
  }
  function ae() {
    var _a;
    D.autofocus && ((_a = Q.value) == null ? void 0 : _a.focus());
  }
  return c(() => {
    setTimeout(() => {
      ae();
    }, D.autofocusDelay);
  }), T2({ inputRef: Q }), (e2, c2) => {
    var _a;
    return l(), n(f(g), { as: a2.as, class: s(Z.value.root({ class: [(_a = D.ui) == null ? void 0 : _a.root, D.class] })) }, { default: ee(() => {
      var _a2, _b, _c;
      return [t(`input`, o({ id: f(R), ref_key: `inputRef`, ref: Q, type: a2.type, value: f(A), name: f(z), placeholder: a2.placeholder, class: Z.value.base({ class: (_a2 = D.ui) == null ? void 0 : _a2.base }), disabled: f(V), required: a2.required, autocomplete: a2.autocomplete }, { ...e2.$attrs, ...f(U) }, { onInput: ne, onBlur: ie, onChange: re, onFocus: c2[0] || (c2[0] = (...e3) => f(H) && f(H)(...e3)) }), null, 16, w), d(e2.$slots, `default`), f(K) || a2.avatar || k.leading ? (l(), i(`span`, { key: 0, class: s(Z.value.leading({ class: (_b = D.ui) == null ? void 0 : _b.leading })) }, [d(e2.$slots, `leading`, {}, () => {
        var _a3, _b2, _c2;
        return [f(K) && f(J) ? (l(), n(h, { key: 0, name: f(J), class: s(Z.value.leadingIcon({ class: (_a3 = D.ui) == null ? void 0 : _a3.leadingIcon })) }, null, 8, [`name`, `class`])) : a2.avatar ? (l(), n(b, o({ key: 1, size: ((_b2 = D.ui) == null ? void 0 : _b2.leadingAvatarSize) || Z.value.leadingAvatarSize() }, a2.avatar, { class: Z.value.leadingAvatar({ class: (_c2 = D.ui) == null ? void 0 : _c2.leadingAvatar }) }), null, 16, [`size`, `class`])) : r(``, true)];
      })], 2)) : r(``, true), f(q) || k.trailing ? (l(), i(`span`, { key: 1, class: s(Z.value.trailing({ class: (_c = D.ui) == null ? void 0 : _c.trailing })) }, [d(e2.$slots, `trailing`, {}, () => {
        var _a3;
        return [f(Y) ? (l(), n(h, { key: 0, name: f(Y), class: s(Z.value.trailingIcon({ class: (_a3 = D.ui) == null ? void 0 : _a3.trailingIcon })) }, null, 8, [`name`, `class`])) : r(``, true)];
      })], 2)) : r(``, true)];
    }), _: 3 }, 8, [`as`, `class`]);
  };
} });
var E = T;
export {
  E as Input_default
};
