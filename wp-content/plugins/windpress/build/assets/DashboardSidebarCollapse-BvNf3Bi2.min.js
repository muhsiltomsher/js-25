import { Fragment as e, computed as t, createBaseVNode as n, createBlock as r, createCommentVNode as i, createElementBlock as a, createTextVNode as o, createVNode as s, guardReactiveProps as c, mergeProps as l, normalizeClass as u, normalizeProps as d, normalizeStyle as f, openBlock as p, ref as m, renderSlot as h, toDisplayString as g, toRef as _, unref as v, useId as y, useSlots as b, withCtx as x } from "./runtime-core.esm-bundler-CFIgNHFT.min.js";
import { Icon_default as S, Primitive as C, useAppConfig as w, useForwardProps as T } from "./Link-83qDN5tY.min.js";
import { createReusableTemplate as E, reactivePick as D } from "./core-DXhlFaDq.min.js";
import { tv$1 as O } from "./tv-CD-q12eC.min.js";
import { DashboardResizeHandle_default as k, DashboardSidebarToggle_default as A, useDashboard as j, useLocalePro as M, useResizable as N } from "./namespaced-bbeQqhxC.min.js";
import { Button_default as P } from "./Button-DeZRGJ9-.min.js";
var F = { slots: { root: `relative flex flex-col min-w-0 min-h-svh lg:not-last:border-r lg:not-last:border-default shrink-0`, body: `flex flex-col gap-4 sm:gap-6 flex-1 overflow-y-auto p-4 sm:p-6`, handle: `` }, variants: { size: { true: { root: `w-full lg:w-(--width)` }, false: { root: `flex-1` } } } };
const I = [`data-dragging`], L = { __name: `DashboardPanel`, props: { class: { type: null, required: false }, ui: { type: null, required: false }, id: { type: String, required: false }, minSize: { type: Number, required: false, default: 15 }, maxSize: { type: Number, required: false }, defaultSize: { type: Number, required: false }, resizable: { type: Boolean, required: false, default: false } }, setup(o2) {
  let s2 = o2, c2 = w(), l2 = j({ storageKey: `dashboard`, unit: `%` }), d2 = `${l2.storageKey}-panel-${s2.id || y()}`, { el: m2, size: g2, isDragging: b2, onMouseDown: x2, onTouchStart: S2 } = N(d2, _(() => ({ ...l2, ...s2 }))), C2 = t(() => {
    var _a;
    return O({ extend: O(F), ...((_a = c2.uiPro) == null ? void 0 : _a.dashboardPanel) || {} })({ size: !!g2.value });
  });
  return (t2, c3) => {
    var _a;
    let _2 = k;
    return p(), a(e, null, [n(`div`, { id: d2, ref_key: `el`, ref: m2, "data-dragging": v(b2), class: u(C2.value.root({ class: [(_a = s2.ui) == null ? void 0 : _a.root, s2.class] })), style: f([v(g2) ? { "--width": `${v(g2)}${v(l2).unit}` } : void 0]) }, [h(t2.$slots, `default`, {}, () => {
      var _a2;
      return [h(t2.$slots, `header`), n(`div`, { class: u(C2.value.body({ class: (_a2 = s2.ui) == null ? void 0 : _a2.body })) }, [h(t2.$slots, `body`)], 2), h(t2.$slots, `footer`)];
    })], 14, I), h(t2.$slots, `resize-handle`, { onMouseDown: v(x2), onTouchStart: v(S2) }, () => {
      var _a2;
      return [o2.resizable ? (p(), r(_2, { key: 0, "aria-controls": d2, class: u(C2.value.handle({ class: (_a2 = s2.ui) == null ? void 0 : _a2.handle })), onMousedown: v(x2), onTouchstart: v(S2) }, null, 8, [`class`, `onMousedown`, `onTouchstart`])) : i(``, true)];
    })], 64);
  };
} };
var R = L, z = { slots: { root: `h-(--ui-header-height) shrink-0 flex items-center justify-between border-b border-default px-4 sm:px-6 gap-1.5`, left: `flex items-center gap-1.5 min-w-0`, icon: `shrink-0 size-5 self-center me-1.5`, title: `flex items-center gap-1.5 font-semibold text-highlighted truncate`, center: `hidden lg:flex`, right: `flex items-center shrink-0 gap-1.5`, toggle: `` }, variants: { toggleSide: { left: { toggle: `` }, right: { toggle: `` } } } };
const B = { __name: `DashboardNavbar`, props: { as: { type: null, required: false }, icon: { type: String, required: false }, title: { type: String, required: false }, toggle: { type: [Boolean, Object], required: false, default: true }, toggleSide: { type: String, required: false, default: `left` }, class: { type: null, required: false }, ui: { type: null, required: false } }, setup(f2) {
  let m2 = f2, _2 = b(), y2 = w(), T2 = j({}), [D2, k2] = E(), M2 = t(() => {
    var _a;
    return O({ extend: O(z), ...((_a = y2.uiPro) == null ? void 0 : _a.dashboardNavbar) || {} })();
  });
  return (t2, y3) => {
    var _a;
    let b2 = A, w2 = S;
    return p(), a(e, null, [s(v(D2), null, { default: x(() => [h(t2.$slots, `toggle`, d(c(v(T2))), () => {
      var _a2;
      return [f2.toggle ? (p(), r(b2, l({ key: 0 }, typeof f2.toggle == `object` ? f2.toggle : {}, { side: f2.toggleSide, class: M2.value.toggle({ class: (_a2 = m2.ui) == null ? void 0 : _a2.toggle, toggleSide: f2.toggleSide }) }), null, 16, [`side`, `class`])) : i(``, true)];
    })]), _: 3 }), s(v(C), { as: f2.as, class: u(M2.value.root({ class: [(_a = m2.ui) == null ? void 0 : _a.root, m2.class] })) }, { default: x(() => {
      var _a2, _b, _c;
      return [n(`div`, { class: u(M2.value.left({ class: (_a2 = m2.ui) == null ? void 0 : _a2.left })) }, [f2.toggleSide === `left` ? (p(), r(v(k2), { key: 0 })) : i(``, true), h(t2.$slots, `left`, d(c(v(T2))), () => {
        var _a3;
        return [h(t2.$slots, `leading`, d(c(v(T2))), () => {
          var _a4;
          return [f2.icon ? (p(), r(w2, { key: 0, name: f2.icon, class: u(M2.value.icon({ class: (_a4 = m2.ui) == null ? void 0 : _a4.icon })) }, null, 8, [`name`, `class`])) : i(``, true)];
        }), n(`h1`, { class: u(M2.value.title({ class: (_a3 = m2.ui) == null ? void 0 : _a3.title })) }, [h(t2.$slots, `title`, {}, () => [o(g(f2.title), 1)])], 2), h(t2.$slots, `trailing`, d(c(v(T2))))];
      })], 2), _2.default ? (p(), a(`div`, { key: 0, class: u(M2.value.center({ class: (_b = m2.ui) == null ? void 0 : _b.center })) }, [h(t2.$slots, `default`, d(c(v(T2))))], 2)) : i(``, true), n(`div`, { class: u(M2.value.right({ class: (_c = m2.ui) == null ? void 0 : _c.right })) }, [h(t2.$slots, `right`, d(c(v(T2)))), f2.toggleSide === `right` ? (p(), r(v(k2), { key: 0 })) : i(``, true)], 2)];
    }), _: 3 }, 8, [`as`, `class`])], 64);
  };
} };
var V = B, H = { base: `hidden lg:flex`, variants: { side: { left: ``, right: `` } } };
const U = { __name: `DashboardSidebarCollapse`, props: { side: { type: String, required: false, default: `left` }, color: { type: null, required: false, default: `neutral` }, variant: { type: null, required: false, default: `ghost` }, class: { type: null, required: false } }, setup(e2) {
  let n2 = e2, i2 = T(D(n2, `color`, `variant`, `size`)), { t: a2 } = M(), o2 = w(), { sidebarCollapsed: s2, collapseSidebar: c2 } = j({ sidebarCollapsed: m(false), collapseSidebar: () => {
  } }), u2 = t(() => {
    var _a;
    return O({ extend: O(H), ...((_a = o2.uiPro) == null ? void 0 : _a.dashboardSidebarCollapse) || {} });
  });
  return (e3, t2) => {
    let d2 = P;
    return p(), r(d2, l(v(i2), { "aria-label": v(s2) ? v(a2)(`dashboardSidebarCollapse.expand`) : v(a2)(`dashboardSidebarCollapse.collapse`), icon: v(s2) ? v(o2).ui.icons.panelOpen : v(o2).ui.icons.panelClose, class: u2.value({ class: n2.class, side: n2.side }), onClick: t2[0] || (t2[0] = (e4) => {
      var _a;
      return (_a = v(c2)) == null ? void 0 : _a(!v(s2));
    }) }), null, 16, [`aria-label`, `icon`, `class`]);
  };
} };
var W = U;
export {
  V as DashboardNavbar_default,
  R as DashboardPanel_default,
  W as DashboardSidebarCollapse_default
};
